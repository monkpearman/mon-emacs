
slime-loads-GNU-clbuild.el,3366
(defgroup mon-slime 319,11951
(defcustom *mon-slime-xrefs*345,13692
(defgroup mon-qucklisp 403,16508
(defcustom *quicklisp-path* 445,18550
(defun quicklisp-find-slime 473,19864
(defun quicklisp-current-swank-loader 528,22532
(defun quicklisp-write-dot-swank-loader 583,25691
(defun quicklisp-write-dot-swank-loader-if 628,28042
(defun quicklisp-dot-swank-current-p 654,29446
(defvar *quicklisp-systems* 693,31395
(defun quicklisp-hash-system-completions 712,32189
(defun quicklisp-system-complete 759,34831
(defun quicklisp-system-complete-if 784,35918
(defun quicklisp-hash-system-completions-slime-loadtime 801,36781
(defcustom *mon-lisp-system-paths* 883,41386
(defun mon-add-lisp-system-paths-to-tags-table-list 920,43487
(defun mon-lisp-set-indent 960,45656
(defun mon-lisp-set-indent-hook 974,46274
(defun mon-slime-setup-add-hooks 986,46754
(defun mon-slime-ensure-file-local-variables 1027,48602
(defun mon-slime-ensure-fasl-temp-directory-exists 1045,49478
(defun mon-slime-setup-init 1066,50568
(defun slime-fuzzy-sroll-completions-up-from-target-buffer 1260,59001
(defun slime-fuzzy-sroll-completions-down-from-target-buffer 1265,59161
(defun mon-define-common-lisp-style 1274,59391
(defun slime-macroexpand-again-fix 1315,61137
(defun slime-highlight-sexp 1381,63959
(defun mon-slime-compile-defun-for-debug 1463,67766
(defun mon-insert-slime-arglist 1483,68596
(defun %slime-insert-integer-at-point 1510,69507
(defun slime-insert-integer-at-point 1513,69605
(defun mon-next-xref-slime 1535,70584
(defun mon-prev-xref-slime 1550,71324
(defun mon-quit-slime-description-window 1565,71981
(defun mon-slime-description-view-source-file 1591,73232
(defvar *slime-show-description-hook* 1638,75118
(defvar *slime-local-show-description-hook* 1640,75162
(defun mon-slime-setup-show-description-buffer-locals 1644,75324
(defun mon-slime-show-description 1655,76042
(defun mon-slime-copy-presentation-at-point-to-kill-ring-no-propso 1685,77362
(defun mon-slime-copy-presentation-to-kill-ring-no-props 1699,78101
(defun mon-slime-start-sbcl 1717,79004
(defgroup slime-quicklisp-inspect 1883,87061
(defvar *slime-quicklisp-systems* 1899,87809
(defun slime-make-quicklisp-completion-table 1926,88987
(defun slime-quicklisp-get-process-start-time 1974,91591
(defun slime-quicklisp-completion-table-put-hash-meta 2005,93024
(defun slime-quicklisp-completion-table-get-hash-meta 2045,95290
(defun slime-quicklisp-completion-table-get-hash-count 2071,96516
(defun slime-quicklisp-completion-table-get-hashed-last 2099,97996
(defun slime-quicklisp-completion-table-compare-hashed-last 2121,99124
(defun slime-quicklisp-completion-table-get-ql-hash-count 2159,101242
(defun slime-quicklisp-completion-table-compare-hash-counts 2179,102216
(defun slime-get-quicklisp-system-completions 2207,103566
(defun slime-inspect-quicklisp-system 2276,106989
(defun slime-inspect-quicklisp-systems 2304,108343
(defun slime-quicklisp-open-inspector-if 2316,108915
(defun slime-inspect-quicklisp-release 2325,109386
(defun slime-inspect-quicklisp-apropos 2339,109980
(defun slime-inspect-asdf-defined-systems 2354,110650
(defun slime-inspect-asdf-system 2367,111268
(defvar *slime-echo-arglist-STFU* 2447,115070
(defun slime-echo-arglist-behave-or-back-to-your-cage 2461,115734
(defun slime-echo-arglist-STFU 2472,116280

naf-mode/mon-word-syntax-utils.el,452
(defun mon-get-syntax-at 140,4782
(defun mon-get-syntax-class-at 165,6015
(defun mon-line-test-content 196,7343
(defun mon-word-get-next 327,15721
(defun mon-word-get-list-in-buffer 356,16771
(defun mon-word-reverse-region 410,19266
(defun mon-word-iterate-over 452,20949
(defun mon-word-count-analysis 481,22203
(defun mon-word-count-occurrences 521,24279
(defun mon-word-count-region 629,30455
(defun mon-word-count-chars-region 646,31119

naf-mode/naf-mode-awards-prizes.el,137
(defvar *naf-mode-awards-prizes-xrefs*76,2644
(defvar *naf-awards-prizes-names*88,3159
(defconst naf-mode-awards-prizes-names106,3695

naf-mode/mon-image-utils.el,318
(defgroup mon-image-utils 136,4418
(defcustom *mon-image-identify-delim* 153,5223
(defun mon-image-identify 166,5756
(defun mon-image-rotate 212,7944
(defun mon-image-verify-type 234,9192
(defun mon-get-image-dimensions 307,13088
(defun mon-get-image-dimensions-im 321,13742
(defun mon-get-image-md5 343,14760

naf-mode/naf-mode-ulan-help-docs.el,46
(defun mon-help-naf-mode-ulan-flags 107,3408

naf-mode/mon-call-tree.el,157
(defvar *mon-call-tree-alist* 47,2058
(defun mon-call-tree-analyze 59,2619
(defun mon-call-tree-add 116,4784
(defun mon-call-tree-update-header 140,5752

naf-mode/mon-buffer-utils.el,975
(defgroup mon-buffer-utils 145,5116
(defcustom *mon-buffer-utils-xrefs* 165,6138
(defcustom *mon-get-hidden-buffers-known* 192,7458
(defun mon-g2be 248,10009
(defun mon-buffer-sub-no-prop 337,14430
(defun mon-buffer-sub-no-prop-check 382,16698
(defun mon-buffer-narrowed-p 531,26160
(defun mon-buffer-empty-p 591,29151
(defun mon-buffer-exists-so-kill 618,30345
(defun mon-buffer-name-is-file-name-p 640,31554
(defun mon-get-buffer-hidden 705,34894
(defun mon-get-buffer-hidden-if 766,37862
(defun mon-buffer-kill-hidden-if 787,38960
(defun mon-get-buffer-window-if 812,40291
(defun mon-print-buffer-object-readably 830,41226
(defun mon-get-buffer-w-mode 865,42956
(defun mon-buffer-check-local-value 895,44664
(defun mon-buffer-check-major-mode 928,46523
(defun mon-buffer-longlines-mode-p 948,47715
(defun mon-buffer-name->kill-ring 993,49680
(defun mon-append-to-buffer 1031,51502
(defun mon-make-shell-buffer 1067,53037
(defun mon-shell 1109,54984

naf-mode/mon-event-utils.el,1051
(defcustom *mon-popup-pos-x-offset* 159,5756
(defun mon-inhibit-read-only 171,6092
(defun mon-inhibit-modification-hooks 201,7418
(defun mon-inhibit-point-motion-hooks 218,8193
(defun mon-toggle-read-only-point-motion 241,9287
(defun mon-toggle-truncate-line 259,10077
(defun mon-scroll-down-in-place 283,11126
(defun mon-scroll-up-in-place 296,11681
(defun mon-line-move-n 316,12566
(defun mon-line-move-next 333,13328
(defun mon-line-move-prev 348,14066
(defun mon-read-keys-as-string 364,14854
(defun mon-read-multiple 407,16960
(defun mon-postion-for-x-popup-menu 503,22722
(defun mon-choose-from-menu 520,23547
(defun mon-test-keypresses 548,24805
(defun mon-decode-meta-key-event 578,26309
(defun mon-catch-meta-key 598,27173
(defun mon-abort-recursive-edit 644,29381
(defun mon-abort-autosave-when-fucked 661,30106
(defvar *mon-ascii-cursor-state* 705,32609
(defun mon-rotate-ascii-cursor 713,32993
(defun mon-kill-appending 762,35391
(defun mon-append-to-register 776,35969
(defun mon-multi-isearch-rmv-hook 798,37193

naf-mode/mon-empty-registers.el,785
(defvar *mon-register-config-tags* 137,4681
(defun* mon-set-register->tags 187,7257
(defun mon-set-register->tags-semic 223,9286
(defun mon-set-register->tags-sharp 233,9708
(defun mon-make-set-register->tags-docs 243,10129
(defun mon-set-register-tags-loadtime 290,12162
(defvar *mon-cntl-char-registers* 362,16382
(defun mon-cntl-char-registers-loadtime 381,17213
(defvar *mon-digit-registers* 444,20868
(defvar *mon-digit-shifted-registers* 469,22077
(defvar *mon-symbol-registers* 497,23514
(defvar *mon-upper-case-registers* 521,24815
(defvar *mon-lower-case-registers* 549,26180
(defvar *mon-registr-of-registers* 580,27848
(defun mon-query-replace-register1<-reg2 612,29329
(cl-defun mon-reset-registers 642,30904
(defun mon-set-all-registers-to-char 716,33978

naf-mode/mon-cl-compat-regexps.el,251
(defvar *regexp-clean-cl-symbols* 186,7810
(defvar *clean-cl-symbols-with-regexp*224,9718
(defun mon-CL-escape-star 435,19019
(defun mon-CL-escape-regexp 476,20829
(defun mon-CL-namespace-colonic 516,22839
(defun mon-CL-cln-colon-swap 532,23765

naf-mode/mon-plist-utils.el,263
(defgroup mon-plist-utils 120,3285
(defcustom *mon-plist-utils-xrefs* 135,4088
(defun mon-plist-keys 188,6177
(defun mon-plist-values 214,7299
(defun mon-plist-remove! 253,9219
(defun mon-plist-remove-consing 303,11562
(defun mon-plist-remove-if 325,12665

naf-mode/naf-mode-group-period-styles.el,48
(defconst naf-mode-group-period-styles172,4314

naf-mode/mon-seq-utils.el,2188
(defgroup mon-seq-utils 249,8036
(defcustom *mon-seq-utils-xrefs* 266,8885
(defun mon-elt-> 303,10918
(defun mon-elt-< 317,11633
(defun mon-elt->elt 333,12518
(defun mon-elt-<elt 348,13290
(defun mon-maybe-cons 384,15353
(defun mon-delq-cons 406,16434
(defun mon-list-nshuffle 443,18167
(defun mon-list-shuffle-safe 501,21407
(defun mon-delq-dups 554,24088
(defun mon-deleql-dups 585,25508
(defun mon-delete-first 617,27125
(defun mon-list-last 651,28700
(defun mon-list-make-unique 690,30437
(defun mon-remove-dups 731,32852
(defun mon-list-filter 756,34036
(defun mon-list-match-tails 788,35473
(defun mon-list-add-non-nil 822,37277
(defun mon-list-ensure 869,39645
(defun %mon-list-reorder 891,40472
(defun mon-list-reorder 916,41520
(defun mon-union 1026,47471
(defun mon-member-if 1061,49052
(defun mon-delete-if 1088,50332
(defun mon-remove-if-not 1125,51939
(defun mon-remove-if 1155,53477
(defun mon-intersection 1189,55337
(defun mon-set-difference 1286,60306
(defun mon-pairlis 1340,62994
(defun mon-map 1370,64580
(defun mon-map1 1468,70638
(defun mon-mapc 1545,74682
(defun mon-mapcar 1572,75993
(defun mon-mapcan 1615,77796
(defun mon-mapl 1657,79732
(defun mon-mapcon 1706,82034
(defun mon-maplist 1726,83173
(defun mon-subseq 1766,85272
(defun %mon-edmacro-subseq 1860,89659
(defun mon-sublist 1893,90925
(defun mon-sublist-gutted 1922,92429
(defun mon-map-append 1951,94045
(defun mon-assoc-replace 1974,95401
(defmacro mon-moveq 2001,97051
(defun mon-flatten 2025,98302
(defun mon-list-flatten-rotated 2068,100512
(defun mon-transpose 2087,101345
(defun mon-list-intersperse 2113,102633
(defun mon-every 2149,104343
(defun* mon-mismatch 2202,107073
(defun mon-maptree 2228,108729
(defun mon-recursive-apply 2262,110503
(defun mon-list-merge 2287,111953
(defun mon-combine 2312,113120
(defun mon-list-variant-forms 2358,115615
(defun mon-list-permute-variants 2390,117141
(defun mon-list-permute-1 2412,118174
(defun mon-list-permute-2 2448,120105
(defun mon-permute-combine 2475,121386
(defun mon-permute-combine-1 2517,123491
(defun mon-list-string-longest 2566,126021
(defun mon-bool-vector-pp 2604,128072

naf-mode/mon-randomize-utils.el,317
(defun mon-next-almost-prime 137,4454
(defun mon-gensym-counter-randomizer 191,6578
(defun mon-mix-fields 297,11804
(defun mon-make-random-state 314,12423
(defun mon-generate-prand-id 341,13572
(defun mon-generate-prand-seed 374,15040
(defun mon-string-wonkify 431,17857
(defun mon-generate-WPA-key 488,20823

naf-mode/mon-testme-utils.el,2508
(defgroup mon-testme-utils 168,6639
(defcustom *mon-testme-utils-xrefs* 184,7511
(defun mon-insert-lisp-testme 222,9714
(defun mon-insert-test-cases 297,13356
(defun mon-gensym-counter-randomizer-TEST 337,15365
(defun mon-list-nshuffle-TEST 384,17901
(defun mon-line-strings-to-list-TEST 419,19621
(defun mon-with-inhibit-buffer-read-only-PP-TEST 459,21304
(defun mon-with-inhibit-buffer-read-only-TEST 484,22494
(defun mon-line-dolines-setup-TEST 525,24555
(defun mon-line-dolines-TEST 578,27036
(defun mon-with-buffer-undo-disabled-TEST 651,30963
(defun mon-string-split-TEST 683,32544
(defun mon-line-strings-bq-qt-sym-bol-TEST 722,34557
(defun mon-help-CL-wget-pkgs-TEST 760,36459
(defun mon-build-copyright-string-TEST 821,39531
(defun google-define-get-command-TEST 910,44856
(defun mon-permute-combine-functions-TEST 934,45981
(defun mon-write-string-reset-bind-TEST 1011,49759
(defun mon-region-capitalize-TEST 1087,53475
(defun naf-mode-state-to-postal-TEST 1127,55316
(defun mon-booleanp-to-binary-TEST 1142,56025
(defun mon-sequence-all-booleanp-TEST 1178,57763
(defun mon-string-or-null-and-zerop-TEST 1227,60683
(defun mon-error-protect-PP-EXPAND-TEST 1262,62349
(defun mon-line-string-rotate-name-TEST 1280,62997
(defun mon-line-indent-from-to-col-TEST 1316,64992
(defun mon-line-strings-pipe-to-col-TEST 1360,67404
(defun mon-line-string-insert-chars-under-TEST 1395,69217
(defun mon-list-reorder-TEST 1424,70651
(defun mon-regexp-clean-ulan-dispatch-chars-TEST 1493,74607
(defun mon-set-buffer-substring-no-properties-TEST 1563,77944
(defun mon-plist-keys-TEST 1598,79420
(defun mon-plist-values-TEST 1616,80155
(defun mon-help-propertize-regexp-symbol-defs-TEST 1648,81657
(defun mon-help-regexp-symbol-defs-TEST 1688,84007
(defun mon-help-propertize-tags-TEST 1854,91289
(defun mon-help-keys-wikify-TEST 1940,96460
(defun mon-drive-transfer-template-TEST 1964,97619
(defun mon-build-mon-emacsd-example 1998,99260
(defun mon-build-misc-path-example 2044,101797
(defun mon-build-user-name-example 2134,106239
(defun mon-user-system-conditionals-TEST 2193,109354
(defun mon-build-user-name-example-TEST 2247,112635
(defun mon-cln-xml-escapes-TEST 2280,114153
(defun* mon-up/down-case-regexp-TEST 2308,115555
(defun mon-hash-get-symbol-keys-TEST 2391,119998
(defun mon-file-stamp-buffer-filename-TEST 2410,120922
(defun mon-cln-freenode-log-TEST 2437,122121
(defun mon-align-conses-EXAMPLE 2485,124517
(defun mon-align-conses-TEST 2522,126499

naf-mode/mon-type-utils-vars.el,421
(defgroup mon-type-utils-vars 127,4003
(defcustom *mon-type-utils-vars-xrefs*143,4879
(defvar *mon-special-forms-types*174,6101
(defvar *mon-non-mappable-object-types* 210,7657
(defcustom *mon-equality-or-predicate-function-types*251,9611
(defvar *mon-function-object-types* 311,11807
(defvar *mon-ascii-alpha-chars* 325,12558
(defcustom *mon-ascii-punct-chars*349,13670
(defvar *mon-whitespace-chars* 370,14581

naf-mode/smith-poster-utils.el,483
(defvar *ebay-smith-poster-path* 112,4224
(defvar *insert-smith-ebay-template* 125,4721
(defun mon-set-smith-poster-register-e 189,6939
(defalias 'mon-insert-smith-poster-template mon-insert-smith-poster-template228,8802
(defun mon-insert-smith-ebay-dbc-template 245,9647
(defun mon-make-smith-folder-list 297,12609
(defun mon-ebay-smith-posters->template 344,14767
(defun mon-cln-smith-trailing-wps-dbc-item 424,19445
(defun mon-smith-poster-dbc-item->ebay-item 436,20029

naf-mode/mon-doc-help-undocd.el,40
(defun mon-help-doc-no-docd 1600,63714

naf-mode/mon-css-color.el,3367
(defconst css-color:version 193,8295
(defgroup css-color 197,8441
(defgroup mon-css-color 211,9034
(defun css-color-turn-on-in-buffer 217,9226
(define-globalized-minor-mode css-color-global-mode 224,9432
(defcustom *css-color:hex-chars* 229,9586
(defcustom *regexp-css-color-hex* 246,10504
(defcustom *regexp-css-color-hsl* 260,11170
(defcustom *regexp-css-color-rgb* 279,12013
(defcustom *css-color:html-colors*298,12913
(defun css-color:html-color-both-cases 469,18294
(defcustom *regexp-css-color-html*490,19313
(defcustom *regexp-css-color-color* 514,20340
(defvar *css-color:keywords*544,21567
(define-minor-mode css-color-mode592,24898
(defun css-color:font-lock-hook-fun 642,27117
(defvar *css-color:map*653,27588
(defvar *css-color:generic-map* 675,28655
(defun css-color:pal-lumsig 692,29489
(defun css-color:foreground-color 701,29906
(defun css-color:normalize-hue 718,30750
(defun css-color:within-bounds 725,31093
(defun css-color:hex-to-rgb 733,31487
(defun css-color:hex-to-hsv 758,32742
(defun css-color:rgb-to-hex 769,33299
(defun css-color:rgb-to-hsv 781,33911
(defun css-color:rgb-to-hsl 814,35473
(defun css-color:hsv-to-hsl 862,37159
(defun css-color:hsv-to-hex 875,37801
(defun css-color:hsv-to-rgb 888,38439
(defun css-color:hsv-to-prop-hexstring 921,39964
(defun css-color:hsl-to-rgb-fractions 935,40712
(defun css-color:hsl-to-rgb 953,41649
(defun css-color:hsl-to-hex 972,42505
(defun css-color:hue-to-rgb 983,43088
(defun css-color:parse-hsl 1001,43915
(defun css-color:incr-hsv-hue 1015,44627
(defun css-color:incr-hsv-sat 1025,45170
(defun css-color:incr-hsv-val 1036,45767
(defun css-color:hexval-beginning 1047,46359
(defun css-color:repl-color-at-posn 1057,46727
(defun css-color:get-color-at-point 1070,47324
(defun css-color:adjust-hsv-hue-at-posn 1083,47957
(defun css-color:adjust-hsv-sat-at-posn 1094,48520
(defun css-color:adjust-hsv-val-at-posn 1105,49090
(defun css-color:what-channel 1117,49710
(defun css-color:adjust-hex-at-posn 1128,50103
(defun css-color:rgb-up 1151,51271
(defun css-color:rgb-down 1159,51617
(defun css-color:hsv-hue-up 1167,51967
(defun css-color:hsv-hue-down 1176,52348
(defun css-color:hsv-saturation-up 1185,52734
(defun css-color:hsv-saturation-down 1193,53110
(defun css-color:hsv-value-up 1201,53492
(defun css-color:hsv-value-down 1209,53858
(defun css-color:num-up 1218,54250
(defun css-color:num-down 1245,55438
(defun css-color:text-property-color-start 1268,56426
(defun css-color:text-property-color-end 1280,56948
(defun css-color:text-property-color-region 1292,57476
(defvar *css-color:string-frob* 1308,58418
(defconst *css-color:type-circle* 1322,59138
(defun css-color:next-type 1329,59452
(defun css-color:cycle-type 1337,59808
(defun css-color:string-hex-to-hsl 1365,61249
(defun css-color:string-hsl-to-rgb 1378,61952
(defun css-color:string-rgb-to-name 1393,62695
(defun css-color:string-name-to-hex 1414,63803
(defun css-color:string-rgb-to-hex 1431,64637
(defun css-color:string-hsl-to-hex 1455,65971
(defun css-color:next-channel 1467,66598
(defun css-color:hexify-anystring 1485,67409
(defun css-color:toggle-percentage 1497,67907
(defvar *css-color:fg-history* 1518,69171
(defun css-color:html-color-by-name 1528,69547
(defun css-color:examine-color 1565,71631
(defun css-color:run-tests 1593,73251

naf-mode/mon-css-check.el,719
(defgroup css-check 166,6137
(defface css-check-unapplied-face176,6587
(defface css-check-applied-face187,7039
(defvar *css-check-map* 198,7485
(defvar *css-check-follow-mode* 221,8504
(defvar *css-check-csstidy-path* 230,8990
(defvar *css-check-file* 246,9801
(defvar *CSS-CHECK* 258,10403
(defun css-check-kill-buffer-hook 273,11115
(defun css-check-toggle-follow 288,11863
(defun css-check-next-line 307,12794
(defun css-check-prev-line 323,13560
(defun css-check-goto-line-at-p 338,14221
(defun css-check-apply-line-at-p 365,15642
(defun css-check-undo-application-at-p 414,18134
(defun css-check-buffer-mode-css-p 467,20860
(defun css-check-buffer-offer-save 493,22101
(defun css-check 512,22960

naf-mode/mon-error-utils.el,985
(defgroup mon-error-utils 139,5019
(defgroup mon-error-warn 156,5877
(defcustom *mon-error-utils-xrefs* 164,6169
(defvar *mon-error-gather* 194,7784
(defcustom *mon-message-function* 206,8390
(defun mon-format 229,9487
(cl-defun mon-message 560,29863
(cl-defun mon-string-not-null-nor-zerop-ERROR 598,31896
(cl-defun mon-symbol-void-ERROR 643,34679
(cl-defun mon-vectorp-ERROR 689,37500
(cl-defun mon-file-non-existent-ERROR 727,39575
(cl-defun mon-buffer-non-existent-ERROR 761,41485
(cl-defun mon-list-proper-p-ERROR 800,43725
(defun mon-truncate-path-for-prompt 886,47264
(defun mon-display-warning 911,48438
(defun mon-error-toplevel 921,48981
(cl-defun mon-error 947,50273
(defun mon-error-string-err 1012,53928
(defun mon-error-string-err-format 1041,55160
(defun mon-error-gather 1112,59480
(defun mon-error-gather-peek 1129,60275
(defun mon-error-gather-reset 1150,61217
(defun mon-error-gather-finalize 1164,61824
(cl-defun mon-write-string 1286,67554

naf-mode/mon-alphabet-list-utils.el,390
(defvar *mon-alphabet-as-type-generate* 194,7603
(defun mon-alphabet-as-type 221,9137
(defmacro mon-alphabet-as-defun 416,19054
(defun mon-alphabet-as-bc 438,20115
(defun mon-alphabet-as-map-bc 462,21207
(defun mon-alphabet-as-doc-loadtime 518,23463
(defun mon-alphabet-as-map-fun-prop 576,27141
(defun mon-alphabet-as-unintern-fun 597,28284
(defun mon-string-alpha-list 675,32441

naf-mode/naf-mode-ulan-utils.el,614
(defgroup naf-mode-ulan-help-utils 151,5392
(defcustom *mon-ulan-utils-xrefs* 163,5859
(defcustom *ulan-sample-data* 187,6828
(defvar *ulan-associative-roles* 199,7328
(defconst *naf-mode-db-numbers-flag-ulan* 213,7846
(defun mon-get-next-ulan-record 228,8512
(defconst *naf-mode-db-numbers-flag-ulan-loc-naf* 268,10442
(defconst naf-mode-db-field-flags-ulan-paren283,11256
(defun mon-rotate-ulan-triples 319,12570
(defun mon-invert-ulan-triples 336,13277
(defun mon-ulan-tsv-assc-rels-type->list 390,15261
(defconst *naf-mode-ulan-rltd-ppl-corp* 463,18313
(defconst *naf-mode-x-of-ulan-bol*499,20297

naf-mode/mon-doc-help-utils.el,8222
(defgroup mon-doc-help-utils 456,22474
(defgroup mon-doc-help-utils-faces 480,23567
(defcustom *mon-doc-help-utils-xrefs*513,25350
(defcustom *mon-doc-cookie* 608,31462
(defcustom *mon-help-docstring-help-bffr* 629,32380
(defcustom *mon-help-custom-faces-builtins-tags*644,32973
(defcustom *mon-help-mon-tags-alist* 676,34860
(defcustom *mon-help-reference-keywords* 785,40750
(defcustom *regexp-mon-doc-help-pointer-tags*854,45381
(defcustom *regexp-mon-doc-help-docstring-tags-URL*896,47038
(defcustom *regexp-mon-doc-help-docstring-tags-DYNAMIC* 937,49063
(defcustom *regexp-mon-doc-help-docstring-tags-TABLES*963,50277
(defcustom *regexp-mon-doc-help-docstring-tags*993,51701
(defcustom *regexp-mon-doc-help-comment-tags*1020,52997
(defcustom *regexp-mon-doc-help-meta-tags*1047,54227
(defcustom *regexp-mon-doc-help-builtin-dynamic-tags* 1079,55776
(defcustom *regexp-mon-doc-help-builtin-static-tags*1106,57091
(defcustom *mon-help-side-effect-free* 1133,58423
(defcustom *mon-help-side-effect-and-error-free* 1223,63691
(defcustom *mon-help-pure-functions* 1295,68040
(defvar *mon-help-subrs* 1365,71570
(defvar *mon-help-subrs-false* 1384,72602
(defun mon-map-subrs-and-hash 1406,73695
(defvar *mon-help-byte-optimizer-vals* 1482,76980
(defcustom *mon-help-risky-local-variables*1503,78009
(defvar *mon-help-permanent-locals* 1530,79413
(defun mon-help-permanent-locals-find 1549,80460
(defun mon-help-byte-optimizer-find 1619,84128
(defface mon-help-KEY-tag1662,86310
(defface mon-help-DYNATAB-tag1679,87084
(defface mon-help-META-tag1696,87952
(defface mon-help-PNTR-tag1712,88696
(defface mon-help-INNER-KEY-tag1747,90280
(defface mon-help-URL-wrap-tag1766,91069
(defface mon-help-BUILTIN-tag1786,91887
(defface mon-help-OLAY-RESULT1814,93005
(defface mon-help-OLAY-RESULT-string-show1834,93781
(defface mon-help-OLAY-RESULT-match-show1856,94588
(defcustom *mon-help-propertize-tags-triples*1880,95494
(defun mon-help-propertize-tags 1917,97773
(defun* mon-help-mon-tags 1970,100736
(defun mon-help-insert-tags 2033,103961
(defun mon-help-insert-tags-comment 2094,107259
(defun mon-help-overlay-for-example 2107,107947
(defun mon-help-delimited-region 2209,114413
(defun mon-help-overlay-on-region 2285,118140
(defun mon-help-overlay-result 2309,119376
(defun mon-help-find-result-for-overlay 2369,122416
(defun mon-help-temp-docstring-display 2420,124653
(defun mon-help-buffer-spc-*DOC* 2470,127247
(defun mon-help-get-mon-help-buffer 2523,129926
(defun mon-help-view-file 2539,130584
(defcustom *mon-tags-table-list* 2572,132300
(defun mon-update-tags-tables 2607,133847
(defun mon-update-tags-tables-loadtime 2664,136766
(defun mon-tags-naf-apropos 2678,137488
(defun mon-tags-apropos 2690,137928
(defun mon-insert-doc-help-cookie 2701,138326
(defmacro mon-help-put-var-doc-val->func 2734,139784
(defmacro mon-help-swap-var-doc-const-val 2807,143893
(defun mon-help-xref-symbol-value 2964,152603
(cl-defun mon-help-function-spit-doc 3000,154567
(defun mon-insert-doc-help-tail 3127,162357
(defun mon-help-message-intrp 3238,168864
(defun mon-help-function-arity 3293,171531
(defcustom *mon-help-emacs-errors* 3348,173837
(defun mon-help-errors 3429,177943
(defun mon-help-function-args 3626,187779
(defcustom *mon-help-interactive-spec-alist* 3670,189888
(defun mon-help-parse-interactive-spec 3798,195989
(defun mon-help-insert-documentation 3856,198976
(defun mon-help-help-functions 3939,203146
(defun mon-help-mon-help 4031,206175
(defun mon-help-mon-functions 4244,212081
(defun mon-help-ebay-template-mode 4903,228302
(defun mon-help-emacs-introspect 4974,230778
(defcustom *mon-emacs-external-programs-vars* 5186,236758
(defun mon-help-package-keywords 5253,240500
(defun mon-help-regexp-syntax 5345,244745
(defun mon-help-syntax-class 5406,247406
(defun mon-help-syntax-functions 5469,250404
(defun mon-help-search-functions 5589,253837
(defun mon-help-hooks 5721,257411
(defun mon-help-file-dir-functions 5877,261356
(defun mon-help-file-dir-functions-usage 6208,270395
(defun mon-help-process-functions 6379,276671
(defun mon-help-make-network-process 6492,279598
(defun mon-help-server-functions 6577,283343
(defun mon-help-inhibit-functions 6668,285943
(defun mon-help-buffer-functions 6727,287866
(defun mon-help-frame-functions 6977,294433
(defun mon-help-window-functions 7214,299990
(defun mon-help-mode-functions 7387,305107
(defun mon-help-xml-functions 7471,307529
(defun mon-help-eieio-defclass 7516,308828
(defun mon-help-eieio-functions 7572,311329
(defun mon-help-eieio-methods 7711,317877
(defun mon-help-type-predicates 7871,327071
(defun mon-help-number-functions 7996,332949
(defun mon-help-predicate-functions 8124,335235
(defun mon-help-sequence-functions 8403,341623
(defun mon-help-key-functions 8565,344759
(defun mon-help-load-functions 8932,354386
(defun mon-help-read-functions 9012,356521
(defun mon-help-print-functions 9135,362783
(defun mon-help-marker-functions 9264,366577
(defun mon-help-hash-functions 9329,368291
(defun mon-help-plist-functions 9447,372366
(defun mon-help-plist-properties 9525,374704
(defun mon-help-faces-themes 9739,380520
(defun mon-help-faces 9859,386086
(defun mon-help-faces-basic 9999,395759
(defun mon-help-faces-font-lock 10053,397791
(defun mon-help-font-lock-functions 10098,399470
(defun mon-help-font-lock 10227,403690
(defun mon-help-overlay-functions 10294,407374
(defun mon-help-text-property-functions 10373,409835
(defun mon-help-text-property-properties 10468,416628
(defun mon-help-text-property-stickyness 10558,423317
(defun mon-help-text-property-functions-ext 10628,427037
(defun mon-help-color-functions 10689,429378
(defun mon-help-color-chart 10777,431961
(defun mon-help-easy-menu 10941,444420
(defun mon-help-widgets 10995,447862
(defun mon-help-custom-keywords 11135,457952
(defun mon-help-char-functions 11235,462116
(defun mon-help-char-charset-functions 11359,466108
(defun mon-help-char-coding-functions 11472,469338
(defun mon-help-char-table-functions 11562,473022
(defun mon-help-display-table-functions 11641,475575
(defun mon-help-char-unidata-table 11709,477913
(defun mon-help-char-composition 11846,482481
(defun mon-help-char-ascii 12016,490014
(defun mon-help-char-iso-8859-1 12108,495615
(defun mon-help-char-ecma-48 12180,500202
(defun mon-help-char-ecma-35 12238,503226
(defun mon-help-diacritics 12295,505987
(defun mon-help-char-logic 12461,511586
(defun mon-help-char-representation 12504,513207
(defun mon-help-char-raw-bytes 12667,520550
(defun mon-help-binary-representation 12744,523854
(defun mon-help-symbol-functions 12980,533985
(defun mon-help-byte-compile-functions 13300,543958
(defun mon-help-byte-code-vector-symbols 13665,556111
(defun mon-help-ipv4-header 13715,558663
(defun mon-help-nclose-functions 13814,564022
(defun mon-help-iso-8601 13870,566126
(defun mon-help-time-functions 13975,570928
(defun mon-help-mon-time-functions 14070,573613
(defun mon-help-bookmark-functions 14169,576653
(defun mon-help-info-incantation 14307,580569
(defun mon-help-tar-incantation 14328,581559
(defun mon-help-rename-incantation 14365,582909
(defcustom *regexp-clean-du-flags* 14394,583883
(defun mon-help-du-incantation 14447,585791
(defun mon-help-install-info-incantation 14500,588175
(defun mon-help-hg-archive 14533,589826
(defun mon-help-crontab 14580,591916
(defun mon-help-permissions 14665,596478
(defun mon-help-unix-commands 14756,602366
(defun mon-help-unix-usage 14936,610087
(defun mon-help-format-width 15204,626510
(defun mon-index-elisp-symbol 15234,627952
(defun mon-help-w32-functions 15255,628698
(defcustom *w32-env-variables-alist* 15312,630546
(defun mon-help-w32-env 15418,637564
(defvar *mon-help-reference-keys* 15489,640913
(defun mon-help-bind-help-keys-loadtime 16762,687049
(defun mon-help-keys 16828,690580
(defun mon-help-keys-wikify-anchors 16841,691058
(defun mon-help-keys-wikify-heading 16899,694036
(defun mon-help-keys-wikify 16927,695470
(defun mon-help-escape-for-ewiki 17046,701792
(defun mon-help-unescape-for-ewiki 17092,703697
(defun mon-help-utils-loadtime 17137,705659

naf-mode/mon-css-complete.el,4060
(defvar *css-complete-at-ids* 152,7705
(defvar *css-complete-tag-ids* 175,8777
(defvar *css-complete-media-ids* 230,11284
(defvar *css-complete-property-ids* 252,12368
(defvar *css-complete-pseudo-ids* 270,13188
(defvar *css-complete-props-and-vals* 288,13994
(defvar *css-complete-look-back-regexp* 459,23462
(defvar *css-complete-popup-pos-x-offset* 496,25301
(defmacro css-complete-collect 521,26287
(defmacro css-delete-partial 571,28569
(defmacro css-complete-menu-generate 629,31554
(defmacro css-delims-maybe-generate 652,32759
(defmacro css-popup-generate 677,33765
(defmacro css-at-p-generate 696,34705
(defun css-vals-for-prop 719,35758
(defun css-prop-for-point 732,36445
(defun css-vals-for-point 748,37214
(defun css-delims-maybe-part-generic 759,37791
(defalias 'css-delims-maybe-part-prop-at-point css-delims-maybe-part-prop-at-point780,38616
(defalias 'css-delims-maybe-part-pseudo-at-point css-delims-maybe-part-pseudo-at-point792,39141
(defalias 'css-delims-maybe-part-at-at-point css-delims-maybe-part-at-at-point804,39676
(defun css-delims-maybe-part-val-at-point 821,40354
(defun css-maybe-part-val-at-point 841,41140
(defun css-possible-value-completions 851,41613
(defun css-possible-value-completions-at-point 870,42473
(defun css-delete-partial-value 879,42909
(defun css-value-popup-completions 888,43378
(defun css-value-completion-menu 898,43876
(defun css-pos-for-x-popup-menu 916,44614
(defun css-complete-value 931,45326
(defun css-at-value-p 947,46132
(defun css-at-prop-p 963,46884
(defun css-maybe-part-prop-at-point 974,47479
(defun css-possible-prop-completions 986,47992
(defun css-possible-prop-completions-at-point 997,48496
(defun css-props-for-point 1005,48901
(defun css-delete-partial-prop 1014,49305
(defun css-prop-popup-completions 1023,49774
(defun css-prop-completion-menu 1030,50143
(defun css-complete-prop 1047,50767
(defun css-at-pseudo-id-p 1065,51652
(defun css-maybe-part-pseudo-at-point 1077,52148
(defun css-possible-pseudo-completions 1088,52661
(defun css-possible-pseudo-completions-at-point 1099,53171
(defun css-pseudos-for-point 1105,53515
(defun css-delete-partial-pseudo 1113,53867
(defun css-pseudo-popup-completions 1123,54346
(defun css-pseudo-completion-menu 1131,54768
(defun css-complete-pseudo 1146,55366
(defun css-at-tag-id-p 1161,56090
(defun css-delims-maybe-part-tag-at-point 1173,56684
(defun css-maybe-part-tag-at-point 1193,57555
(defun css-tags-for-point 1204,58058
(defun css-possible-tag-completions 1211,58365
(defun css-possible-tag-completions-at-point 1222,58865
(defun css-delete-partial-tag 1228,59196
(defun css-tag-popup-completions 1237,59640
(defun css-tag-completion-menu 1248,60169
(defun css-complete-tag 1261,60757
(defun css-at-at-id-p 1277,61541
(defun css-maybe-part-at-at-point 1287,61960
(defun css-ats-for-point 1297,62460
(defun css-possible-at-completions 1304,62765
(defun css-possible-at-completions-at-point 1315,63261
(defun css-delete-partial-at 1321,63585
(defun css-at-popup-completions 1330,64037
(defun css-at-completion-menu 1338,64403
(defun css-complete-at 1353,64968
(defun css-at-string-p 1376,66000
(defun css-at-filename-p 1384,66407
(defun css-complete-filename 1392,66789
(defun css-at-comment-p 1399,67117
(defun css-after-at-p 1407,67540
(defun css-complete-after-at 1424,68276
(defun css-media-for-point 1448,69377
(defun css-media-completion-menu 1455,69691
(defun css-complete-media 1471,70338
(defun css-media-popup-completions 1486,71015
(defun css-complete 1496,71474
(defun css-electric-left-brace 1530,73207
(defun css-electric-left-bracket 1542,73551
(defun css-electric-left-paren 1553,73856
(defun css-electric-quotes 1563,74154
(defun css-electric-semicolon 1572,74410
(define-key css-mode-map 1581,74664
(define-key css-mode-map 1582,74715
(define-key css-mode-map 1583,74777
(define-key css-mode-map 1584,74841
(define-key css-mode-map 1585,74899
(define-key css-mode-map 1586,74961
(defun mon-css-complete-loadtime 1592,75152

naf-mode/naf-mode-nation-english.el,129
(defvar *naf-mode-nation-english-xrefs* 81,2682
(defvar *naf-nation-english*98,3347
(defconst naf-mode-nation-english326,7295

naf-mode/naf-mode-art-keywords.el,123
(defvar *naf-mode-art-keywords-xrefs*79,2816
(defvar *naf-art-keywords*87,3213
(defconst naf-mode-art-keywords 153,4638

naf-mode/mon-elisp-fileset.el,36
(defun mon-map-elisp-fileset 7,279

naf-mode/mon-doc-help-tidy.el,31
(defun mon-help-tidy 108,3164

naf-mode/mon-rename-images-supplemental.el,738
(defun mon-get-buffer-parent-dir 168,7347
(defun mon-string-split-buffer-name 238,10783
(defun mon-truncate-path-for-prompt 266,12054
(defun mon-buffer-written-p 291,13212
(defun mon-toggle-read-only-point-motion 319,14562
(defun mon-dir-build-list 340,15358
(defun mon-line-bol-is-eol 402,17603
(defun mon-cln-trail-whitespace 424,18468
(defun mon-delete-back-up-list 445,19446
(defvar *mon-nef-scan-drive* 508,22172
(defvar *mon-nef-scan-path* 517,22594
(defvar *mon-nef-scan-nefs-path* 529,23139
(defvar *mon-nef-scan-nef2-path* 542,23641
(defvar *mon-ebay-images-path* 555,24156
(defvar *mon-ebay-images-bmp-path* 568,24662
(defvar *mon-ebay-images-jpg-path* 581,25232
(defvar *mon-ebay-images-lookup-path* 591,25699

naf-mode/naf-mode-abbrevs.el,74
(define-abbrev-table 'naf-mode-abbrev-tablenaf-mode-abbrev-table59,1789

naf-mode/naf-mode-classes.el,787
(defclass naf-mode-base 82,2704
(defclass naf-mode-obj-timestamp-abst-intrfc 105,3337
(defmethod naf-timestamp-on-obj 116,3715
(defclass naf-mode-obj-uid-abst-intrfc 122,3991
(defmethod naf-uid-on-obj 134,4445
(defclass naf-mode-instance-doc-abst-intrfc 140,4718
(defclass naf-mode-xrefs-keyword-abst-intrfc 151,5057
(defclass naf-mode-xrefs-face-abst-intrfc 164,5458
(defclass naf-mode-xrefs-function-abst-intrfc 177,5847
(defclass naf-mode-xrefs-constant-abst-intrfc 190,6249
(defclass naf-mode-xrefs-variable-abst-intrfc 203,6658
(defclass naf-mode-xrefs-package-abst-intrfc 216,7067
(defclass naf-mode-xrefs-abst-intrfc 229,7494
(defclass naf-mode-keyword-abst-intrfc 266,9089
(defclass naf-mode-kwrd-face-abst-intrfc 318,10711
(defclass naf-nation-english 344,11417

naf-mode/mon-macs.el,1151
(defgroup mon-macs 159,5393
(defcustom *mon-macs-xrefs* 175,6204
(defmacro mon-error-protect 203,7735
(defmacro %mon-format-chk-keys 255,10297
(defmacro handler-case 310,12866
(defmacro mon-copy-list-mac 375,16483
(defmacro mon-mapcar-mac 472,21980
(defmacro mon-nshuffle-vector 533,25259
(defmacro mon-list-sift 571,26892
(defmacro mon-foreach 620,29311
(defmacro mon-for 636,30010
(defmacro mon-loop 658,30867
(defmacro mon-equality-for-type 673,31362
(defmacro mon-gensym 708,32740
(defmacro mon-with-gensyms 747,34816
(defmacro mon-with-print-gensyms 805,37400
(defmacro defconstant 841,38836
(defmacro defparameter 868,40263
(defmacro mon-set-text-properies-region 912,42289
(defmacro mon-get-face-at-posn 932,43212
(defmacro mon-with-file-buffer 960,44405
(defmacro mon-buffer-exists-p 1001,46240
(defmacro mon-with-buffer-undo-disabled 1054,49141
(defmacro mon-print-in-buffer-if-p 1096,51044
(defmacro mon-with-inhibit-buffer-read-only 1126,52503
(defmacro mon-toggle-restore-llm 1176,55168
(defmacro mon-naf-mode-toggle-restore-llm 1236,58316
(cl-defmacro mon-line-dolines 1257,59406
(defmacro mon-cat 1296,61254

naf-mode/naf-mode-nationality-french.el,141
(defvar *naf-mode-nationality-french-xrefs*81,2661
(defvar *naf-nationality-french*100,3395
(defconst naf-mode-nationality-french180,4802

naf-mode/naf-mode-insertion-utils.el,1110
(defvar *naf-mode-insertion-utils-xrefs* 110,4178
(defun naf-tab-region 148,5629
(defun naf-comment-line 156,5873
(defun naf-uncomment-line 167,6197
(defun naf-comment-region 179,6539
(defun naf-uncomment-region 189,6895
(defun non-posting-source 200,7333
(defalias 'nps nps218,8094
(defun non-posting-ebay-source 228,8521
(defalias 'npes npes255,9699
(defun non-posting-wiki-source 263,9996
(defalias 'npws npws285,10986
(defun non-posting-philsp-source 294,11296
(defalias 'npps npps320,12450
(defun non-posting-imdb-source 331,12789
(defun non-posting-benezit-source 365,14202
(defun non-posting-internet-source 405,16436
(defun mon-insert-naf-file-in-dirs 449,19009
(defun mon-insert-naf-mode-class-template 498,21475
(defun mon-build-naf-mode-xref 526,22881
(defun mon-insert-naf-mode-xref-template 568,25124
(defun mon-insert-naf-mode-var-const-template 605,26892
(defun mon-insert-naf-mode-constant-template 651,29066
(defun mon-insert-naf-mode-face-template 691,31376
(defun mon-insert-naf-mode-faces-as-displayed 739,33916
(defvar *naf-mode-faces-as-displayed* 756,34740

naf-mode/mon-rename-whitespace-files.el,214
(defun mon-rename-whitespace-files 111,3121
(defun mon-rename-whitespace-clean-whitespace 134,4441
(defun mon-rename-whitespace-make-file-conses 152,5362
(defun mon-file-convert-find-fprint-to-fprint0 170,6398

naf-mode/naf-mode-faces.el,3984
(defcustom *naf-mode-faces-xrefs* 230,10457
(defun mon-face-bold->normal 331,13852
(defvar *naf-face-props* 343,14352
(defvar *naf-face-prop-vals* 367,15516
(defvar *naf-face-prop-keywords* 386,16507
(defvar *naf-face-vals-alist* 404,17487
(defvar *naf-face-keyword->vals* 435,19197
(defun mon-bind-naf-face-vars-loadtime 448,19869
(defun naf-facercise-prop-val 550,24948
(defun naf-face-prop-val-p 587,26952
(defun naf-map-face-key->val 635,29663
(defun mon-help-naf-mode-faces 677,31709
(defface naf-mode-db-entry-face962,40448
(defvar naf-mode-db-entry-fface 974,40944
(defface naf-mode-delim-face986,41417
(defvar naf-mode-delim-fface 998,41927
(defface naf-mode-name-divider-face1010,42402
(defvar naf-mode-name-divider-fface 1022,42920
(defface naf-mode-field-url-flag-face1034,43411
(defvar naf-mode-field-url-flag-fface 1046,43921
(defface naf-mode-delimit-url-flag-face1060,44499
(defvar naf-mode-delimit-url-flag-fface 1071,44965
(defface naf-mode-timestamp-face1085,45556
(defvar naf-mode-timestamp-fface 1099,46165
(defface naf-mode-accessed-by-face1114,46742
(defvar naf-mode-accessed-by-fface 1127,47291
(defface naf-mode-field-face1147,48042
(defvar naf-mode-field-fface 1158,48483
(defface naf-mode-db-field-entry-face1171,49032
(defvar naf-mode-db-field-entry-fface 1184,49563
(defface naf-mode-field-bnf-face 1199,50223
(defvar naf-mode-field-bnf-fface 1209,50628
(defface naf-mode-db-field-entry-bnf-face1223,51212
(defvar naf-mode-db-field-entry-bnf-fface 1234,51743
(defface naf-mode-field-ulan-face1251,52575
(defvar naf-mode-field-ulan-fface 1261,52968
(defface naf-mode-db-field-entry-ulan-face1275,53618
(defvar naf-mode-db-field-entry-ulan-fface 1285,54089
(defface naf-mode-ulan-ppl-corp-face1301,54877
(defvar naf-mode-ulan-ppl-corp-fface 1312,55335
(defface naf-mode-date-face1328,56103
(defvar naf-mode-date-fface 1344,56853
(defface naf-mode-date-active-face1361,57625
(defvar naf-mode-date-active-fface 1371,58009
(defface naf-mode-benezit-face1384,58502
(defvar naf-mode-benezit-fface 1397,59081
(defface naf-mode-place-face1410,59649
(defvar naf-mode-place-fface 1425,60329
(defface naf-mode-nationality-face1440,60964
(defvar naf-mode-nationality-fface 1452,61451
(defface naf-mode-publication-periodical-face1467,62024
(defvar naf-mode-publication-periodical-fface 1494,63220
(defface naf-mode-publication-periodical-french-face1523,64537
(defvar naf-mode-publication-periodical-french-fface 1538,65187
(defface naf-mode-publication-periodical-english-face 1557,66115
(defvar naf-mode-publication-periodical-english-fface 1570,66642
(defface naf-mode-publication-periodical-english-one-word-face1590,67576
(defvar naf-mode-publication-periodical-english-one-word-fface 1605,68249
(defface naf-mode-publication-periodical-intnl-face1626,69261
(defvar naf-mode-publication-periodical-intnl-fface 1641,69911
(defface naf-mode-event-face1659,70759
(defvar naf-mode-event-fface 1671,71241
(defface naf-mode-group-period-style-face1683,71697
(defvar naf-mode-group-period-style-fface 1694,72191
(defface naf-mode-institution-face1706,72696
(defvar naf-mode-institution-fface 1721,73398
(defface naf-mode-alternate-name-face1737,74077
(defvar naf-mode-alternate-name-fface 1750,74625
(defface naf-mode-primary-role-face1763,75175
(defvar naf-mode-primary-role-fface 1775,75660
(defface naf-mode-secondary-role-face1788,76148
(defvar naf-mode-secondary-role-fface 1800,76654
(defface naf-mode-art-keywords-role-face1813,77170
(defvar naf-mode-art-keywords-role-fface 1824,77656
(defface naf-mode-awards-prizes-face1836,78154
(defvar naf-mode-awards-prizes-fface 1847,78623
(defface naf-mode-artist-face1868,79441
(defvar naf-mode-artist-fface 1883,79979
(defface naf-mode-artist-student-of-face1900,80639
(defvar naf-mode-artist-student-of-fface 1912,81145
(defface naf-mode-artist-student-of-julian-face1934,82061
(defvar naf-mode-artist-student-of-julian-fface 1945,82551

naf-mode/mon-iptables-regexps.el,401
(defvar *mon-iptables-alist-as-sym* 122,3927
(defvar *regexp-clean-iptables* 143,4954
(defun mon-iptables-make-regexps 158,5818
(defun mon-iptables-make-regexps-long 187,7162
(defun mon-cln-iptables-short-form 214,8423
(defun mon-cln-iptables-long-form 281,11365
(defun mon-iptables-pp-key 347,14390
(defun mon-iptables-pp-as-sym 376,15728
(defun mon-bind-iptables-vars-at-loadtime 398,16496

naf-mode/mon-drive-transfer-utils.el,339
(defvar *mon-drive-transfer-template-src-dest-log* 120,3876
(defun mon-drive-transfer-template-subst-src-dest-log 179,7279
(defvar *mon-drive-transfer-template* 200,8265
(defun mon-insert-drive-transfer-template 256,11246
(defun mon-drive-transfer-template-cln-log-dest 278,12134
(defun mon-drive-transfer-template-cln-all 343,15389

naf-mode/mon-get-freenode-lisp-logs.el,134
(defvar *freenode-lisp-logs* 120,3681
(defun mon-wget-freenode-lisp-logs 131,4222
(defun mon-get-freenode-lisp-logs-dates 166,5907

naf-mode/naf-mode-publications-periodicals-french.el,180
(defvar *naf-mode-publications-periodicals-french-xrefs*80,2641
(defvar *naf-publications-periodicals-french* 98,3464
(defconst naf-mode-publications-periodicals-french230,6483

naf-mode/mon-dbc-xml-utils.el,398
(defvar *mon-ampersand-sharp-diacritic-pairs* 109,2990
(defun mon-replace-ampersand-sharp-chars-in-buffer 163,5435
(defun mon-dbc-replace-consed-pairs-region-with-parsed-defclass-slots 178,6097
(defun mon-insert-parsed-defclass-slots 212,7650
(defalias 'mon-dbc-xml-insert-parsed-defclass-slots mon-dbc-xml-insert-parsed-defclass-slots233,8635
(defun mon-dbc-xml-parse-clean-fields 238,8855

naf-mode/mon-ps-pdf-utils.el,193
(defvar *mon-pdftotext-exec-path* 182,5420
(defvar *mon-pdfinfo-exec-path* 215,6887
(defun* mon-get-pdftotext 250,8300
(defun* mon-get-ps2ascii 329,12513
(defun* mon-get-pdfinfo 348,13481

naf-mode/mon-doc-help-CL.el,3284
(defgroup mon-doc-help-CL 203,8520
(defgroup mon-doc-help-CL-hspec-parse 221,9345
(defcustom  *mon-doc-help-CL-xrefs* 236,10000
(defcustom *mon-help-CL-cmu-ai-repo* 286,12956
(defcustom *mon-help-CL-ext-pkg-map* 327,15075
(defun mon--CL-no-pull-p 678,36251
(defcustom *mon-help-CL-ext-pkg-map-no-pull* 691,36859
(defun mon-help-CL-pkgs 729,38672
(defun mon-bind-mon-help-CL-pkgs-loadtime 773,40777
(defun mon-help-CL-wget-pkgs 835,44096
(defun mon-help-CL-wget-pkgs-for-shell-command 930,49057
(defcustom *mon-hspec-root-dir* 1187,61469
(defcustom *mon-hspec-parse-buffer* 1216,63020
(defcustom  *mon-hspec-unparse-buffer* 1236,64091
(defun mon-hspec-href-p 1254,64962
(defun mon-hspec-header-line-p 1281,66526
(defun mon-hspec-it-p 1351,71055
(defun mon-hspec-bld-p 1376,72468
(defun mon-hspec-plain-p 1401,73889
(defun mon-hspec-w3m-spec-p 1426,75294
(defun mon-hspec-prop-type 1440,76096
(defun mon-hspec-out 1470,77820
(defun mon-hspec-stk-n-mv 1487,78836
(defun mon-hspec-parse-w3m 1524,80896
(defun mon-hspec-find-w3m 1553,82368
(defun mon-hspec-unparse-w3m 1639,86968
(defun mon-hspec-unparse-w3m-to-buffer 1715,90848
(defun mon-help-CL-emacs-functions 2178,106818
(defun mon-help-CL-file-dir-functions 2203,107983
(defun mon-help-CL-stream-keywords 2314,111086
(defun mon-help-CL-error-condition-restart 2393,114256
(defun mon-help-CL-sequence-predicates 2569,120054
(defun mon-help-CL-bit-byte-bool-logic 2607,121794
(defun mon-help-CL-loop 2723,126641
(defun mon-help-CL-loop-usage 2926,133067
(defun mon-help-CL-do 3327,148492
(defun mon-help-CL-time 3396,151889
(defun mon-help-CL-sequences 3429,153314
(defun mon-help-CL-iteration 3482,154966
(defun mon-help-CL-conses 3517,156427
(defun mon-help-CL-hash-tables 3638,159195
(defun mon-help-CL-print 3691,161372
(defun mon-help-CL-streams 3779,164505
(defun mon-help-CL-reader 3867,166958
(defun mon-help-CL-chars 3914,168702
(defun mon-help-CL-strings 3966,170463
(defun mon-help-CL-structures 4007,172029
(defun mon-help-CL-arrays 4039,173496
(defun mon-help-CL-numbers 4106,175495
(defun mon-help-CL-lambda-list 4219,177929
(defun mon-help-CL-object-CLOS 4312,182339
(defun mon-help-CL-method-combination 4402,185218
(defun mon-help-CL-control-flow 4477,187973
(defun mon-help-CL-eval-compile 4577,190320
(defun mon-help-CL-load-compile 4636,192154
(defun mon-help-CL-environment 4677,193788
(defun mon-help-CL-package-functions 4737,195673
(defun mon-help-CL-intern-symbol 4796,197597
(defun mon-help-CL-types 4847,199377
(defun mon-help-CL-type-declarations 5081,205273
(defun mon-help-CL-sharpsign-syntax 5122,207157
(defun mon-help-CL-format 5176,209941
(defun mon-help-CL-format-usage 5372,215444
(defun mon-help-slime-functions 5495,218879
(defun mon-help-CL-slime-keys 6660,248496
(defun mon-help-CL-swank-functions 6794,253124
(defun mon-help-CL-local-time 6838,254651
(defun mon-help-CL-minion 6986,260995
(defvar *clhs-symbol-v3-or-v7* 7072,264897
(defun mon-help-utils-CL-loadtime 9095,369501
(defvar *mon-help-CL-symbols* 9122,370748
(defun mon-help-CL-symbols 9170,372843
(defun mon-cln-cxml-docs 9228,376161
(defun mon-help-CL-lispdoc 9287,378731
(defun mon-cln-ansi-info 9347,381911
(defcustom *mon-CL-indent-specs* 9398,384152

naf-mode/mon-region-utils.el,492
(defun mon-region-position 143,4983
(defun mon-region-length 183,7043
(defun mon-decode-coding-region-utf-8-unix 212,8462
(defun mon-region-indent-refill 230,9245
(defun mon-region-unfill 288,12886
(defun mon-region-capitalize 300,13337
(defun mon-region-reverse 334,14893
(defun mon-wrap-selection 358,15986
(defun mon-wrap-text 394,17486
(defun mon-wrap-with 425,18807
(defun mon-region-split-commas 437,19423
(defun mon-align-conses 493,21698
(defun mon-sha1-region 521,23098

naf-mode/naf-mode-french-months.el,42
(defconst naf-mode-french-months 84,3041

naf-mode/mon-dir-utils-local.el,1234
(defvar *mon-img-hash* 169,6532
(defvar *mon-nef-img-hash* 188,7311
(defvar *mon-bmp-img-hash* 207,8189
(defvar *mon-jpg-img-hash* 226,9049
(defun* mon-file-map-elisp-fileset 252,10275
(defun mon-dir-save-current 364,16669
(defun mon-dir-save-current-to-file 401,18378
(defun mon-explorer-naf-artist 449,20520
(defun mon-explorer-naf-brand 479,21879
(defun mon-dired-naf-artist-letter 511,23529
(defun mon-dired-naf-brand-letter 537,24710
(defun mon-dired-naf-image-dir 573,26464
(defun mon-dir-nef-update-photos-alist 619,28944
(defun mon-bind-nefs-photos-at-loadtime 681,32460
(defun mon-dir-nef-ranges 708,33753
(defun mon-dir-nef-name-to-head 741,35638
(defun mon-dir-nef-remove-if-empty 767,36989
(defun mon-dir-nef-find-dups 799,38763
(defun mon-dir-nef-conc-dups 838,40874
(defun mon-dir-nef-converge 871,42643
(defun mon-dir-nef-conc-ranges 906,44486
(defun mon-dir-nef-keep-3 936,46060
(defun mon-dir-nef-big 981,48583
(defun mon-dired-nef-dir 1005,49686
(defun mon-dir-hash-images 1035,51095
(defun mon-dir-hashed-complete 1091,53630
(defun mon-dir-try-comp 1118,54986
(defun mon-file-path-for-bug 1155,56746
(defun mon--local-url-for-bug 1207,59564
(defun mon-get-local-url-for-bug 1212,59808

naf-mode/mon-wget-utils.el,368
(defvar *mon-show-wget-script-temp* 116,3454
(defun mon-wget-list-to-script 126,3969
(defun mon-wget-list-to-script-TEST 178,6541
(defun mon-wget-list-to-script-shell-command 233,9516
(defun mon-wget-list-give-script-to-shell-command 270,11607
(defun mon-wget-rfc 310,13687
(defun mon-wget-unicodedata-files 342,15103
(defvar *mon-unidata-file-list* 376,16906

naf-mode/mon-regexp-symbols.el,2563
(defgroup mon-regexp-symbols 163,6412
(defcustom *mon-regexp-symbols-xrefs* 180,7299
(defcustom *regexp-whitespace-chars*214,9342
(defcustom *regexp-clean-xml-parse* 238,10522
(defcustom *regexp-clean-mon-file-keywords*264,11740
(defcustom *regexp-symbol-defs* 360,15546
(defcustom *regexp-symbol-defs-big* 409,18052
(defcustom *regexp-ansicl-info*462,20639
(defcustom *regexp-line-to-consed-pair* 492,21635
(defcustom *regexp-abrv-dotted-month->canonical*505,22259
(defcustom *regexp-simple-abrv-month->canonical*533,23850
(defcustom *regexp-clean-ebay-time-chars* 560,25349
(defcustom *regexp-clean-ebay-month->canonical-style1*601,26921
(defcustom *regexp-clean-ebay-month->canonical-style2* 640,28540
(defcustom *regexp-clean-ebay-month->canonical-style3* 681,30419
(defcustom *regexp-bound-month->canonical*729,32968
(defcustom *regexp-month->canonical-ws*757,34370
(defcustom *regexp-month->MM*828,38201
(defcustom *regexp-MM->month*852,39366
(defcustom *regexp-MM->month-whitespace-aware*875,40626
(defcustom *regexp-philsp-months*947,45029
(defcustom *regexp-philsp-apos*978,46506
(defcustom *regexp-philsp-location*1001,47533
(defcustom *regexp-philsp-swap-location*1025,48638
(defcustom *regexp-philsp-fix-month-dates* 1044,49520
(defcustom *regexp-clean-irc-logs* 1077,51537
(defcustom *regexp-clean-wikipedia*1093,52336
(defcustom *regexp-clean-whitespace*1183,56025
(defcustom *regexp-clean-big-whitespace*1204,56911
(defcustom *regexp-clean-imdb*1226,57900
(defcustom *regexp-clean-loc*1251,58896
(defcustom *regexp-clean-gilt-group* 1301,62073
(defcustom *regexp-ital-to-eng* 1322,62924
(defcustom *regexp-defranc-dates*1357,64464
(defcustom *regexp-defranc-places* 1422,67429
(defcustom *regexp-defranc-benezit*1560,72007
(defcustom *regexp-clean-benezit-fields*1640,74931
(defcustom *regexp-german-to-eng*1674,76493
(defcustom *regexp-clean-bib*1700,77533
(defcustom *regexp-common-abbrevs*1730,78651
(defcustom *regexp-wrap-url-schemes* 1796,81359
(defcustom *regexp-rgb-hex*1847,84176
(defcustom *regexp-percent-encoding-reserved-chars*1886,86167
(defvar *regexp-cp1252-to-latin1*1909,87218
(defconst *google-define-html-entry-table*1932,88492
(defvar *regexp-clean-html-decimal-char-entity* 2021,94278
(defvar *regexp-clean-html-named-char-entity* 2050,95894
(defvar *regexp-clean-ulan-diacritics*2078,97422
(defvar *regexp-clean-ulan*2164,102568
(defvar *regexp-clean-ulan-fields*2211,105245
(defvar *regexp-clean-ulan-dispatch-chars* 2319,110255
(defvar *regexp-ulan-contribs* 2364,112673

naf-mode/mon-rename-image-utils.el,1051
(defun mon-get-ebay-bmps-in-dir 433,18610
(defun mon-get-nefs-in-dir 456,19709
(defun mon-insert-ebay-bmps-in-file 474,20672
(defun mon-get-ebay-jpgs-list 495,21605
(defun mon-insert-ebay-jpgs-in-file 522,22888
(defun mon-get-ebay-jpgs-count 540,23711
(defun mon-get-ebay-bmps-count 557,24412
(defun mon-get-ebay-img-count-verify 574,25115
(defun mon-cln-img-magic-hex 598,26181
(defun mon-get-ebay-img-css 657,29191
(defun mon-get-ebay-img-name-to-col 717,32164
(defun mon-get-ebay-css-pp-region-to-file 744,33188
(defun mon-get-ebay-css-pp 779,34699
(defun mon-insert-css-colors 839,36905
(defun mon-rename-imgs-in-dir 883,38986
(defun mon-check-image-type 941,41820
(defun mon-ebay-image-directory-not-ok 962,42823
(defun mon-ebay-image-directory-ok-p 999,44453
(defun mon-image-rename-propertize 1064,47252
(defun mon-parse-rename-images 1180,54898
(defun mon-shorten-rename-image-path 1198,55762
(defun mon-parse-rename-lengths 1210,56402
(defun mon-pad-rename-lengths 1240,57839
(defun mon-build-rename-buffer 1318,62390

naf-mode/mon-dir-utils.el,2652
(defgroup mon-dir-utils 272,13467
(defcustom *mon-dir-utils-xrefs* 295,14578
(defcustom *mon-add-subdirs-to-list-ignorables*341,17276
(defcustom *regexp-add-subdirs-to-list-filter-ignorables* 364,18446
(defun mon-file-truename-p 394,20079
(defun mon-file-dir-attributes->plist 520,26385
(defun mon-file-ensure-extension-is-el 594,30290
(defun mon-file-get-load-history-if 642,33166
(defun mon-ffap-view-file 703,36690
(defun mon-ffap-view-file-other-window 722,37449
(defun mon-find-buffer-visiting-other-live-frame 743,38325
(defun mon-dired-find-file-other-frame 797,40464
(defun mon-copy-file-dired-as-list 825,42031
(defun mon-copy-file-dired-as-string 851,43270
(defun mon-toggle-dired-dwim-target 885,44973
(defun mon-dired-buffers-complete 917,46324
(defun mon-dired-other-window 1089,55976
(defun mon-dired-srt-alph 1102,56653
(defun mon-dired-srt-chrn 1113,57177
(defun mon-dired-srt-type 1124,57723
(defun mon-dired-srt-type-alph 1135,58241
(defun mon-dired-srt-type-chrn 1146,58777
(defun mon-dired-up-directory-this-buffer 1161,59513
(defun mon-dired-uninsert-subdir 1179,60276
(defun mon-dired-uninsert-subdir-all 1200,61311
(defun mon-dired-insert-dirs-recursive 1224,62485
(defun mon-dired-unmark-elc 1235,63057
(defun mon-async-du-dir 1268,64730
(defun mon-get-dir-size 1298,66082
(defun mon-dir-make-xargs-arg-file 1333,67754
(defun mon-get-new-buffer-w-stamp 1372,69944
(defun mon-get-dir-name-absolute 1427,72904
(defun mon-get-relative-w-absolute 1459,74520
(defun mon-copy-files-in-sub-dirs 1511,77481
(defun mon-copy-file-multiple 1579,81314
(cl-defun mon-file-reduce-name 1608,82763
(defun mon-build-path 1657,85193
(defun mon-buffer-written-p 1731,89213
(defun mon-string-split-buffer-name 1764,90886
(defun mon-string-split-buffer-parent-dir-quick 1795,92353
(defun mon-string-split-buffer-parent-dir 1821,93636
(defun mon-get-buffer-parent-dir 1869,96191
(defun mon-string-split-pathname 1936,99617
(defun mon-string-split-dir-recurse 1990,102684
(defun mon-dir-common-paths 2054,106299
(defun mon-dir-get-subdirs 2090,108080
(defun %mon-dir-get-subdirs-filter-full 2131,110476
(defun %mon-dir-get-subdirs-filter-no-full 2148,111371
(defun mon-add-subdirs-to-list 2170,112610
(defun mon-find-file 2255,117522
(defun mon-insert-subdirs-in-buffer 2277,118367
(defun mon-get-dir-subdir-default 2310,120017
(defun mon-rename-file-serial 2363,122845
(defun mon-copy-file-path 2408,124720
(defun mon-get-buffers-directories 2488,128654
(defun mon-proc-buffers-directories 2539,131382
(defun mon-get-proc-buffers-directories 2598,134032
(defun mon-dir-build-list 2675,137735

naf-mode/naf-mode-publications-periodicals-english.el,323
(defvar *naf-mode-publications-periodicals-english-xrefs*83,2720
(defvar *naf-publications-periodicals-english* 101,3543
(defconst naf-mode-publications-periodicals-english419,12228
(defvar *naf-publications-periodicals-english-one-word* 434,13038
(defconst naf-mode-publications-periodicals-english-one-word455,13431

naf-mode/naf-mode-db-flags.el,513
(defvar *naf-mode-db-flags-xrefs* 141,4726
(defconst naf-mode-timestamp-flag 162,5462
(defconst naf-mode-accessed-by-flag194,6817
(defconst naf-mode-url-flag 242,8757
(defconst naf-mode-url-wrapper-flag 272,9997
(defconst naf-mode-db-numbers-flag290,10930
(defconst naf-mode-db-field-flags-bnf346,13182
(defconst naf-mode-db-field-flags367,14144
(defvar naf-alternate-name-flags381,14758
(defconst naf-mode-alternate-name-flags 405,16034
(defvar *naf-x-of*422,16796
(defconst *naf-mode-x-of*458,18478

naf-mode/mon-jg-directory-creator.el,173
(defvar *mon-jg-file-template* 113,3445
(defun* mon-make-jg-dir-in-path 146,4841
(defun mon-write-jg-file-in-path 242,9611
(defun mon-format-jg-file-for-write 267,10917

naf-mode/naf-mode-xrefs.el,80
(defgroup naf-mode-xrefs 112,3241
(defcustom *naf-mode-xref-of-xrefs*122,3694

naf-mode/mon-utils.el,1773
(defgroup mon-base 469,25849
(defgroup mon-xrefs 486,26697
(defvar *mon-utils-post-load-requires* 547,30126
(defcustom *mon-xrefs-xrefs*613,32550
(defcustom *mon-default-comment-start* 646,34491
(defcustom *mon-default-comment-divider* 684,36520
(defcustom *mon-timestamp-cond* 698,37170
(defvar *mon-recover-nil-t-default-plist* 712,37901
(defun mon-recover-nil-t-default-plist 727,38730
(defmacro mon-check-feature-for-loadtime 780,41693
(defun mon-utils-require-features-at-loadtime 834,44386
(defun mon-after-mon-utils-loadtime 861,45732
(defun mon-match-at-point 953,51245
(defun mon-looking-back-p 991,52847
(defun mon-string-read-match-string 1030,54566
(defun mon-view-help-source 1075,56765
(defun mon-map-obarray-symbol-plist-props 1105,58139
(defun mon-escape-lisp-string-region 1174,62196
(defun mon-unescape-lisp-string-region 1206,63466
(defun mon-quote-sexp 1228,64386
(defun mon-toggle-eval-length 1252,65277
(defun mon-pretty-print-sexp-at-point 1293,67161
(defun mon-princ-cb 1356,69809
(defun mon-eval-sexp-at-point 1370,70410
(defun mon-eval-print-last-sexp 1398,71541
(defun mon-eval-expression 1411,72028
(defun mon-extend-selection 1447,73641
(defun mon-list-fonts-display 1474,74552
(defun mon-font-at-point 1525,76761
(defun mon-semnav-up 1538,77284
(defun mon-show-columns 1560,77924
(defun mon-nuke-and-eval 1596,79650
(defun mon-unbind-defun 1630,81157
(defun mon-unbind-symbol 1643,81765
(defun mon-unbind-function 1656,82375
(defun mon-unbind-command 1666,82847
(defun mon-unbind-variable 1676,83313
(defun mon-dump-object-to-file 1698,84383
(defun mon-byte-compile-and-load 1730,85941
(defun mon-compile-when-needed 1749,86802
(defun mon-load-or-alert 1777,88337
(defun mon-erc-query-user 1800,89436

naf-mode/mon-window-utils.el,522
(defgroup mon-window-utils 143,4893
(defcustom *mon-window-utils-xrefs*159,5700
(defun mon-frame-live-visible-graphic-p 180,6750
(defun mon-map-windows->plist 209,8264
(defun mon-twin-horizontal 281,12077
(defun mon-twin-vertical 291,12411
(defun mon-toggle-menu-bar 302,12727
(defun mon-scratch 318,13399
(defun mon-switch-to-messages 340,14399
(defun mon-kill-completions 349,14747
(defun mon-delete-completion-window 362,15202
(defun mon-temp-buffer-show-finish 395,17122
(defun mon-flip-windows 416,18274

naf-mode/naf-mode-publications-periodicals-intnl.el,177
(defvar *naf-mode-publications-periodicals-intnl-xrefs*98,3217
(defvar *naf-publications-periodicals-intnl*117,4070
(defconst naf-mode-publications-periodicals-intnl175,6955

naf-mode/mon-doc-help-char-encoding-lossage.el,878
(defgroup mon-doc-help-char-encoding-lossage 136,4366
(defun mon-make-encoding-position-lossage-table 149,5000
(defcustom *mon-doc-help-char-encoding-lossage-xrefs*191,7411
(defcustom *8859-1-8859-15-lossage*219,8837
(defcustom *8859-1-8859-15-lossage-rules*250,10676
(defcustom *cp1252-8859-15-lossage*265,11328
(defcustom *cp1252-8859-15-lossage-rules*299,13487
(defcustom *cp1252-8859-1-lossage*316,14238
(defcustom *cp1252-8859-1-lossage-rules*346,16124
(defun mon-get-encoding-codepoint 363,16947
(defun mon-get-encoding-position-lossage 426,21061
(defun mon-get-encoding-point-hist 467,23771
(defun mon-get-encoding-map-results 504,25768
(cl-defun mon-get-encoding-point-hist-map-plists 536,27391
(defun mon-help-cp1252-iso-8859-1-lossage 582,29983
(defun mon-help-iso-8859-1-8859-15-lossage 610,31454
(defun mon-help-cp1252-iso-8859-15-lossage 636,32842

naf-mode/mon-word-count-utils.el,452
(defun mon-get-syntax-at 116,3107
(defun mon-get-syntax-class-at 141,4340
(defun mon-line-test-content 172,5668
(defun mon-word-get-next 303,14046
(defun mon-word-get-list-in-buffer 332,15096
(defun mon-word-reverse-region 386,17591
(defun mon-word-iterate-over 428,19274
(defun mon-word-count-analysis 458,20612
(defun mon-word-count-occurrences 498,22688
(defun mon-word-count-region 607,28892
(defun mon-word-count-chars-region 624,29556

naf-mode/naf-mode-db-fields.el,252
(defconst naf-mode-delim 119,4861
(defconst naf-mode-comment-delim 132,5440
(defconst naf-mode-name-divider 145,6076
(defconst naf-mode-db-entry 200,7741
(defconst naf-mode-field-names-bnf434,15815
(defconst naf-mode-db-field-flags-bnf 464,17240

naf-mode/mon-bzr-utils.el,351
(defgroup mon-bzr-utils 116,3377
(defcustom *mon-bzr-utils-xrefs* 140,4523
(defun mon-help-bzr-topics 184,6374
(defun mon-help-bzr-usage 311,13423
(defun mon-help-bzr-aliases 358,15535
(defun mon-help-bzr-init 387,16433
(defun mon-bzr-log-last 619,24697
(defvar *mon-hgignore-template* 631,25209
(defun mon-insert-hgignore-template 783,29878

naf-mode/naf-mccarthy-facts.el,454
(defun facts 22,1143
(defun period 237,10612
(defun rot 243,10775
(defun mvmult 248,10916
(defun vplus 252,11038
(defun vminus 256,11172
(defun scap 260,11311
(defun svmult 264,11440
(defun addup 267,11542
(defconst zerovec 273,11652
(defun length 276,11737
(defconst Imatrix 278,11806
(defun smmult 280,11867
(defun mplus 283,11964
(defun mminus 286,12076
(defun mmult 289,12191
(defun multiplyup 294,12381
(defun wind-power 337,13431

naf-mode/naf-mode-city-names-us.el,79
(defvar *naf-city-names-us*92,3341
(defconst naf-mode-city-names-us 209,5411

naf-mode/mon-doc-help-pacman.el,199
(defvar *regexp-clean-pacman-Q* 110,3360
(defun mon-help-pacman-Q 150,5723
(defvar *regexp-clean-pacman-S* 268,11780
(defun mon-help-pacman-S 313,14579
(defun mon-help-pacman-commands 450,21859

naf-mode/naf-mode-state-names.el,83
(defvar *naf-mode-state-to-postal*82,2967
(defconst naf-mode-state-names146,4816

naf-mode/mon-boxcutter.el,754
(defgroup mon-boxcutter 245,9887
(defcustom *boxcutter-conversion-program* 264,10963
(defcustom *boxcutter-path* 286,12379
(defcustom *boxcutter-captures* 312,13573
(defcustom *boxcutter-title-bar-vig* 336,14633
(defcustom *boxcutter-counter* 355,15433
(defcustom *boxcutter-tstamp* 364,15787
(defvar *boxcutter-captured-last* 375,16239
(defun boxcutter-gen-tstamp 384,16690
(defun boxcutter-incr-cntr 395,17131
(defun boxcutter-mkdir-loadtime 412,17829
(defun boxcutter-gen-fname 430,18786
(defun boxcutter-big-n-small 469,20828
(defun boxcutter-get-win-coords 500,22354
(defun boxcutter-get-frame-coords 553,24987
(defun* boxcutter-capture 596,27086
(defun boxcutter-capture-set-crop 672,30819
(defun boxcutter-call-convert 688,31451

naf-mode/mon-iptables-vars.el,39
(defconst *mon-iptables-alst*114,3334

naf-mode/mon-env-proc-utils.el,568
(defgroup mon-env-proc-utils 134,4487
(defcustom *mon-env-proc-utils-xrefs* 152,5381
(defun mon-get-system-specs 176,6774
(defun mon-get-env-vars-symbols 211,8356
(defun mon-get-env-vars-strings 244,10053
(defun mon-get-env-vars-emacs 290,12252
(defun mon-get-sys-proc-list 366,16464
(defun mon-insert-sys-proc-list 391,17595
(defun mon-get-proc-w-name 411,18404
(defun mon-get-process 453,20619
(defun mon-escape-string-for-cmd 500,22853
(defun mon-terminal 520,23890
(defun mon-cmd 539,24866
(defun mon-firefox 558,25773
(defun mon-conkeror 569,26194

naf-mode/naf-mode-english-roles.el,145
(defgroup naf-mode-english-roles 90,3034
(defconst naf-mode-english-roles-primary204,5770
(defconst naf-mode-english-roles-secondary624,15215

naf-mode/mon-doc-help-utils-supplemental.el,275
(defun mon-comment-divider 165,6325
(defun mon-insert-lisp-testme 195,7559
(defvar *regexp-symbol-defs* 282,11569
(defun mon-string-index 336,14306
(defun mon-string-upto-index 357,15420
(defun mon-string-after-index 371,16134
(defun mon-string-justify-left 392,17343

naf-mode/naf-skeletons.el,229
(define-skeleton book-naf128,4487
(define-skeleton artist-naf202,5760
(define-skeleton people-naf253,6587
(define-skeleton author-naf307,7352
(define-skeleton brand-naf357,8060
(define-skeleton benezit-naf-template417,8937

naf-mode/mon-string-utils.el,1273
(defgroup mon-string-utils 170,6429
(defcustom *mon-string-utils-xrefs* 185,7236
(defun mon-string-split 215,8920
(defun mon-string-spread 276,12516
(defun mon-string-justify-left 377,17449
(defun mon-string-fill-to-col 483,22918
(defun mon-string-index 502,23723
(defun mon-string-upto-index 536,25209
(defun mon-string-after-index 549,25903
(defun mon-string-sort-descending 564,26648
(defun mon-string-position 583,27622
(defun mon-string-has-suffix 597,28352
(defun mon-string-chop-spaces 659,31937
(defun mon-string-ify-list 681,32989
(defun mon-string-split-on-regexp 703,33946
(defun mon-string-replace-char 731,35292
(defun mon-string-sub-old->new 752,36346
(defun mon-string-repeat 791,38418
(defun mon-string-to-hex-list-cln-chars 829,40019
(cl-defun mon-string-to-hex-string 856,41431
(defun mon-string-from-hex-list 905,43924
(defun mon-string-to-hex-list 939,45581
(defun mon-string-infix 982,47735
(defun mon-string-explode 1016,49444
(defun mon-string-permute 1034,50226
(defun mon-string-permute-line 1077,52203
(defun mon-string-splice-sep 1116,53784
(defun mon-string->strings-splice-sep 1191,57642
(defun mon-string-to-regexp 1229,59633
(defun mon-string-match-in-list-p 1265,61339
(defun mon-string-convert-loc 1283,62061

naf-mode/mon-get-mon-packages.el,68
(defvar *mon-el-library*92,2713
(defun mon-wget-mon-pkgs 237,6745

naf-mode/naf-mode-dates.el,978
(defgroup naf-mode-dates 140,4697
(defcustom *naf-mode-date-xrefs* 150,5151
(defcustom naf-weekday-alist183,6248
(defcustom naf-month-abbrev-alist 228,7951
(defcustom naf-mode-english-dates294,10771
(defcustom naf-mode-english-days350,12946
(defcustom naf-mode-french-dates386,14222
(defcustom naf-mode-french-days437,16200
(defcustom naf-mode-simple-date 470,17233
(defcustom naf-mode-year-range485,17877
(defcustom naf-mode-date-string513,18801
(defcustom naf-mode-lifespan 545,19970
(defcustom naf-mode-circa-dates560,20658
(defcustom naf-mode-benezit-date 595,21900
(defcustom naf-active-date-flags 609,22393
(defcustom naf-mode-active-date633,22961
(defcustom naf-active-date-flags-paren 649,23557
(defcustom naf-mode-active-date-flags-paren 677,24162
(defcustom naf-active-date-flags-solo 696,25065
(defcustom naf-mode-active-date-flags-solo 710,25501
(defcustom *regexp-french-date-prefix* 725,26084
(defcustom *regexp-french-date-siecle* 758,26940

naf-mode/naf-mode-students-of-julian.el,1202
(defvar *naf-mode-students-of-julian-xrefs* 109,3843
(defvar *naf-students-of-julian-french*133,4705
(defconst naf-mode-students-of-julian-french 206,9120
(defvar *naf-students-of-julian-us*228,9940
(defconst naf-mode-students-of-julian-us266,11643
(defvar *naf-students-of-julian-germany*287,12408
(defconst naf-mode-students-of-julian-germany302,12960
(defvar *naf-students-of-julian-brazil*324,13784
(defconst naf-mode-students-of-julian-brazil335,14203
(defvar *naf-students-of-julian-canada*356,15012
(defconst naf-mode-students-of-julian-canada376,15833
(defvar *naf-students-of-julian-misc*397,16640
(defconst naf-mode-students-of-julian-misc435,19653
(defvar *naf-students-of-julian-finland*456,20440
(defconst naf-mode-students-of-julian-finland465,20765
(defvar *naf-students-of-julian-norway*486,21586
(defconst naf-mode-students-of-julian-norway 498,22039
(defvar *naf-students-of-julian-uk*519,22854
(defconst naf-mode-students-of-julian-uk531,23277
(defvar *naf-students-of-julian-russia*552,24041
(defconst naf-mode-students-of-julian-russia564,24529
(defvar *naf-students-of-julian-switzerland*585,25338
(defconst naf-mode-students-of-julian-switzerland597,25770

naf-mode/naf-mode-institution.el,674
(defvar *naf-mode-institution-xrefs* 94,3103
(defconst naf-mode-benezit-museum-short 116,3960
(defvar *naf-institution-museum-names*136,4816
(defconst naf-mode-institution-museum-names 180,6219
(defvar *naf-institution-names-anchored*200,6952
(defconst naf-mode-inst-names-anchored 303,9602
(defvar *naf-institution-names-generic* 320,10399
(defconst naf-mode-institution-names-generic 351,11280
(defvar *naf-academy-name* 367,11933
(defconst naf-mode-academy-names 395,13091
(defvar *naf-school-names-intnl*415,13794
(defconst naf-mode-school-names-intnl 455,15838
(defvar *naf-school-names-english*472,16557
(defconst naf-mode-school-names-english 511,17991

naf-mode/mon-tramp-utils.el,638
(defvar *mon-tramp-mode-line-buffer-ident* 259,10219
(defvar *mon-tramp-putty-private-keys* 290,11791
(defvar *mon-tramp-paths-alist* 311,12868
(defvar *mon-tramp-default-methods-l* 339,14495
(defun mon-tramp-plink-example 383,17193
(defun mon-tramp-add-default-methods 414,18905
(defun mon-tramp-utils-loadtime 438,20221
(defun mon-tramp-putty-conf-status 448,20614
(defun mon-tramp-add-pageant-keys 480,22220
(defun mon-ssh-add-p 513,23768
(defun mon-tramp-read-conns 531,24536
(defun mon-tramp-connect 563,26110
(defun mon-tramp-disconnect 578,26727
(defun mon-tramp-su-local 592,27318
(defun mon-tramp-syntax 619,28418

naf-mode/mon-insertion-utils.el,2632
(defgroup mon-insertion-utils 211,9225
(defcustom *mon-insertion-utils-xrefs*228,10075
(defun mon-insert-dirs-in-path 267,12257
(defun mon-insert-file-in-dirs 296,13748
(defun mon-insert-whitespace 374,17811
(defun mon-insert-newlines 398,18996
(defun mon-insert-string-n-fancy-times 429,20548
(defun mon-insert-string-n-times 566,27761
(defun mon-line-number-region 612,29756
(defun mon-string-incr 644,31265
(defun mon-insert-string-ify 798,39696
(defun mon-insert-unicode 816,40588
(defun mon-split-designator 908,45983
(defun mon-comment-divider 931,46854
(defun mon-comment-divider-to-col 960,48307
(defun mon-comment-lisp-to-col 1062,53929
(defun mon-comment-divider-to-col-four 1082,54966
(defun mon-insert-php-comment-divider 1099,55614
(defun mon-insert-user-name-cond 1114,56307
(defun mon-insert-system-type-cond 1147,57894
(defun mon-insert-regexp-template 1168,58849
(defun mon-insert-regexp-template-yyyy 1187,59757
(defun mon-lisp-CL-package-complete 1236,62112
(defun mon-insert-lisp-CL-mode-line-template 1272,63897
(defun mon-insert-lisp-CL-file-template 1377,69515
(defun mon-insert-lisp-CL-package-template 1458,73742
(defun mon-insert-lisp-CL-eval-when 1549,78963
(defun mon-insert-lisp-CL-debug 1592,80940
(defun mon-insert-lisp-doc-eg-xref 1624,82508
(defun mon-insert-lisp-fundoc-eg-xref 1712,87069
(defun mon-insert-lisp-CL-jump-doc 1751,88970
(defun mon-insert-lisp-CL-eol-tilde 1882,96125
(defun mon-insert-lisp-CL-eol-tilde-no-at 1907,97196
(defun mon-insert-lisp-stamp 1932,98303
(defun mon-build-copyright-string 1967,100182
(defun mon-insert-copyright 2057,105221
(defcustom *mon-github-username-for-pathname* 2129,108851
(defcustom *mon-github-repository-name-for-pathname* 2148,109831
(defcustom *mon-github-repository-default-pathname* 2168,110788
(defcustom *mon-github-pathname-url* 2202,112825
(defun mon-build-github-default 2239,114769
(defun mon-build-github-repo-path-defaults 2279,116952
(defun mon-insert-file-template 2366,122133
(defvar *mon-gnu-license-header* 2477,127758
(defvar *mon-gnu-license-header-emacs* 2513,129557
(defvar *mon-mit-license-header* 2535,130585
(defcustom *mon-bsd-license-header-COPYRIGHT-HOLDER* 2578,132822
(defvar *mon-bsd-license-header* 2597,133845
(defvar *mon-gnu-license-header-gfdl* 2652,136905
(defun mon-build-copyright-string-license 2685,138702
(defun mon-insert-gnu-licence 2741,141706
(defun mon-insert-gnu-licence-gfdl 2772,143182
(defun mon-insert-defclass-template 2812,145267
(defun mon-insert-texi-template 2920,150509
(defun mon-comput-45 3027,154354
(defun mon-comput-33 3056,155374

naf-mode/mon-text-property-utils.el,1951
(defsubst mon-insert-w-text-properties 170,7139
(cl-defun mon-get-text-property-intervals 179,7527
(defun %mon-set-buffer-substring 318,15950
(defun %mon-set-buffer-substring-no-properties 344,17225
(defsetf buffer-substring-no-properties 353,17756
(defun mon-remove-text-property 366,18452
(defun mon-remove-single-text-property 380,19271
(defun mon-nuke-text-properties-region 408,20749
(defun mon-get-face-at-point 435,22103
(defun mon-get-text-properties-region-prop 467,23707
(defun mon-get-text-properties-region-prop-list 486,24692
(defun mon-search-text-properties-prop 512,26176
(defun mon-get-text-properties-region-to-kill-ring 537,27242
(defun mon-get-text-properties-category 566,28578
(defun mon-list-all-properties-in-buffer 584,29415
(defun mon-nuke-text-properties-buffer 614,31023
(defun mon-get-next-face-property-change 641,32701
(defun mon-get-next-face-property-change-if 674,34495
(defun mon-get-text-properties-region 710,36272
(defun mon-get-text-properties-print 740,38026
(defun mon-get-text-properties-read-temp 760,38931
(defun mon-get-text-properties-elisp-string-pp 788,40267
(defun mon-get-text-properties-elisp-string 823,41861
(defun mon-get-text-properties-parse-prop-val-type-chk 857,43617
(defun mon-get-text-properties-parse-buffer 903,45616
(defun mon-get-text-properties-parse-sym 965,48966
(cl-defun mon-get-text-properties-parse-buffer-or-sym 1001,50866
(defun mon-get-text-properties-map-ranges 1061,54236
(defun mon-get-text-properties-map-ranges-string 1085,55360
(defun mon-get-text-property-bounds 1117,57008
(defun mon-get-text-property-remove-all 1144,58454
(defun mon-overlay-flash-region 1168,59467
(defun mon-get-overlays-region 1217,62245
(defun mon-get-overlays-region-map-props 1262,64217
(defun mon-get-overlays-map-props 1312,66599
(defun mon-get-overlays-buffer 1348,68357
(defun mon-set-overlay-range 1374,69645
(defun mon-nuke-overlay-buffer 1394,70669

naf-mode/mon-doc-help-proprietary.el,301
(defvar *mon-compromise-my-ms-W32-virginity* 67,1909
(defvar *mon-help-w32-CMD-commands* 76,2468
(defun mon-help-w32-cmd-commands 88,3195
(defun mon-bind-doc-help-proprietery-vars-at-loadtime 113,4524
(defun mon-help-w32-shell-execute 153,6860
(defvar *mon-help-w32-CMD-commands-TEMP* 382,18990

naf-mode/ebay-template-mode/ebay-template-mode.el,613
(defconst *mon-ebay-template-mode-version* 154,5072
(defgroup ebay-template-mode 160,5338
(defgroup ebay-template-mode-faces 168,5610
(defcustom *mon-ebay-account-ids* 177,5931
(defcustom *mon-ebay-comment-prefix* 193,6616
(defvar *mon-ebay-field-entry* 202,6949
(defvar *mon-ebay-field-delims* 247,9035
(defvar *mon-ebay-line-delims* 264,9871
(defvar *mon-ebay-template-font-lock-keywords* 313,12066
(defvar *mon-ebay-template-mode-map*341,13504
(defvar *mon-ebay-template-mode-hook* 384,15845
(defvar *mon-ebay-template-mode-syntax-table*395,16177
(define-derived-mode ebay-template-mode 413,16921

naf-mode/ebay-template-mode/ebay-template-html-utils.el,735
(defvar xmlgen-escape-attribute-vals 165,4942
(defvar xmlgen-escape-elm-vals 169,5067
(defvar xmlgen-escapees173,5187
(defun xmlgen 182,5434
(defun xmlgen-string-escape 235,7300
(defun xmlgen-attr-to-string 247,7708
(defun xmlgen-extract-plist 268,8509
(defgroup html-lite 390,13097
(defcustom html-lite-doctype 396,13262
(defconst html-lite-version 408,13832
(defconst html-lite-doctype-alist411,13903
(defmacro html-lite-define-elements 436,15000
(defun html-lite-make-element 456,15707
(defmacro with-html-lite-header 489,16601
(defun html-lite-escape-string 501,16942
(defun html-doctype 508,17242
(defun html-lite-make-name 517,17591
(defun html-lite-write-tree 522,17736
(defun html-lite-browse-tree 536,18118

naf-mode/ebay-template-mode/ebay-template-tools-ewiki.el,1360
(defun mon-insert-ebay-template 86,2600
(defvar *mon-ebay-template* 107,3613
(defun mon-choose-ebay-delims 181,6239
(defun mon-choose-ebay-account 199,7360
(defun mon-make-html-tree 211,7890
(defun mon-insert-ebay-html-tree 225,8317
(defun mon-make-ebay-dir-list 234,8756
(defun mon-make-ebay-dir-list-2 253,9555
(defun mon-insert-ebay-dirs 307,11936
(defun mon-insert-ebay-dbc-file 357,14621
(defun mon-check-ebay-template-path 375,15541
(defun mon-insert-ebay-dbc-template 462,21635
(defun mon-get-ebay-bmps-in-dir 508,24112
(defalias 'get-bmps-in-dir get-bmps-in-dir525,24945
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list526,24999
(defun mon-get-nefs-in-dir 534,25338
(defalias 'get-nefs-in-dir get-nefs-in-dir550,26168
(defun mon-insert-ebay-bmps-in-file 554,26331
(defun mon-get-ebay-jpgs-list 573,27068
(defun mon-insert-ebay-jpgs-in-file 600,28205
(defun mon-get-ebay-jpgs-count 619,28960
(defun mon-get-ebay-bmps-count 631,29397
(defun mon-get-ebay-img-count-verify 643,29832
(defun mon-ebay-field-trigger 680,31408
(defun mon-insert-ebay-field-trigger-r 718,33329
(defun mon-insert-ebay-field-trigger-l 731,33754
(defun mon-insert-ebay-field-trigger-l-and-r 744,34182
(defun mon-insert-ebay-photo-per-scan-descr 764,34869
(defun mon-ebay-image-linkify 790,36162
(defun mon-ebay-image-linkify-lite 841,38415

naf-mode/ebay-template-mode/ebay-template-tools.el,991
(defvar *mon-html-ebay-template* 150,5509
(defvar *mon-html-domain-for-ebay-template*160,5843
(defvar *mon-ebay-image-linkify-templates*173,6455
(defun mon-insert-ebay-template 187,7077
(defvar *mon-ebay-template* 223,9060
(defun mon-choose-ebay-delims 304,12055
(defun mon-choose-ebay-account 324,13353
(defun mon-make-html-tree 341,14154
(defun mon-insert-ebay-html-tree 360,14926
(defun mon-make-ebay-dir-list 372,15522
(defun mon-make-ebay-dir-list-2 396,16573
(defun mon-insert-ebay-dirs 447,19017
(defun mon-insert-ebay-dbc-file 493,21501
(defun mon-check-ebay-template-path 513,22568
(defun mon-insert-ebay-dbc-template 603,28869
(defun mon-ebay-field-trigger 657,31714
(defun mon-insert-ebay-field-trigger-r 699,33791
(defun mon-insert-ebay-field-trigger-l 715,34415
(defun mon-insert-ebay-field-trigger-l-and-r 731,35039
(defun mon-insert-ebay-photo-per-scan-descr 753,35869
(defun mon-ebay-image-linkify 779,37208
(defun mon-ebay-image-linkify-lite 834,40088

naf-mode/naf-mode-events.el,605
(defvar *naf-mode-events-xrefs* 102,3453
(defvar *naf-art-events-generic*211,7613
(defconst naf-mode-art-events-generic 224,8186
(defvar *naf-art-events-generic-french*236,8752
(defconst naf-mode-art-events-generic-french 254,9283
(defvar *naf-art-events-french*266,9905
(defconst naf-mode-art-events-french 295,11423
(defvar *naf-art-events-generic-english*308,11988
(defconst naf-mode-art-events-generic-english 337,12748
(defvar *naf-art-events-english*350,13381
(defconst naf-mode-art-events-english 380,14928
(defvar *naf-world-events*394,15499
(defconst naf-mode-world-events 416,16050

naf-mode/mon-cl-compat.el,5131
(defun cl::cl-simple-expr-p 259,10427
(defun cl::cl-simple-exprs-p 274,11018
(defun cl::cl-safe-expr-p 282,11239
(defun cl::cl-const-expr-p 295,11812
(defun cl::cl-const-exprs-p 306,12179
(defun cl::cl-const-expr-val 313,12371
(defun cl::cl-expr-access-order 318,12548
(defun cl::cl-expr-contains 329,12906
(defun cl::cl-expr-contains-any 340,13259
(defun cl::cl-expr-depends-p 347,13500
(defun cl::gensym 356,13777
(defun cl::gentemp 368,14220
(defun cl::cl-defun-expander 379,14666
(defun cl::cl-do-proclaim 387,14898
(defun cl::cl-defsubst-expand 424,16478
(defun cl::cl-transform-function-property 464,18588
(defun cl::cl-transform-lambda 480,19308
(defun cl::cl-do-arglist 536,22122
(defun cl::cl-arglist-args 670,27218
(defun cl::cl-compile-time-too 684,27760
(defun cl::cl-byte-compile-block 700,28421
(defun cl::cl-byte-compile-throw 715,29087
(defun cl::compiler-macroexpand 729,29616
(defun cl::cl-byte-compile-compiler-macro 745,30230
(defun cl::cl-make-type-test 752,30488
(defun cl::reduce 790,32193
(defun cl::fill 811,33032
(defun cl::replace 831,33660
(defun cl::remove* 874,35463
(defun cl::remove-if 920,37213
(defun cl::remove-if-not 929,37595
(defun cl::delete* 938,37989
(defun cl::delete-if 982,39622
(defun cl::delete-if-not 990,39974
(defun cl::remove-duplicates 998,40338
(defun cl::delete-duplicates 1005,40611
(defun cl::cl-delete-duplicates 1011,40869
(defun cl::substitute 1052,42567
(defun cl::substitute-if 1074,43449
(defun cl::substitute-if-not 1083,43868
(defun cl::nsubstitute 1092,44299
(defun cl::nsubstitute-if 1126,45700
(defun cl::nsubstitute-if-not 1134,46091
(defun cl::find 1142,46494
(defun cl::find-if 1151,46849
(defun cl::find-if-not 1159,47159
(defun cl::position 1167,47481
(defun cl::cl-position 1176,47897
(defun cl::position-if 1198,48718
(defun cl::position-if-not 1206,49049
(defun cl::count 1214,49392
(defun cl::count-if 1229,50035
(defun cl::count-if-not 1236,50296
(defun cl::mismatch 1243,50569
(defun cl::search 1274,51984
(defun cl::sort* 1301,53155
(defun cl::stable-sort 1316,53740
(defun cl::merge 1324,54054
(defun cl::member* 1342,54860
(defun cl::member-if 1357,55403
(defun cl::member-if-not 1365,55697
(defun cl::cl-adjoin 1374,56065
(defun cl::assoc* 1382,56337
(defun cl::assoc-if 1398,56924
(defun cl::assoc-if-not 1405,57179
(defun cl::rassoc* 1412,57449
(defun cl::rassoc-if 1426,57970
(defun cl::rassoc-if-not 1433,58227
(defun cl::union 1440,58499
(defun cl::nunion 1461,59368
(defun cl::intersection 1472,59854
(defun cl::nintersection 1495,61212
(defun cl::set-difference 1505,61676
(defun cl::nset-difference 1525,62470
(defun cl::set-exclusive-or 1536,62966
(defun cl::nset-exclusive-or 1549,63620
(defun cl::subsetp 1562,64240
(defun cl::subst-if 1577,64778
(defun cl::subst-if-not 1585,65148
(defun cl::nsubst 1593,65530
(defun cl::nsubst-if 1602,65902
(defun cl::nsubst-if-not 1610,66282
(defun cl::sublis 1620,66760
(defun cl::cl-sublis-rec 1629,67140
(defun cl::nsublis 1643,67649
(defun cl::cl-nsublis-rec 1653,68073
(defun cl::tree-equal 1668,68751
(defun cl::cl-tree-equal-rec 1676,69094
(defun cl::cl-set-substring 1689,69496
(defun cl::cl-macroexpand 1704,70060
(defun cl::cl-compiling-file 1723,70935
(defun cl::proclaim 1733,71320
(defun cl::cl-random-time 1740,71565
(defun cl::list* 1747,71801
(defun cl::ldiff 1762,72328
(defun cl::floatp-safe 1773,72691
(defun cl::plusp 1781,72973
(defun cl::minusp 1787,73115
(defun cl::oddp 1794,73297
(defun cl::evenp 1801,73488
(defun cl::subst 1807,73641
(defun cl::cl-do-subst 1818,74171
(defun cl::copy-list 1829,74560
(defun cl::acons 1842,75004
(defun cl::pairlis 1850,75284
(defun cl::mapcar* 1859,75669
(defun cl::subseq 1883,76609
(defun cl::coerce 1911,77593
(defun cl::typep 1929,78315
(defun cl::gcd 1938,78600
(defun cl::lcm 1949,78906
(defun cl::isqrt 1962,79237
(defun cl::floor* 1976,79641
(defun cl::ceiling* 1985,79956
(defun cl::truncate* 1995,80341
(defun cl::round* 2004,80693
(defun cl::mod* 2025,81361
(defun cl::rem* 2032,81555
(defun cl::signum 2039,81754
(defun cl::cl-mapcar-many 2047,82034
(defun cl::map 2082,83089
(defun cl::maplist 2092,83478
(defun cl::cl-mapc 2114,84178
(defun cl::mapl 2125,84521
(defun cl::mapcan 2137,84917
(defun cl::mapcon 2145,85211
(defun cl::some 2153,85502
(defun cl::every 2171,86136
(defun cl::notany 2187,86675
(defun cl::notevery 2195,86949
(defun cl::concatenate 2203,87228
(defun cl::revappend 2214,87644
(defun cl::nreconc 2221,87817
(defun cl::list-length 2228,87993
(defun cl::tailp 2238,88366
(defun cl::get* 2248,88731
(define-compiler-macro cl::get* 2258,89133
(defun cl::cl-set-getf 2268,89385
(defun cl::cl-do-remf 2276,89666
(defun cl::cl-remprop 2284,89946
(defun cl::cl-prettyprint 2298,90447
(defun cl::cl-do-prettyprint 2316,91036
(defvar cl::cl-macroexpand-cmacs 2346,92094
(defvar cl::cl-closure-vars 2347,92132
(defun cl::cl-macroexpand-all 2349,92180
(defun cl::cl-macroexpand-body 2434,96017
(defun cl-prettyexpand 2440,96228
(defun mon-cl-compat-loadtime 2453,96787

naf-mode/naf-mode-nation-french.el,127
(defvar *naf-mode-nation-french-xrefs* 83,2674
(defvar *naf-nation-french*101,3339
(defconst naf-mode-nation-french270,7194

naf-mode/naf-mode-regions.el,95
(defconst naf-mode-region-names-other193,5120
(defconst naf-mode-region-names-french345,8510

naf-mode/naf-mode.el,356
(defgroup naf-mode 206,6301
(defgroup naf-mode-faces 213,6593
(defconst *naf-mode-version* 223,6971
(defcustom *naf-comment-prefix* 229,7256
(defvar naf-font-lock-keywords239,7606
(defvar naf-mode-syntax-table369,15770
(defvar naf-mode-map394,16828
(defun new-naf 875,42600
(defvar naf-mode-hook 896,43553
(define-derived-mode naf-mode 902,43773

naf-mode/mon-lisppaste.el,79
(defcustom *tt--colorize-as* 327,11270
(defun mon-lisppaste-region 336,11564

naf-mode/mon-color-utils.el,715
(defun mon-color-mix 158,5646
(defun mon-color-mix-display 188,7177
(defun mon-defined-colors-without-duplicates 225,9188
(defun mon-rgb-to-hsv 256,10635
(defvar *mon-colorcomp-ewoc* 315,13401
(defvar *mon-colorcomp-data* 317,13438
(defvar *mon-colorcomp-mode-map* 319,13475
(defvar *mon-colorcomp-labels* 321,13516
(defun mon-colorcomp-pp 325,13631
(defun mon-colorcomp 347,14568
(defun mon-colorcomp-mod 384,16105
(defun mon-colorcomp-R-more 400,16835
(defun mon-colorcomp-G-more 410,17280
(defun mon-colorcomp-B-more 419,17724
(defun mon-colorcomp-R-less 428,18167
(defun mon-colorcomp-G-less 437,18608
(defun mon-colorcomp-B-less 446,19051
(defun mon-colorcomp-copy-as-kill-and-exit 457,19570

naf-mode/naf-mode-benezit-flags.el,151
(defconst naf-mode-benezit-section-flag92,3119
(defconst naf-mode-benezit-currency-acronym99,3522
(defvar *naf-mode-benezit-currency-alist*171,6383

naf-mode/mon-mysql-utils.el,1004
(defun mon-cln-pipes-get-field-col 133,4532
(defalias 'mon-mysql-get-field-col mon-mysql-get-field-col202,8146
(defun %subst% 213,8670
(defun mon-cln-pipes 252,10224
(defalias 'mon-mysql-cln-pipes mon-mysql-cln-pipes441,20593
(defun mon-cln-pipes-map-field-pairs 469,21721
(defalias 'mon-mysql-cln-pipes-map-col-field mon-mysql-cln-pipes-map-col-field521,23987
(defun mon-csv-string-to-list 548,25143
(defalias 'mon-mysql-csv-to-list mon-mysql-csv-to-list583,26968
(defun mon-csv-string-map-list 591,27267
(defalias 'mon-mysql-csv-map-list mon-mysql-csv-map-list606,28097
(defun mon-csv-map-col-field-pairs 616,28571
(defalias 'mon-mysql-csv-map-col-field mon-mysql-csv-map-col-field641,29785
(defun mon-csv-split-string 661,30549
(defalias 'mon-mysql-csv-split-string mon-mysql-csv-split-string695,32156
(defvar *regexp-clean-mysql* 700,32359
(defun mon-bind-mysql-help-table-loadtime 733,34109
(defun mon-help-mysql-complete 909,46709
(defun mon-help-mysql-commands 936,47989

naf-mode/google-define-redux.el,2416
(defgroup google-define-redux 209,7933
(defgroup google-define-redux-faces 234,9053
(defcustom *google-define-redux-xrefs* 251,9748
(defcustom *google-define-get-buffer* 299,12292
(defcustom *google-define-buffer-suffix* 317,13125
(defvar *get-google-defined* 336,14051
(defvar *regexp-google-define-headings* 361,15045
(defvar *regexp-google-define-itemized*385,15955
(defvar *regexp-google-define-dictionary-heading-tag*415,17557
(defvar *regexp-google-define-next-url-in-heading*449,18663
(defvar *regexp-google-define-source-ref*495,20298
(defface gg-def-base544,21991
(defface gg-def-delim 560,22681
(defface gg-def-heading578,23423
(defface gg-def-num 591,23983
(defface gg-def-inition604,24569
(defface gg-def-defined620,25362
(defcustom *regexp-google-defined-fontlock*632,25880
(defun google-define-get-command 676,28608
(defun %google-define-verify-query-url-lang-params 735,31550
(defun %google-define-verify-query-url-xref-type-params 755,32435
(defun google-define-clean-string 774,33210
(defun %google-define-clean-term-for-split 818,35691
(defun %google-define-clean-heading-for-replace 838,36720
(defun* google-define-make-query-url 851,37466
(defun google-define-parse-buffer 905,40304
(defun google-define-font-lock 1046,48040
(defun %google-define-set-url-current-object 1078,49831
(defun google-define 1111,51492
(defun google-define-kill-def-buffers 1166,54344
(defun google-define-find-next-heading 1211,56290
(defun google-define-make-heading-replacement 1241,57803
(defun google-define-find-next-url-in-heading 1266,58944
(defun google-define-find-headings 1312,60733
(defun %google-define-find-itemized-regexp-for-search-term 1350,62416
(defun google-define-find-itemized 1373,63234
(defun google-define-parse-related-languages 1402,64177
(defun %google-define-find-next-related-lang-regexp-for-search-term 1425,65107
(defun google-define-find-next-related-language-xref 1473,66425
(defun google-define-related-language-url 1485,67016
(defun google-define-related-language-xref 1514,68635
(defun google-define-button-action 1582,71242
(defun google-define-button-do-xref 1595,71779
(defun google-define-insert-xref-button 1606,72195
(define-button-type 'google-define-buttongoogle-define-button1624,72956
(define-button-type 'google-related-lang-buttongoogle-related-lang-button1632,73190
(defconst *google-define-html-entry-table*1759,79291

naf-mode/mon-line-utils.el,2063
(defgroup mon-line-utils 225,8562
(defcustom *mon-line-utils-xrefs*240,9362
(defun mon-line-get-next 276,11396
(defun mon-line-find-duplicates 297,12313
(defun mon-line-find-duplicates-cln 326,13774
(defun mon-line-previous-duplicate 372,15968
(defun mon-line-count-region 410,17836
(defun mon-line-count-buffer 420,18284
(defun mon-line-count-matchp 460,20207
(defun mon-line-length-max 488,21382
(defun mon-line-strings 513,22339
(defun mon-line-strings-region 568,24256
(defun mon-line-strings-qt-region 620,26267
(defun mon-line-strings-bq-qt-sym-bol 681,29380
(defun mon-line-strings-pipe-bol 744,32916
(defun mon-line-strings-indent-to-col 795,35005
(defun mon-line-indent-from-to-col 876,38634
(defun mon-line-strings-pipe-to-col 951,42184
(defun mon-line-pipe-lines 1002,44686
(defun mon-line-strings-to-conses 1061,46786
(defun mon-line-strings-to-list 1095,48207
(defun mon-line-strings-one-list 1176,52605
(defun mon-line-string-rotate-name 1201,53808
(defun mon-line-string-rotate-namestrings 1244,56195
(defun mon-line-string-unrotate-namestrings 1301,58394
(defun mon-line-string-rotate-namestrings-combine 1376,61673
(defun mon-line-string-insert-chars-under 1431,63829
(defun mon-line-drop-in-words 1477,66104
(defun mon-line-string-incr-padded 1541,70098
(defun mon-line-number-region-incr 1580,72195
(defun mon-line-string-get 1626,74368
(defun mon-line-string-split 1652,75632
(defun mon-spacep 1705,78256
(defun mon-spacep-not-bol 1734,79720
(defun mon-spacep-is-bol 1755,80742
(defun mon-spacep-is-after-eol 1777,81816
(defun mon-spacep-is-after-eol-then-graphic 1795,82755
(defun mon-spacep-at-eol 1824,84304
(defun mon-spacep-first 1845,85402
(defun mon-line-bol-is-eol 1863,86135
(defun mon-line-previous-bol-is-eol 1884,87228
(defun mon-line-next-bol-is-eol 1912,88643
(defun mon-line-eol-is-eob 1936,89757
(defun mon-line-end-or-code-end 1965,91204
(defun mon-backspace 1992,92370
(defun mon-goto-line-25% 2004,92737
(defun mon-goto-line-50% 2017,93348
(defun mon-goto-line-75% 2030,93938

naf-mode/mon-url-utils.el,1709
(defgroup mon-url-utils 201,7787
(defcustom *mon-url-utils-xrefs* 216,8612
(defcustom *mon-url-search-paths* 254,10714
(defcustom *mon-purge-on-its-all-text-on-quit* 298,12923
(defcustom *mon-purge-htmlfontify-dir-on-quit* 319,13819
(defcustom *regexp-hexcolor-keywords* 336,14573
(defun mon-its-all-text-purge-on-quit 366,15963
(defun mon-html-fontify-generate-file-name 417,18861
(defun mon-htmlfontify-dir-purge-on-quit 448,20584
(defun mon-htmlfontify-buffer-to-firefox 496,23575
(defun mon-htmlfontify-region-to-firefox 530,25220
(defun mon-hexcolor-add-to-font-lock 565,26894
(defun mon-url-encode 579,27766
(defun mon-url-decode 603,28913
(defun mon-search-ulan 631,30361
(defun mon-search-ulan-for-name 702,34401
(defun mon-search-wikipedia 711,34759
(defun mon-search-loc 736,35939
(defun mon-search-bnf 753,36799
(defun mon-insert-dbc-link 768,37554
(defun mon-insert-dbc-doc-link 781,38090
(defun mon-wrap-one-url 822,39708
(defun mon-wrap-all-urls 876,42462
(defun mon-wrap-url 923,44914
(defun mon-wrap-span 947,45852
(defun mon-make-html-table-string 972,46594
(defun mon-make-html-table 1001,47831
(defun mon-url-retrieve-to-new-buffer 1027,48986
(defun mon-get-host-address 1047,50119
(defun mon-w3m-dired-file 1081,51529
(defun mon-w3m-kill-url-at-point 1094,52132
(defun mon-get-w3m-url-at-point-maybe 1110,52904
(defun mon-get-w3m-url-at-point 1131,54016
(defun mon-w3m-goto-url-at-point 1155,55170
(defun mon-w3m-read-gnu-lists-nxt-prv 1180,56450
(defcustom *mon-tld-list* 1294,61766
(defsubst mon-tld-tld 1592,74163
(defsubst mon-tld-name 1598,74391
(defun mon-tld-find-tld 1606,74695
(defun mon-tld-find-name 1618,75153
(defun mon-tld 1629,75529

naf-mode/naf-mode-french-roles.el,100
(defconst naf-mode-french-roles-primary182,5656
(defconst naf-mode-french-roles-secondary296,8992

naf-mode/mon-doc-help-css.el,274
(defgroup mon-doc-help-css 140,4623
(defcustom *mon-doc-help-css-xrefs* 155,5299
(defun mon-help-css-check 182,6510
(defun mon-help-css-complete 323,11759
(defun mon-help-css-mode 433,15164
(defun mon-help-css-color 488,17045
(defun mon-help-css-properties 589,20293

naf-mode/mon-button-utils.el,830
(defgroup mon-button-utils 122,3492
(defcustom *mon-button-utils-xrefs* 142,4568
(defvar *mon-default-button-map*163,5427
(define-button-type 'mon-default-button mon-default-button174,5807
(defun mon-button-at-point-p 188,6320
(defun mon-button-at-point-describe-button-plist 228,8473
(defun mon-button-get-plist 248,9474
(defun mon-button-get-plist-props 288,11672
(defalias 'mon-get-button-plist-props mon-get-button-plist-props310,12702
(defun mon-follow-button 318,12960
(defun tt--make-test-button 384,15213
(defvar *naf-button-map* 410,16160
(defface naf-mode-artist-face-inverted424,16619
(define-button-type 'naf-dirnaf-dir440,17077
(define-button-type 'naf-artist naf-artist456,17669
(defun insert-naf-artist-button 483,18659
(defun naf-btn-activate 504,19405
(defun naf-next-label-button 519,19885

naf-mode/naf-mode-intnl-city-names.el,99
(defconst naf-mode-intnl-auction-city-names110,3131
(defconst naf-mode-intnl-city-names390,10691

naf-mode/mon-replacement-utils.el,3554
(defgroup mon-replacement-utils 190,7802
(defcustom *mon-replacement-utils-xrefs* 205,8663
(defun mon-is-naf-mode-p 258,11966
(defvar *naf-mode-buffer-local-llm* 305,14237
(defun mon-is-naf-mode-and-llm-p 313,14614
(defvar *iso-latin-1-approximation* 369,17145
(defun mon-make-iso-latin-1-approximation 376,17540
(defun mon-make-iso-latin-1-approximation-loadtime 396,18486
(defun mon-cln-iso-latin-1 408,19141
(defmacro deftransmogrify 427,20127
(defun mon-transmogrify 443,20799
(defun mon-walk-regexps-in-file 479,22701
(defun %mon-filter-regexp-file-if 505,23948
(defun %mon-filtering-regexp-file-list 521,24495
(defun mon-replace-regexps-in-file-list 530,24903
(defun mon-replace-strings 589,27920
(defun mon-replace-regexp-while 622,29728
(defun mon-replace-string-while 631,30145
(defun mon-regexp-filter 639,30450
(defun mon-string-canonical 660,31424
(defun replace-string-pairs-region3 729,35521
(defun replace-string-pairs-region-no-props 760,37000
(defun mon-replace-string-pairs-region-no-insert 790,38451
(defun mon-get-list-yorp 835,40300
(defun mon-get-list-norp 853,41188
(defun mon-replace-region-regexp-lists-nonint 869,41905
(defun mon-replace-region-regexp-lists 907,43805
(defun mon-regexp-map-match 962,46685
(defun mon-regexp-map-match-in-region 1004,48745
(defvar *mon-regexp-unintern* 1096,53483
(defun mon-replace-unintern-w-query 1166,56712
(defun mon-cln-mail-headers 1262,61265
(defun mon-cln-csv-fields 1408,68478
(defun mon-cln-irc-log-buffer 1578,77137
(defun mon-cln-freenode-log 1610,78474
(defun mon-cln-file-name-string 1635,79434
(defun mon-cln-html-chars 1662,80644
(defun mon-cln-html-tags 1679,81429
(defun mon-cln-xml-escapes 1719,83569
(defun mon-cln-xml<-parsed 1757,85543
(defun mon-cln-tgm-xml-LF 1787,86930
(defun mon-cln-xml<-parsed-strip-nil 1807,87671
(defun mon-cln-up-colon 1837,89042
(defun mon-downcase-hex-values 1908,92576
(defun mon-upcase-commented-lines 1924,93366
(defun mon-zippify-region 1941,94253
(defun mon-toggle-case-query-user 1959,94906
(defun mon-toggle-case-regexp-region 2005,97328
(defun mon-toggle-case-regexp 2048,99642
(defun mon-downcase-regexp-region 2105,102544
(defun mon-upcase-regexp-region 2124,103685
(defun mon-downcase-regexp 2144,104839
(defun mon-upcase-regexp 2166,105949
(defun mon-cln-BIG-whitespace 2191,107171
(defun mon-cln-whitespace 2240,109596
(defun mon-cln-trail-whitespace 2261,110555
(defun mon-kill-whitespace 2281,111383
(defun mon-cln-blank-lines 2296,112050
(defun mon-cln-spc-tab-eol 2317,112993
(defun mon-cln-spc-tab-at-eol-in-region 2339,114016
(defun mon-cln-uniq-lines 2366,115086
(defun mon-exchange-slash-and-backslash 2400,116565
(defun mon-cln-control-M 2420,117584
(defun mon-cln-piped-list 2440,118385
(defun mon-delete-back-up-list 2489,120531
(defun naf-backup-the-list 2531,122545
(defun mon-cln-philsp 2541,122904
(defun mon-cln-ulan 2578,124945
(defun mon-cln-imdb 2658,129275
(defun mon-cln-loc 2680,130252
(defun mon-cln-wiki 2702,131432
(defun mon-cln-bib 2719,132238
(defun mon-num-to-month 2734,132854
(defun mon-num-to-month-whitespace 2753,133659
(defun mon-month-to-num 2772,134587
(defun mon-abr-to-month 2790,135339
(defun mon-trans-cp1252-to-latin1 2809,136158
(defun mon-ital-date-to-eng 2828,136954
(defun mon-defranc-dates 2844,137661
(defun mon-defranc-places 2861,138449
(defun mon-cln-benezit 2880,139304
(defun mon-cln-benezit-fields 2898,140161
(defun mon-replace-common-abbrevs 2914,140862
(defun bug-cln-gilt-group 2937,142026

naf-mode/naf-mode-sql-skeletons.el,309
(define-skeleton mon-insert-sql-item-select89,2998
(define-skeleton mon-insert-sql-item-range-select98,3363
(define-skeleton mon-insert-sql-multiple-items-select108,3764
(defun mon-insert-sql-update 118,4280
(define-skeleton mon-insert-sql-item-update-skeleton158,6150
(define-skeleton item-naf167,7459

naf-mode/mon-name-utils.el,633
(defmacro mon-intern-artist 143,5106
(defun mon-string-rotate-name 163,5954
(defun mon-make-lastname-firstname 210,7924
(defun mon-make-names-list 246,9564
(defun mon-string-csv-rotate 277,10893
(defun mon-string-csv-regexp 292,11544
(defun mon-csv-to-perms 313,12541
(defvar *rotate-text-rotations* 369,15655
(defun mon-rotate-region 394,16733
(defun mon-rotate-string 428,18745
(defun mon-rotate-next 462,20795
(defun mon-rotate-get-rotations-for 498,22888
(defun mon-string-rotate-to-regexp 520,24240
(defun mon-indent-or-rotate 547,25553
(defun mon-make-name-return 568,26488
(defun mon-make-name-lispy 577,26870

naf-mode/naf-mode-nationality-english.el,144
(defvar *naf-mode-nationality-english-xrefs*81,2651
(defvar *naf-nationality-english*100,3391
(defconst naf-mode-nationality-english199,5076

naf-mode/naf-mode-wordfreq.el,43
(defconst *naf-mode-wordfreq-words*33,863

naf-mode/mon-doc-help-mail.el,81
(defun mon-help-mail-functons 142,4945
(defun mon-help-bbdb-functons 392,11083

naf-mode/mon-rectangle-utils.el,347
(defun mon-rectangle-columns 131,4034
(defun mon-rectangle-sum-column 156,5021
(defun mon-rectangle-operate-on 187,6488
(defun mon-rectangle-apply-on-region-points 221,7959
(defun mon-rectangle-downcase 243,8938
(defun mon-rectangle-upcase 252,9361
(defun mon-rectangle-capitalize 260,9683
(defun mon-kill-rectangle-w-beer-belly 273,10401

naf-mode/mon-syntax-utils.el,533
(defun mon-read-unreadable-object 62,2100
(defun mon-get-text-properties-elisp-string2 343,15515
(defun mon-get-text-properties-map-ranges-string-chk-type 416,18665
(defun mon-get-text-properties-map-ranges-compensate 614,29621
(cl-defun mon-get-text-properties-map-ranges-string 636,30435
(defun mon-syn-rng-scn-psn-at 753,34430
(defun mon-syn-parse-args 758,34579
(defun mon-syn-skp-to6 805,36100
(defun mon-syn-rng-scn6 830,37186
(defun rng-scn-2-3 838,37325
(defun mon-lisp-font-lock-syntactic-face-function 918,40083

naf-mode/mon-hash-utils.el,835
(defun mon-hash-get-symbol-name-if 169,6014
(defun mon-hash<-vector 311,12617
(defun mon-hash-make-size 326,13452
(defun mon-hash-from-alist 354,14872
(defun mon-hash-to-alist 374,15803
(defun mon-hash-add-uniquify 393,16699
(defun mon-hash-readlines-file 421,18016
(defun mon-hash-readlines-buffer 441,18970
(defun mon-hash-all-values 474,20527
(defun mon-hash-all-keys 489,21201
(defun mon-hash-to-list 504,21875
(defmacro mon-hash-get-keys 526,22842
(defmacro mon-hash-get-items 568,24998
(defmacro mon-hash-get-values 588,26005
(defmacro mon-hash-get-symbol-keys 608,27021
(defmacro mon-hash-get-string-keys 651,29377
(defmacro mon-hash-has-key 683,30806
(defmacro mon-hash-put-CL 703,31743
(defun mon-hash-describe 742,33558
(defun mon-hash-describe-descend 783,35287
(defun mon-hash-table-complete 807,36188

naf-mode/mon-dir-locals-alist.el,1107
(defgroup mon-dir-locals 144,4857
(defcustom *mon-bind-dir-locals-alist* 161,5794
(defcustom *mon-dir-locals-alist-xrefs*171,6191
(defcustom *mon-HG-root-path* 199,7645
(defcustom *mon-smith-poster-HG-path* 212,8168
(defcustom *mon-CL-scratch-path* 233,9048
(defcustom *bug-HG-path* 249,9685
(defcustom *mon-record-current-directory* 266,10350
(defcustom *emacs2html-temp* 284,11057
(defcustom *mon-html-fontify-file-name-template* 301,11849
(defcustom *mon-artist-naf-path* 316,12612
(defcustom *mon-brand-naf-path* 341,13615
(defcustom *mon-nef-scan-drive* 360,14362
(defcustom *mon-nef-scan-base-path* 372,14950
(defcustom *mon-nef-scan-path* 393,15936
(defcustom *mon-nef-scan-nefs-path* 409,16589
(defvar *mon-nefs_photos_nefs-alist* 430,17631
(defcustom *mon-nef-scan-nef2-path* 441,18258
(defcustom *mon-ebay-images-path* 458,19012
(defcustom *mon-ebay-images-bmp-path* 476,19809
(defcustom *mon-ebay-images-jpg-path* 495,20680
(defcustom *mon-ebay-images-temp-path* 514,21567
(defcustom *mon-ebay-images-lookup-path* 535,22585
(defcustom *mon-buffer-mode-defaults* 566,24245

naf-mode/mon-type-utils.el,1355
(defgroup mon-type-utils 190,7719
(defcustom *mon-type-utils-xrefs*208,8572
(defun mon-function-object-p 264,11361
(defun mon-symbol-cells-bound-p 439,21474
(defun mon-equality-or-predicate 533,26933
(defun mon-booleanp 580,29452
(defun mon-xor 629,31885
(defun mon-bitset-ternary 639,32269
(defun mon-string-or-null-and-zerop 674,33570
(defun mon-string-not-null-nor-zerop 701,34882
(defun mon-zero-or-onep 725,36220
(defun mon-booleanp-to-binary 772,38352
(defun mon-sequence-all-booleanp 825,40707
(defun mon-list-proper-p 962,49036
(defun mon-list-dotted-p 997,50671
(defun mon-list-proper-and-dotted-p 1022,51833
(defun mon-sequence-mappable-p 1049,53341
(defun mon-hash-or-mappable-p 1196,61622
(defvar *mon-bit-table* 1207,62120
(defun mon-get-bit-table 1219,62620
(defun mon-fractionp 1304,66782
(defun mon-integer-and-chacterp 1330,67843
(defun mon-char-code 1340,68255
(defun mon-alpha-char-p 1367,69373
(defun mon-is-digit 1391,70431
(defun mon-is-letter 1430,72071
(defun mon-is-alphanum 1460,73442
(defun mon-is-digit-simp 1488,74854
(defun mon-is-letter-simp 1507,75873
(defun mon-is-alphanum-simp 1526,76737
(defun mon-coerce->char 1554,78042
(defun mon-string-to-symbol 1657,83736
(defun mon-symbol-to-string 1746,88370
(defun mon-string-to-sequence 1781,90080
(defun mon-string-from-sequence 1825,92483

naf-mode/mon-aliases.el,22175
(defalias 'atomp atomp274,11011
(defalias 'line-join-previous line-join-previous278,11139
(defalias 'stringp-or-null stringp-or-null282,11290
(defalias 'char-or-stringp char-or-stringp286,11435
(defalias 'string-or-characterp string-or-characterp290,11590
(defalias 'character-or-strinp character-or-strinp294,11748
(defalias 'shell-command-async shell-command-async298,11905
(defalias 'asynchronous-shell-command asynchronous-shell-command302,12079
(defalias 'menubar-mode menubar-mode306,12232
(defalias 'make-array make-array388,15495
(defalias 'macrop macrop395,15747
(defalias 'mon-string-combine-and-quote mon-string-combine-and-quote413,16270
(defalias 'mon-string-split-and-unquote mon-string-split-and-unquote417,16462
(defalias 'mon-replace-char-in-region mon-replace-char-in-region421,16649
(defalias 'mon-delq-alist mon-delq-alist428,16938
(defalias 'mon-string-set-char-at-idx mon-string-set-char-at-idx435,17253
(defalias 'mon-string-insert-string-at-idx mon-string-insert-string-at-idx446,17857
(defalias 'mon-skip-whitespace mon-skip-whitespace467,18805
(defalias 'mon-save-restricton mon-save-restricton489,19777
(defalias 'mon-sort-alist mon-sort-alist493,19930
(defalias 'mon-macrop mon-macrop501,20254
(defalias 'mon-string-prefix-p mon-string-prefix-p505,20399
(defalias 'mon-list-chop mon-list-chop517,20947
(defalias 'mon-buffer-do-with-undo-disabled mon-buffer-do-with-undo-disabled529,21525
(defalias 'mon-window-get-if-buffer mon-window-get-if-buffer533,21740
(defalias 'mon-buffer-name-print-readably mon-buffer-name-print-readably537,21954
(defalias 'mon-buffer-get-w-mode mon-buffer-get-w-mode541,22164
(defalias 'mon-functionp mon-functionp545,22315
(defalias 'mon-one-or-zerop mon-one-or-zerop549,22465
(defalias 'mon-1-or-0-p mon-1-or-0-p553,22604
(defalias 'mon-1-or-0-p mon-1-or-0-p557,22739
(defalias 'mon-zerop-or-one mon-zerop-or-one561,22882
(defalias 'mon-boolean-to-binary mon-boolean-to-binary565,23039
(defalias 'mon-t-to-1 mon-t-to-1569,23185
(defalias 'mon-true-to-one mon-true-to-one573,23330
(defalias 'mon-nil-to-0 mon-nil-to-0577,23474
(defalias 'mon-false-to-zero mon-false-to-zero581,23625
(defalias 'mon-split-string mon-split-string585,23779
(defalias 'mon-string->symbol mon-string->symbol589,23931
(defalias 'mon-symbol->string mon-symbol->string593,24089
(defalias 'mon-string-from-symbol mon-string-from-symbol597,24258
(defalias 'mon-string<-symbol mon-string<-symbol601,24419
(defalias 'mon-sequence-to-string mon-sequence-to-string605,24587
(defalias 'mon-seq->string mon-seq->string609,24746
(defalias 'mon-string-suffix-p mon-string-suffix-p613,24907
(defalias 'mon-replace-char-in-string mon-replace-char-in-string617,25083
(defalias 'mon-remove-char-in-string mon-remove-char-in-string621,25266
(defalias 'mon-indent-lines-from-to-col mon-indent-lines-from-to-col625,25453
(defalias 'mon-generate-wonky mon-generate-wonky629,25630
(defalias 'mon-hex-list-as-string mon-hex-list-as-string633,25794
(defalias 'mon-string-escape-lisp-region mon-string-escape-lisp-region637,25981
(defalias 'mon-lisp-escape-region mon-lisp-escape-region641,26166
(defalias 'mon-string-unescape-lisp-region mon-string-unescape-lisp-region645,26362
(defalias 'mon-lisp-unescape-region mon-lisp-unescape-region649,26555
(defalias 'mon-string-ify-current-line mon-string-ify-current-line653,26748
(defalias 'with-print-gensyms with-print-gensyms668,27167
(defalias 'nshuffle-vector nshuffle-vector672,27343
(defalias 'with-gensyms with-gensyms677,27598
(defalias 'buffer-exists-p buffer-exists-p684,27905
(defalias 'mon-buffer-print-in-if mon-buffer-print-in-if690,28122
(defalias 'mon-get-text-properties-region->kill-ring mon-get-text-properties-region->kill-ring705,28598
(defalias 'mon-kill-ring-save-w-props mon-kill-ring-save-w-props709,28816
(defalias 'mon-help-face-next-property-change mon-help-face-next-property-change713,29035
(defalias 'mon-remove-text-with-property mon-remove-text-with-property717,29243
(defalias 'mon-remove-text-properties-region-all mon-remove-text-properties-region-all721,29462
(defalias 'mon-remove-all-text-properties-region mon-remove-all-text-properties-region725,29688
(defalias 'write-string write-string740,30134
(defalias 'mon-prin1-char->?char mon-prin1-char->?char745,30302
(defalias 'buffer-narrowed-p buffer-narrowed-p767,31154
(defalias 'get-buffer-window-if get-buffer-window-if771,31339
(defalias 'goto-line-25% goto-line-25%775,31515
(defalias 'goto-line-50% goto-line-50%779,31677
(defalias 'goto-line-75% goto-line-75%783,31839
(defalias 'mon-buffer-end mon-buffer-end789,32037
(defalias 'mon-get-hidden-buffers mon-get-hidden-buffers793,32186
(defalias 'mon-help-hidden-buffers mon-help-hidden-buffers797,32358
(defalias 'mon-buffer-get-hidden mon-buffer-get-hidden801,32527
(defalias 'mon-longlines-mode-p mon-longlines-mode-p805,32695
(defalias 'mon-buffer-append-to mon-buffer-append-to809,32865
(defalias 'mon-buffer-make-shell mon-buffer-make-shell813,33030
(defalias 'mon-buffer-get-shell mon-buffer-get-shell817,33195
(defalias 'mon-kill-hidden-buffer-if mon-kill-hidden-buffer-if821,33357
(defalias 'mon-buffer-get-hidden-if mon-buffer-get-hidden-if825,33538
(defvaralias '*mon-help-hidden-buffers-known* *mon-help-hidden-buffers-known*830,33753
(defalias 'next-almost-prime next-almost-prime845,34203
(defalias 'mon-get-next-almost-prime mon-get-next-almost-prime851,34431
(defalias 'mon-rectangle-kill-w-longest-line mon-rectangle-kill-w-longest-line866,34897
(defalias 'mon-line-keep-match mon-line-keep-match881,35336
(defalias 'mon-line-delete-match mon-line-delete-match885,35492
(defalias 'mon-line-count-match mon-line-count-match889,35648
(defalias 'mon-line-join-previous mon-line-join-previous893,35805
(defalias 'mon-line-same-p mon-line-same-p898,35989
(defalias 'mon-get-window-plist mon-get-window-plist913,36407
(defalias 'mon-window-map-active-to-plist mon-window-map-active-to-plist917,36592
(defalias 'mon-buffer-get-scratch mon-buffer-get-scratch921,36771
(defalias 'mon-buffer-get-messages mon-buffer-get-messages925,36933
(defalias 'mon-buffer-kill-completions mon-buffer-kill-completions929,37115
(defalias 'mon-window-flip mon-window-flip933,37275
(defalias 'mon-window-split-horiz mon-window-split-horiz937,37433
(defalias 'mon-window-split-vert mon-window-split-vert941,37599
(defalias 'delq-dups delq-dups956,38001
(defalias 'mon-string-longest-in-list mon-string-longest-in-list962,38214
(defalias 'mon-reorder-vector mon-reorder-vector966,38384
(defalias 'mon-sequence-reorder mon-sequence-reorder970,38542
(defalias 'mon-list-union mon-list-union974,38689
(defalias 'mon-list-member-if mon-list-member-if978,38832
(defalias 'mon-list-delete-if mon-list-delete-if982,38984
(defalias 'mon-list-remove-if-not mon-list-remove-if-not986,39142
(defalias 'mon-list-remove-if mon-list-remove-if990,39300
(defalias 'mon-list-intersect mon-list-intersect994,39451
(defalias 'mon-list-set-diff mon-list-set-diff998,39604
(defalias 'mon-list-nqueue mon-list-nqueue1002,39753
(defalias 'mon-list-flatten mon-list-flatten1006,39915
(defalias 'mon-rotate-flatten-list mon-rotate-flatten-list1010,40071
(defalias 'mon-list-mismatch mon-list-mismatch1014,40237
(defalias 'mon-list-combine mon-list-combine1018,40381
(defalias 'mon-map-combine mon-map-combine1022,40521
(defalias 'mon-list-permute-combine mon-list-permute-combine1026,40678
(defalias 'mon-list-permute-combine-1 mon-list-permute-combine-11030,40856
(defalias 'mon-list-recurse-apply mon-list-recurse-apply1034,41032
(defalias 'mon-merge-list mon-merge-list1038,41184
(defalias 'mon-list-delq-dups mon-list-delq-dups1042,41329
(defalias 'mon-delete-dups-eql mon-delete-dups-eql1046,41483
(defalias 'mon-list-deleql-dups mon-list-deleql-dups1050,41641
(defalias 'mon-list-delete-first mon-list-delete-first1054,41804
(defalias 'mon-list-remove-dups mon-list-remove-dups1058,41964
(defalias 'mon-list-transpose mon-list-transpose1062,42118
(defalias 'mon-bool-vector-to-list mon-bool-vector-to-list1066,42278
(defalias 'mon-list-ify-bool-vector mon-list-ify-bool-vector1070,42453
(defalias 'mon-boolean-vector-to-list mon-boolean-vector-to-list1074,42626
(defalias 'mon-pop2 mon-pop21078,42770
(defalias 'mon-list-pop2 mon-list-pop21089,43125
(defalias 'mon-region-append-to-register mon-region-append-to-register1108,43739
(defalias 'mon-append-next-kill mon-append-next-kill1112,43913
(defalias 'mon-register-append mon-register-append1116,44072
(defalias 'mon-read-keys-last-event mon-read-keys-last-event1120,44245
(defalias 'mon-string-from-keyboard-input mon-string-from-keyboard-input1124,44432
(defalias 'alpha-char-p alpha-char-p1139,44856
(defalias 'zerop-or-one zerop-or-one1143,44991
(defalias 'proper-list-p proper-list-p1147,45128
(defalias 'string-or-null-and-zerop string-or-null-and-zerop1152,45293
(defalias 'stringp-and-zerop-or-null stringp-and-zerop-or-null1156,45479
(defalias 'string-not-null-or-zerop string-not-null-or-zerop1160,45664
(defalias 'stringp-not-null-nor-zerop stringp-not-null-nor-zerop1164,45853
(defalias 'mon-is-alpha-char mon-is-alpha-char1170,46096
(defalias 'mon-proper-list-p mon-proper-list-p1174,46246
(defalias 'mon-dotted-list-p mon-dotted-list-p1178,46397
(defalias 'mon-list-dotted-and-proper-p mon-list-dotted-and-proper-p1182,46570
(defalias 'mon-list-mappable-p mon-list-mappable-p1186,46748
(defalias 'mon-mappable-sequence-p mon-mappable-sequence-p1190,46920
(defalias 'mon-list-all-booleanp mon-list-all-booleanp1194,47091
(defalias 'mon-byte-table-bits mon-byte-table-bits1199,47339
(defalias 'mon-bit-table-bits mon-bit-table-bits1203,47494
(defalias 'mon-char-coerce mon-char-coerce1207,47635
(defalias 'mon-symbol-cells-boundp mon-symbol-cells-boundp1211,47787
(defalias 'mon-capitalize-region mon-capitalize-region1227,48253
(defalias 'mon-region-reverse-chars mon-region-reverse-chars1231,48450
(defalias 'mon-region-wrap mon-region-wrap1235,48605
(defalias 'mon-string-split-commas mon-string-split-commas1239,48768
(defalias 'mon-split-region-at-commas mon-split-region-at-commas1243,48950
(defalias 'mon-indent-refill-region mon-indent-refill-region1247,49131
(defalias 'mon-indent-region-refill mon-indent-region-refill1251,49311
(defalias 'mon-region-refill-indent mon-region-refill-indent1255,49491
(defalias 'mon-region-count-regexp-matches mon-region-count-regexp-matches1259,49684
(defalias 'mon-string-at-point mon-string-at-point1272,50067
(defalias 'mon-permute-string mon-permute-string1294,50649
(defalias 'mon-buffer-get-word-list mon-buffer-get-word-list1307,51051
(defalias 'mon-region-reverse-words mon-region-reverse-words1311,51233
(defalias 'mon-reverse-region-words mon-reverse-region-words1315,51435
(defalias 'mon-buffer-get-word-count mon-buffer-get-word-count1319,51617
(defalias 'mon-make-list-alphabet mon-make-list-alphabet1334,52071
(defalias 'file-truename-p file-truename-p1349,52493
(defalias 'file-attributes-plist file-attributes-plist1353,52653
(defalias 'directory-attributes-plist directory-attributes-plist1357,52839
(defalias 'find-buffer-visiting-other-live-frame find-buffer-visiting-other-live-frame1361,53054
(defalias 'get-buffer-visiting-other-live-frame get-buffer-visiting-other-live-frame1365,53288
(defalias 'frame-live-visible-graphic-p frame-live-visible-graphic-p1369,53504
(defalias 'mon-move-file mon-move-file1377,53830
(defalias 'mon-mv-file mon-mv-file1381,53960
(defalias 'mon-file-move mon-file-move1385,54092
(defalias 'mon-file-mv mon-file-mv1389,54223
(defalias 'mon-rename-file mon-rename-file1393,54356
(defalias 'mon-rnm-file mon-rnm-file1397,54490
(defalias 'mon-file-rename mon-file-rename1401,54627
(defalias 'mon-file-rnm mon-file-rnm1405,54761
(defalias 'dired-find-file-other-frame dired-find-file-other-frame1411,54982
(defalias 'dired-up-here dired-up-here1415,55149
(defalias 'dired-uninsert-subdir dired-uninsert-subdir1419,55321
(defalias 'dired-subdir-uninsert dired-subdir-uninsert1423,55492
(defalias 'dired-uninsert-subdir-all dired-uninsert-subdir-all1427,55671
(defalias 'dired-subdir-uninsert-all dired-subdir-uninsert-all1431,55858
(defalias 'mon-get-buffer-visiting-other-live-frame mon-get-buffer-visiting-other-live-frame1437,56131
(defalias 'mon-file-attributes-plist mon-file-attributes-plist1441,56347
(defalias 'mon-directory-attributes-plist mon-directory-attributes-plist1445,56548
(defalias 'mon-dired-toggle-dwim-target mon-dired-toggle-dwim-target1449,56747
(defalias 'mon-dired-kill-files-to-list mon-dired-kill-files-to-list1453,56943
(defalias 'mon-dired-copy-files-to-list mon-dired-copy-files-to-list1457,57138
(defalias 'mon-dired-kill-files-to-strings mon-dired-kill-files-to-strings1461,57339
(defalias 'mon-dired-copy-files-to-strings mon-dired-copy-files-to-strings1465,57545
(defalias 'mon-directory-get-size mon-directory-get-size1469,57733
(defalias 'mon-buffer-get-new-w-stamp mon-buffer-get-new-w-stamp1473,57908
(defalias 'mon-dir-name-absolute mon-dir-name-absolute1477,58086
(defalias 'mon-dir-name-relative-w-absolute mon-dir-name-relative-w-absolute1481,58280
(defalias 'mon-file-copy-in-sub-dirs mon-file-copy-in-sub-dirs1485,58473
(defalias 'mon-file-copy-multiple mon-file-copy-multiple1489,58652
(defalias 'mon-make-path mon-make-path1493,58806
(defalias 'mon-buffer-string-split-name mon-buffer-string-split-name1497,58973
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1501,59182
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1505,59402
(defalias 'mon-buffer-get-parent-dir mon-buffer-get-parent-dir1509,59604
(defalias 'mon-dir-name-truncate-for-prompt mon-dir-name-truncate-for-prompt1513,59802
(defalias 'mon-dir-recurse-string-split mon-dir-recurse-string-split1517,60002
(defalias 'mon-buffer-string-split-dir-recurse mon-buffer-string-split-dir-recurse1521,60212
(defalias 'mon-get-dir-common-path mon-get-dir-common-path1525,60405
(defalias 'mon-buffer-subdirs-insert mon-buffer-subdirs-insert1529,60582
(defalias 'mon-dir-get-subdir mon-dir-get-subdir1533,60755
(defalias 'mon-file-rename-serial mon-file-rename-serial1537,60927
(defalias 'mon-file-copy-path mon-file-copy-path1541,61092
(defalias 'mon-buffer-file-copy-path mon-buffer-file-copy-path1545,61269
(defalias 'mon-buffer-get-directories mon-buffer-get-directories1549,61448
(defalias 'mon-dir-get-subdirs-descend mon-dir-get-subdirs-descend1553,61639
(defalias 'mon-get-directory-and-subdirs-list mon-get-directory-and-subdirs-list1557,61834
(defalias 'mon-dir-async-du mon-dir-async-du1561,62007
(defalias 'mon-directory-du-async mon-directory-du-async1565,62167
(defalias 'mon-du-async-dir mon-du-async-dir1569,62321
(defalias 'w3m-copy-this-url-as-kill w3m-copy-this-url-as-kill1585,62744
(defalias 'w3m-copy-current-url-as-kill w3m-copy-current-url-as-kill1589,62926
(defalias 'mon-url-escape mon-url-escape1593,63086
(defalias 'mon-encode-url mon-encode-url1597,63225
(defalias 'mon-url-unescape mon-url-unescape1601,63368
(defalias 'mon-decode-url mon-decode-url1605,63509
(defalias 'mon-search-wiki mon-search-wiki1609,63650
(defalias 'mon-buffer-get-retrieved-url mon-buffer-get-retrieved-url1613,63824
(defalias 'mon-get-w3m-dired-file mon-get-w3m-dired-file1617,64009
(defalias 'mon-w3m-get-url-at-point-maybe mon-w3m-get-url-at-point-maybe1621,64193
(defalias 'mon-w3m-get-url-at-point mon-w3m-get-url-at-point1625,64384
(defalias 'mon-get-w3m-read-gnu-lists-nxt-prv mon-get-w3m-read-gnu-lists-nxt-prv1629,64583
(defalias 'mon-line-strings-region-delimited mon-line-strings-region-delimited1645,65059
(defalias 'mon-line-strings-get-delimited-region mon-line-strings-get-delimited-region1649,65276
(defalias 'mon-function-arity mon-function-arity1653,65459
(defalias 'mon-function-args mon-function-args1657,65619
(defalias 'mon-insert-documentation mon-insert-documentation1661,65790
(defalias 'mon-help-reference-sheet mon-help-reference-sheet1665,65975
(defalias 'mon-help-finder-keywords mon-help-finder-keywords1669,66148
(defalias 'mon-help-directory-file-functions-usage mon-help-directory-file-functions-usage1673,66359
(defalias 'mon-help-network-process mon-help-network-process1677,66562
(defalias 'mon-help-types mon-help-types1681,66726
(defalias 'mon-help-face-functions mon-help-face-functions1685,66894
(defalias 'mon-help-charset-coding-functions mon-help-charset-coding-functions1689,67081
(defalias 'mon-help-ascii-chars mon-help-ascii-chars1693,67268
(defalias 'mon-help-ecma-48-chars-cntl->hex mon-help-ecma-48-chars-cntl->hex1697,67456
(defalias 'mon-help-cntl->hex->ecma-35 mon-help-cntl->hex->ecma-351701,67647
(defalias 'mon-help-time-iso-8601 mon-help-time-iso-86011705,67824
(defalias 'mon-help-elisp-info mon-help-elisp-info1709,67985
(defvaralias '*reference-sheet-help-A-HAWLEY* *reference-sheet-help-A-HAWLEY*1714,68194
(defvaralias '*doc-cookie* *doc-cookie*1718,68368
(defalias 'mon-help-cl-packages mon-help-cl-packages1731,68723
(defalias 'mon-help-slime-keys mon-help-slime-keys1735,68873
(defalias 'mon-help-swank-functions mon-help-swank-functions1739,69037
(defalias 'mon-help-cl-symbols mon-help-cl-symbols1743,69201
(defalias 'mon-hyperspec-lookup mon-hyperspec-lookup1747,69355
(defalias 'mon-help-CL-reader-macro-syntax mon-help-CL-reader-macro-syntax1751,69532
(defalias 'mon-help-csstidy mon-help-csstidy1767,69970
(defalias 'mon-help-bzr-commands mon-help-bzr-commands1782,70382
(defalias 'mon-stamp-date-only mon-stamp-date-only1797,70802
(defalias 'mon-today-stamp mon-today-stamp1801,70949
(defvaralias '*mon-emacs2html-temp* *mon-emacs2html-temp*1820,71613
(defalias 'comment-divider comment-divider1840,72146
(defalias 'mon-string-n-fancy-times mon-string-n-fancy-times1846,72371
(defalias 'mon-string-insert-n-times mon-string-insert-n-times1850,72559
(defalias 'mon-comment-divider->col mon-comment-divider->col1854,72741
(defalias 'mon-lisp-comment-to-col mon-lisp-comment-to-col1858,72921
(defalias 'mon-insert-doc-xref-eg mon-insert-doc-xref-eg1862,73094
(defalias 'mon-CL-package-complete mon-CL-package-complete1866,73273
(defalias 'mon-insert-CL-mode-line-template mon-insert-CL-mode-line-template1870,73472
(defalias 'mon-add-lisp-CL-file-local-prop-template mon-add-lisp-CL-file-local-prop-template1874,73705
(defalias 'mon-insert-CL-file-template mon-insert-CL-file-template1878,73921
(defalias 'mon-insert-CL-package-template mon-insert-CL-package-template1882,74124
(defalias 'mon-insert-CL-eval-when mon-insert-CL-eval-when1887,74320
(defalias 'mon-insert-CL-debug mon-insert-CL-debug1891,74493
(defalias 'mon-insert-jump-lisp-doc mon-insert-jump-lisp-doc1895,74668
(defalias 'bug-insert-copyright bug-insert-copyright1901,74921
(defalias 'mon-insert-naf-mode-file-template mon-insert-naf-mode-file-template1909,75322
(defvaralias '*regexp-version-alist* *regexp-version-alist*1923,75743
(defvaralias '*whitespace-chars* *whitespace-chars*1928,75931
(defvaralias '*mon-digit-chars* *mon-digit-chars*1932,76100
(defalias 'replace-char-in-string-mon replace-char-in-string-mon1959,77110
(defalias 'replace-in-string-mon replace-in-string-mon1963,77282
(defalias 'mon-replace-char-in-string mon-replace-char-in-string1971,77578
(defalias 'mon-canonical-string mon-canonical-string1979,77868
(defalias 'mon-map-regexp-matches mon-map-regexp-matches1983,78035
(defalias 'mon-map-regexp-matches-in-region mon-map-regexp-matches-in-region1987,78216
(defalias 'mon-region-increment-line-numbers mon-region-increment-line-numbers1991,78428
(defalias 'mon-region-increment-numbered-lines mon-region-increment-numbered-lines1995,78642
(defalias 'mon-cln-duplicate-lines mon-cln-duplicate-lines2000,78835
(defalias 'mon-remove-duplicate-lines mon-remove-duplicate-lines2004,79022
(defalias 'naf-delete-back-up-list naf-delete-back-up-list2009,79207
(defalias 'mon-defranc-benezit mon-defranc-benezit2013,79375
(defalias 'mon-defranc-benezit-fields mon-defranc-benezit-fields2017,79545
(defalias 'mon-cln-common-abbrevs mon-cln-common-abbrevs2022,79724
(defalias 'list-colors-defined list-colors-defined2039,80215
(defalias 'mon-color-list-defined mon-color-list-defined2047,80491
(defalias 'mon-color-read mon-color-read2052,80684
(defalias 'mon-color-list-duplicates mon-color-list-duplicates2056,80842
(defalias 'mon-color-list-display mon-color-list-display2060,81017
(defalias 'get-bmps-in-dir get-bmps-in-dir2077,81507
(defalias 'get-nefs-in-dir get-nefs-in-dir2081,81660
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list2089,81943
(defalias 'mon-rotate-images mon-rotate-images2106,82442
(defalias 'mon-identify-image mon-identify-image2110,82595
(defalias 'boxcutter-verify-image-type boxcutter-verify-image-type2128,83088
(defalias 'naf-drive-dired-artist-letter naf-drive-dired-artist-letter2141,83488
(defalias 'naf-dired-artist-letter naf-dired-artist-letter2145,83673
(defalias 'naf-drive-dired-brand-letter naf-drive-dired-brand-letter2149,83876
(defalias 'naf-dired-brand-letter naf-dired-brand-letter2153,84057
(defalias 'slot-makunbound slot-makunbound2167,84570
(defalias 'slime-next-xref slime-next-xref2178,84905
(defalias 'slime-prev-xref slime-prev-xref2182,85052
(defalias 'mon-slime-insert-arglist mon-slime-insert-arglist2186,85217
(defalias 'mon-slime-quit-description mon-slime-quit-description2190,85400
(defalias 'slime-compile-defun-for-debug slime-compile-defun-for-debug2194,85598
(defalias 'slime-copy-presentation-at-point-to-kill-ring-no-props slime-copy-presentation-at-point-to-kill-ring-no-props2199,85898
(defalias 'slime-copy-presentation-to-kill-ring-no-props slime-copy-presentation-to-kill-ring-no-props2203,86175

naf-mode/mon-eight-bit-raw-utils.el,38
(defun mon-cln-eight-bit-raw 88,2797

naf-mode/mon-cifs-utils.el,908
(defvar *mon-CIFS-misc-path-alist*161,6009
(defvar *mon-CIFS-auth-protocol* 200,8176
(defvar *mon-CIFS-workgroup* 215,8829
(defvar *mon-CIFS-domain* 222,9053
(defvar *mon-CIFS-user* 241,9981
(defvar *mon-CIFS-pass* 253,10477
(defvar *mon-CIFS-mount-root* 264,10961
(defvar *mon-CIFS-vars-unbound* 277,11517
(defvar *mon-CIFS-mount-points* 300,12689
(defun mon-map-cifs-domain->local-mount 334,14817
(defun mon-get-cifs-credentials 381,17536
(defun mon-build-cifs-credentials 426,19931
(defun mon-get-cifs-mount-points 459,21683
(defun mon-mount-cifs 488,23043
(defun mon-unmount-cifs 553,26553
(defun mon-verify-cifs-credentials 569,27403
(defun mon-inform-cifs-credentials-unbound 597,28808
(defun mon-bind-cifs-vars-at-loadtime 661,32614
(defvar *mon-auth-source-debug-var* 743,37384
(defvar *mon-auth-source-cache-debug-var* 754,37985
(defun mon-spit-auth-source-debug->var 783,39608

naf-mode/mon-time-utils.el,945
(defun mon-comment-divider-w-len 304,13213
(cl-defun mon-date-stamp 361,16354
(defun mon-get-current-year 416,19397
(defun mon-format-iso-8601-time 439,20450
(defun mon-file-older-than-file-p 499,23882
(defun mon-get-file-mod-times 543,26129
(defun mon-conv-time-flt-pnt 595,29101
(defun mon-comp-times-flt-pnt 617,30216
(defun mon-accessed-time-stamp 644,31543
(cl-defun mon-timestamp 661,32325
(defun mon-stamp 756,37861
(defun mon-accessed-stamp 781,38971
(cl-defun mon-stamp-in-context 812,40404
(defun mon-lisp-stamp 904,45974
(defun mon-file-stamp-vrfy-put-eof 973,49721
(defun mon-file-stamp 1023,52423
(defun mon-file-stamp-minibuffer 1231,64444
(defun mon-file-stamp-buffer-filename 1282,66693
(defun mon-convert-ebay-time 1338,69998
(defun mon-convert-ebay-time-mvb 1373,71897
(defun mon-cln-ebay-time-string 1398,73148
(defun mon-calculate-ebay-timezone-diff 1552,81333
(defun calendar-goto-doomsday 1597,83687

naf-mode/mon-testme-fancy.el,46
(defun mon-insert-lisp-testme-fancy 151,7599

naf-mode/mon-animate-nursery-rhymes.el,135
(defvar *mon-nursery-rhymes* 85,2656
(defun mon-animate-nursery-rhyme-sequence 912,36438
(defun mon-animate-nursery-rhyme 934,37450

mon-w32-load.el,525
(defun mon-maximize-frame-w32 113,3377
(defun mon-minimize-frame 122,3727
(defun mon-restore-frame 133,4140
(defun mon-menu-bar 142,4548
(defun mon-open-abbyy 164,5396
(defun mon-open-notepad++ 182,6063
(defun mon-open-fastone 197,6680
(defun mon-open-photoshop 213,7256
(defun mon-open-explorer 230,7943
(defalias 'mon-explorer-open mon-explorer-open244,8496
(defun mon-open-images-ed-swap 250,8679
(defun mon-open-program-files 267,9570
(defun mon-open-moz-down 281,10224
(defun mon-open-workspace 300,11097

mon-default-loads.el,1027
(defgroup mon-default-loads 142,4585
(defvar *IS-MON-OBARRAY* 160,5646
(defvar *IS-MON-OBARRAY-SYMS* 179,6387
(defcustom *mon-default-loads-xrefs* 198,7083
(defun mon-get-mon-emacsd-paths 231,8943
(defconst IS-W32-P296,12547
(defvaralias 'win32p win32p317,13564
(defconst IS-GNU-P325,13789
(defvaralias 'gnu-linuxp gnu-linuxp346,14835
(defconst IS-DARWIN-P355,15070
(defvaralias 'darwinp darwinp376,16127
(defconst IS-BUG-P 380,16202
(defconst IS-BUG-P-REMOTE 393,16864
(defconst IS-MON-P-W32 406,17547
(defconst IS-MON-P-GNU 420,18249
(defconst IS-MON-P-DARWIN 434,18937
(defconst IS-MON-P 449,19658
(defconst IS-NOT-A-MON-SYSTEM466,20566
(defconst IS-MON-SYSTEM-P488,21779
(defvar set-emacs-root 526,23688
(defconst *mon-emacs-root* 635,30392
(defconst *mon-site-lisp-root* 662,31799
(defconst *mon-naf-mode-root* 682,32897
(defconst *mon-naf-mode-notes* 704,34042
(defconst *mon-ebay-tmplt-mode-root* 725,35189
(defconst *mon-user-emacsd*747,36497
(defconst *mon-local-emacs-temp-dir*779,38456

mon-keybindings.el,649
(defgroup mon-keybindings 206,7360
(defcustom *mon-keybindings-xrefs* 226,8465
(defun mon-keybind-globally 256,9983
(defun mon-keybind-dired-mode 389,15619
(defun mon-keybind-completions 439,18278
(defun mon-keybind-info-mode 462,19487
(defun mon-keybind-w3m 546,22737
(defun mon-keybind-emacs-lisp-mode 671,28601
(defun mon-keybind-lisp-interaction-mode 731,31481
(defun mon-keybind-slime-selector-helper 767,33363
(defun mon-keybind-slime 784,34030
(defun mon-keybind-slime-inspector 986,44483
(defun mon-keybind-slime-fuzzy-completions 1024,46361
(defun mon-conf-stamp-in-context 1058,47889
(defun mon-keybind-conf-mode 1071,48432

mon-site-local-defaults.el,540
(defun mon-string-wonkify 109,4246
(defun mon-build-user-name-example 154,6350
(defun mon-build-user-name-example-TEST 208,9286
(defun mon-build-misc-path-example 238,10677
(defun mon-build-mon-emacsd-example 304,14127
(defun mon-user-name-conditionals 386,18202
(defun mon-system-type-conditionals 471,22790
(defun mon-user-system-conditionals-TEST 518,25165
(defconst *mon-emacsd* 572,28391
(defvar *mon-misc-path-alist* 608,30269
(defconst *MON-NAME* 670,33860
(defconst *BUG-NAME* 695,35181
(defvar *MON-ORG-NAME*717,36347

mon-post-load-hooks.el,687
(defgroup mon-post-load-hooks 124,3667
(defcustom *mon-post-load-hooks-xrefs* 142,4774
(defun mon-purge-cl-symbol-buffers-on-load 178,6516
(defvar *mon-post-load-hook-trigger-buffer* 220,8776
(defun mon-run-post-load-hooks-helper 239,9668
(defun mon-run-post-load-hooks 255,10577
(defun mon-purge-doc-view-cache-directory 352,15947
(defun mon-purge-thumbs-directory 370,16964
(defun mon-purge-slime-swank-port-file 390,17961
(defun mon-purge-tramp-persistency-file 407,18770
(defun mon-purge-temporary-file-directory 424,19736
(defvar *mon-purge-emacs-temp-file-dir-fncns* 448,20943
(defun mon-purge-emacs-temp-files-on-quit 471,22097
(defun mon-scratch-postload 501,23537

mon-default-start-loads.el,2732
(defgroup mon-default-start-loads 188,7932
(defcustom *mon-default-start-loads-xrefs* 248,11106
(defvar *mon-default-start-load-sanity* 301,13822
(defvar *mon-default-start-load-sanity-WARN-ONLY* 313,14441
(defun mon-build-path-for-load-path 326,15141
(defmacro mon-default-start-error/sane 334,15617
(defun mon-set-split-window-init 397,18772
(defun mon-set-load-path-init 428,20027
(defun mon-set-color-themes-init 471,21902
(defun mon-toggle-show-point-mode 540,24930
(defun mon-set-emacs-temp-file/dir-init 566,26262
(defun mon-set-infopath-init 647,30286
(defun mon-set-bookmark-file-init 759,37751
(defun mon-set-woman-manpath-init 818,40818
(defun mon-set-C-source-directory-init 874,43740
(defun mon-set-unicodedata-init 929,46809
(defun mon-set-bbdb-init 973,48786
(defun mon-set-desktop-init 1021,51097
(defun mon-set-printer-postscript-init 1040,51657
(defun mon-set-doc-view-programs-init 1091,54496
(defun mon-set-thumbs-conversion-program-init 1147,57049
(defun mon-set-boxcutter-init 1213,60584
(defun mon-set-image-dired-init 1250,62508
(defun mon-set-ispell-init 1440,70055
(defun mon-set-help-mode-init 1485,71965
(defun mon-set-ibuffer-init 1539,74600
(defun mon-set-ido-init 1563,75653
(defun mon-set-org-init 1646,79818
(defun mon-set-custom-customizations-init 1670,80581
(defun mon-set-customizations-before-custom-file-init 1714,83130
(defun mon-set-custom-file-init-w32-configs 1799,86910
(defun mon-set-custom-file-init 1846,89089
(defun mon-set-common-lisp-hspec-init 1898,92040
(defun mon-set-show-paren-init 1937,94274
(defun mon-set-lisp-init 1973,96251
(defun mon-set-proced-init 2033,99468
(defun mon-set-auctex-init 2056,100463
(defun mon-set-vc-init 2073,101104
(defun mon-set-magit-init 2091,101905
(defun mon-set-dvc-init 2164,106286
(defun mon-set-erc-configs-init 2220,109344
(defun mon-erc-post-cloak-autojoin 2302,112511
(defun mon-set-url-pkg-init 2317,113240
(defun mon-set-google-maps-init 2373,115615
(defun mon-set-w3m-init 2402,116932
(defun mon-set-browser-init 2441,118857
(defun mon-set-buffer-local-comment-start 2484,121255
(defun mon-set-buffer-local-comment-start-init 2508,122580
(defun mon-set-css-path-init 2551,124708
(defun mon-set-longlines-init 2592,126667
(defun mon-rst-mode-facification 2615,127596
(defun mon-set-rst-mode-faces-init 2631,128480
(defun mon-set-apache-mode-init 2652,129333
(defun mon-set-traverselisp-init 2678,130655
(defun mon-load-cedet 2705,131904
(defun mon-keybind-w32-init 2724,132738
(defun mon-keybind-put-hooks-init 2761,134516
(defun mon-set-github-paths-init 2797,136291
(defun mon-set-mon-feature-customs-init 2824,137609
(defun mon-set-system-specific-and-load-init 2897,140830

slime-loads-GNU.el,0

naf-mode/mon-loaddefs.el,0

naf-mode/naf-mode-bibliograpbhic-entry.el,0
