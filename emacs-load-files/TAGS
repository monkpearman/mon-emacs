
slime-loads-GNU-clbuild.el,3366
(defgroup mon-slime 321,12124
(defcustom *mon-slime-xrefs*357,13714
(defgroup mon-qucklisp 415,16530
(defcustom *quicklisp-path* 457,18572
(defun quicklisp-find-slime 485,19886
(defun quicklisp-current-swank-loader 540,22554
(defun quicklisp-write-dot-swank-loader 595,25713
(defun quicklisp-write-dot-swank-loader-if 640,28064
(defun quicklisp-dot-swank-current-p 666,29468
(defvar *quicklisp-systems* 705,31417
(defun quicklisp-hash-system-completions 724,32211
(defun quicklisp-system-complete 771,34853
(defun quicklisp-system-complete-if 796,35940
(defun quicklisp-hash-system-completions-slime-loadtime 813,36803
(defcustom *mon-lisp-system-paths* 895,41408
(defun mon-add-lisp-system-paths-to-tags-table-list 932,43509
(defun mon-lisp-set-indent 972,45678
(defun mon-lisp-set-indent-hook 986,46296
(defun mon-slime-setup-add-hooks 998,46776
(defun mon-slime-ensure-file-local-variables 1039,48624
(defun mon-slime-ensure-fasl-temp-directory-exists 1057,49500
(defun mon-slime-setup-init 1078,50590
(defun slime-fuzzy-sroll-completions-up-from-target-buffer 1272,59023
(defun slime-fuzzy-sroll-completions-down-from-target-buffer 1277,59183
(defun mon-define-common-lisp-style 1286,59413
(defun slime-macroexpand-again-fix 1327,61159
(defun slime-highlight-sexp 1393,63981
(defun mon-slime-compile-defun-for-debug 1475,67788
(defun mon-insert-slime-arglist 1495,68618
(defun %slime-insert-integer-at-point 1522,69529
(defun slime-insert-integer-at-point 1525,69627
(defun mon-next-xref-slime 1547,70606
(defun mon-prev-xref-slime 1562,71346
(defun mon-quit-slime-description-window 1577,72003
(defun mon-slime-description-view-source-file 1603,73254
(defvar *slime-show-description-hook* 1650,75140
(defvar *slime-local-show-description-hook* 1652,75184
(defun mon-slime-setup-show-description-buffer-locals 1656,75346
(defun mon-slime-show-description 1667,76064
(defun mon-slime-copy-presentation-at-point-to-kill-ring-no-propso 1697,77384
(defun mon-slime-copy-presentation-to-kill-ring-no-props 1711,78123
(defun mon-slime-start-sbcl 1729,79026
(defgroup slime-quicklisp-inspect 1895,87083
(defvar *slime-quicklisp-systems* 1904,87344
(defun slime-make-quicklisp-completion-table 1931,88522
(defun slime-quicklisp-get-process-start-time 1979,91126
(defun slime-quicklisp-completion-table-put-hash-meta 2010,92559
(defun slime-quicklisp-completion-table-get-hash-meta 2050,94825
(defun slime-quicklisp-completion-table-get-hash-count 2076,96051
(defun slime-quicklisp-completion-table-get-hashed-last 2104,97531
(defun slime-quicklisp-completion-table-compare-hashed-last 2126,98659
(defun slime-quicklisp-completion-table-get-ql-hash-count 2164,100777
(defun slime-quicklisp-completion-table-compare-hash-counts 2184,101751
(defun slime-get-quicklisp-system-completions 2212,103101
(defun slime-inspect-quicklisp-system 2281,106524
(defun slime-inspect-quicklisp-systems 2309,107878
(defun slime-quicklisp-open-inspector-if 2321,108450
(defun slime-inspect-quicklisp-release 2330,108921
(defun slime-inspect-quicklisp-apropos 2344,109515
(defun slime-inspect-asdf-defined-systems 2359,110185
(defun slime-inspect-asdf-system 2372,110803
(defvar *slime-echo-arglist-STFU* 2452,114605
(defun slime-echo-arglist-behave-or-back-to-your-cage 2466,115269
(defun slime-echo-arglist-STFU 2477,115815

naf-mode/mon-word-syntax-utils.el,452
(defun mon-get-syntax-at 144,5040
(defun mon-get-syntax-class-at 169,6273
(defun mon-line-test-content 200,7601
(defun mon-word-get-next 331,15979
(defun mon-word-get-list-in-buffer 360,17029
(defun mon-word-reverse-region 414,19524
(defun mon-word-iterate-over 456,21207
(defun mon-word-count-analysis 485,22461
(defun mon-word-count-occurrences 525,24537
(defun mon-word-count-region 633,30713
(defun mon-word-count-chars-region 650,31377

naf-mode/naf-mode-awards-prizes.el,137
(defvar *naf-mode-awards-prizes-xrefs*76,2641
(defvar *naf-awards-prizes-names*88,3156
(defconst naf-mode-awards-prizes-names106,3692

naf-mode/mon-image-utils.el,318
(defgroup mon-image-utils 143,4811
(defcustom *mon-image-identify-delim* 155,5235
(defun mon-image-identify 168,5768
(defun mon-image-rotate 214,7956
(defun mon-image-verify-type 236,9204
(defun mon-get-image-dimensions 309,13100
(defun mon-get-image-dimensions-im 323,13754
(defun mon-get-image-md5 345,14772

naf-mode/naf-mode-ulan-help-docs.el,46
(defun mon-help-naf-mode-ulan-flags 107,3411

naf-mode/mon-call-tree.el,157
(defvar *mon-call-tree-alist* 47,2058
(defun mon-call-tree-analyze 59,2619
(defun mon-call-tree-add 116,4784
(defun mon-call-tree-update-header 140,5752

naf-mode/mon-buffer-utils.el,974
(defgroup mon-buffer-utils 148,5252
(defcustom *mon-buffer-utils-xrefs* 166,5948
(defcustom *mon-get-hidden-buffers-known* 193,7268
(defun mon-g2be 249,9819
(defun mon-buffer-sub-no-prop 338,14240
(defun mon-buffer-sub-no-prop-check 383,16508
(defun mon-buffer-narrowed-p 532,25970
(defun mon-buffer-empty-p 592,28961
(defun mon-buffer-exists-so-kill 619,30155
(defun mon-buffer-name-is-file-name-p 641,31364
(defun mon-get-buffer-hidden 706,34704
(defun mon-get-buffer-hidden-if 767,37672
(defun mon-buffer-kill-hidden-if 788,38770
(defun mon-get-buffer-window-if 813,40101
(defun mon-print-buffer-object-readably 831,41036
(defun mon-get-buffer-w-mode 866,42766
(defun mon-buffer-check-local-value 896,44474
(defun mon-buffer-check-major-mode 929,46333
(defun mon-buffer-longlines-mode-p 949,47525
(defun mon-buffer-name->kill-ring 994,49490
(defun mon-append-to-buffer 1032,51312
(defun mon-make-shell-buffer 1068,52847
(defun mon-shell 1110,54794

naf-mode/mon-event-utils.el,1051
(defcustom *mon-popup-pos-x-offset* 162,5884
(defun mon-inhibit-read-only 174,6220
(defun mon-inhibit-modification-hooks 204,7546
(defun mon-inhibit-point-motion-hooks 221,8321
(defun mon-toggle-read-only-point-motion 244,9415
(defun mon-toggle-truncate-line 262,10205
(defun mon-scroll-down-in-place 286,11254
(defun mon-scroll-up-in-place 299,11809
(defun mon-line-move-n 319,12694
(defun mon-line-move-next 336,13456
(defun mon-line-move-prev 351,14194
(defun mon-read-keys-as-string 367,14982
(defun mon-read-multiple 410,17088
(defun mon-postion-for-x-popup-menu 506,22850
(defun mon-choose-from-menu 523,23675
(defun mon-test-keypresses 551,24933
(defun mon-decode-meta-key-event 581,26437
(defun mon-catch-meta-key 601,27301
(defun mon-abort-recursive-edit 647,29509
(defun mon-abort-autosave-when-fucked 664,30234
(defvar *mon-ascii-cursor-state* 708,32737
(defun mon-rotate-ascii-cursor 716,33121
(defun mon-kill-appending 765,35519
(defun mon-append-to-register 779,36097
(defun mon-multi-isearch-rmv-hook 801,37321

naf-mode/mon-empty-registers.el,785
(defvar *mon-register-config-tags* 140,4819
(defun* mon-set-register->tags 190,7395
(defun mon-set-register->tags-semic 226,9424
(defun mon-set-register->tags-sharp 236,9846
(defun mon-make-set-register->tags-docs 246,10267
(defun mon-set-register-tags-loadtime 293,12300
(defvar *mon-cntl-char-registers* 365,16520
(defun mon-cntl-char-registers-loadtime 384,17351
(defvar *mon-digit-registers* 447,21006
(defvar *mon-digit-shifted-registers* 472,22215
(defvar *mon-symbol-registers* 500,23652
(defvar *mon-upper-case-registers* 524,24953
(defvar *mon-lower-case-registers* 552,26318
(defvar *mon-registr-of-registers* 583,27986
(defun mon-query-replace-register1<-reg2 615,29467
(cl-defun mon-reset-registers 645,31042
(defun mon-set-all-registers-to-char 719,34116

naf-mode/mon-cl-compat-regexps.el,251
(defvar *regexp-clean-cl-symbols* 189,7939
(defvar *clean-cl-symbols-with-regexp*227,9847
(defun mon-CL-escape-star 438,19148
(defun mon-CL-escape-regexp 479,20958
(defun mon-CL-namespace-colonic 519,22968
(defun mon-CL-cln-colon-swap 535,23894

naf-mode/mon-plist-utils.el,263
(defgroup mon-plist-utils 125,3527
(defcustom *mon-plist-utils-xrefs* 137,3996
(defun mon-plist-keys 190,6085
(defun mon-plist-values 216,7207
(defun mon-plist-remove! 255,9127
(defun mon-plist-remove-consing 305,11470
(defun mon-plist-remove-if 327,12573

naf-mode/naf-mode-group-period-styles.el,48
(defconst naf-mode-group-period-styles172,4316

naf-mode/mon-seq-utils.el,2148
(defgroup mon-seq-utils 253,8163
(defcustom *mon-seq-utils-xrefs* 268,8745
(defun mon-elt-> 305,10778
(defun mon-elt-< 319,11493
(defun mon-elt->elt 335,12378
(defun mon-elt-<elt 350,13150
(defun mon-maybe-cons 386,15213
(defun mon-delq-cons 408,16294
(defun mon-list-nshuffle 445,18027
(defun mon-list-shuffle-safe 503,21267
(defun mon-delq-dups 556,23948
(defun mon-deleql-dups 587,25368
(defun mon-delete-first 619,26985
(defun mon-list-last 653,28560
(defun mon-list-make-unique 692,30297
(defun mon-remove-dups 733,32712
(defun mon-list-filter 758,33896
(defun mon-list-match-tails 790,35333
(defun mon-list-add-non-nil 824,37137
(defun mon-list-ensure 871,39505
(defun %mon-list-reorder 893,40332
(defun mon-list-reorder 918,41380
(defun mon-union 1028,47331
(defun mon-member-if 1063,48912
(defun mon-delete-if 1090,50192
(defun mon-remove-if-not 1127,51799
(defun mon-remove-if 1157,53337
(defun mon-intersection 1191,55197
(defun mon-set-difference 1288,60166
(defun mon-pairlis 1342,62854
(defun mon-map 1372,64440
(defun mon-map1 1470,70498
(defun mon-mapc 1547,74542
(defun mon-mapcar 1574,75853
(defun mon-mapcan 1617,77656
(defun mon-mapl 1659,79592
(defun mon-mapcon 1708,81894
(defun mon-maplist 1728,83033
(defun mon-subseq 1768,85132
(defun mon-sublist 1863,89613
(defun mon-sublist-gutted 1892,91117
(defun mon-map-append 1921,92733
(defun mon-assoc-replace 1944,94089
(defmacro mon-moveq 1971,95739
(defun mon-flatten 1995,96990
(defun mon-list-flatten-rotated 2038,99200
(defun mon-transpose 2057,100033
(defun mon-list-intersperse 2083,101321
(defun mon-every 2119,103031
(defun* mon-mismatch 2172,105761
(defun mon-maptree 2198,107417
(defun mon-recursive-apply 2232,109191
(defun mon-list-merge 2257,110641
(defun mon-combine 2282,111808
(defun mon-list-variant-forms 2328,114303
(defun mon-list-permute-variants 2360,115829
(defun mon-list-permute-1 2382,116862
(defun mon-list-permute-2 2418,118793
(defun mon-permute-combine 2445,120074
(defun mon-permute-combine-1 2487,122179
(defun mon-list-string-longest 2536,124709
(defun mon-bool-vector-pp 2574,126760

naf-mode/mon-randomize-utils.el,317
(defun mon-next-almost-prime 140,4590
(defun mon-gensym-counter-randomizer 194,6714
(defun mon-mix-fields 300,11940
(defun mon-make-random-state 317,12559
(defun mon-generate-prand-id 344,13708
(defun mon-generate-prand-seed 377,15176
(defun mon-string-wonkify 434,17993
(defun mon-generate-WPA-key 491,20959

naf-mode/mon-testme-utils.el,2508
(defgroup mon-testme-utils 171,6769
(defcustom *mon-testme-utils-xrefs* 185,7345
(defun mon-insert-lisp-testme 223,9548
(defun mon-insert-test-cases 298,13190
(defun mon-gensym-counter-randomizer-TEST 338,15199
(defun mon-list-nshuffle-TEST 385,17735
(defun mon-line-strings-to-list-TEST 420,19455
(defun mon-with-inhibit-buffer-read-only-PP-TEST 460,21138
(defun mon-with-inhibit-buffer-read-only-TEST 485,22328
(defun mon-line-dolines-setup-TEST 526,24389
(defun mon-line-dolines-TEST 579,26870
(defun mon-with-buffer-undo-disabled-TEST 652,30797
(defun mon-string-split-TEST 684,32378
(defun mon-line-strings-bq-qt-sym-bol-TEST 723,34391
(defun mon-help-CL-wget-pkgs-TEST 761,36293
(defun mon-build-copyright-string-TEST 822,39365
(defun google-define-get-command-TEST 911,44690
(defun mon-permute-combine-functions-TEST 935,45815
(defun mon-write-string-reset-bind-TEST 1012,49593
(defun mon-region-capitalize-TEST 1088,53309
(defun naf-mode-state-to-postal-TEST 1128,55150
(defun mon-booleanp-to-binary-TEST 1143,55859
(defun mon-sequence-all-booleanp-TEST 1179,57597
(defun mon-string-or-null-and-zerop-TEST 1228,60517
(defun mon-error-protect-PP-EXPAND-TEST 1263,62183
(defun mon-line-string-rotate-name-TEST 1281,62831
(defun mon-line-indent-from-to-col-TEST 1317,64826
(defun mon-line-strings-pipe-to-col-TEST 1361,67238
(defun mon-line-string-insert-chars-under-TEST 1396,69051
(defun mon-list-reorder-TEST 1425,70485
(defun mon-regexp-clean-ulan-dispatch-chars-TEST 1494,74441
(defun mon-set-buffer-substring-no-properties-TEST 1564,77778
(defun mon-plist-keys-TEST 1599,79254
(defun mon-plist-values-TEST 1617,79989
(defun mon-help-propertize-regexp-symbol-defs-TEST 1649,81491
(defun mon-help-regexp-symbol-defs-TEST 1689,83841
(defun mon-help-propertize-tags-TEST 1855,91123
(defun mon-help-keys-wikify-TEST 1941,96294
(defun mon-drive-transfer-template-TEST 1965,97453
(defun mon-build-mon-emacsd-example 1999,99094
(defun mon-build-misc-path-example 2045,101631
(defun mon-build-user-name-example 2135,106073
(defun mon-user-system-conditionals-TEST 2194,109188
(defun mon-build-user-name-example-TEST 2248,112469
(defun mon-cln-xml-escapes-TEST 2281,113987
(defun* mon-up/down-case-regexp-TEST 2309,115389
(defun mon-hash-get-symbol-keys-TEST 2392,119832
(defun mon-file-stamp-buffer-filename-TEST 2411,120756
(defun mon-cln-freenode-log-TEST 2438,121955
(defun mon-align-conses-EXAMPLE 2486,124351
(defun mon-align-conses-TEST 2523,126333

naf-mode/mon-type-utils-vars.el,421
(defgroup mon-type-utils-vars 130,4139
(defcustom *mon-type-utils-vars-xrefs*145,4706
(defvar *mon-special-forms-types*176,5928
(defvar *mon-non-mappable-object-types* 212,7484
(defcustom *mon-equality-or-predicate-function-types*253,9438
(defvar *mon-function-object-types* 313,11634
(defvar *mon-ascii-alpha-chars* 327,12385
(defcustom *mon-ascii-punct-chars*351,13497
(defvar *mon-whitespace-chars* 372,14408

naf-mode/smith-poster-utils.el,483
(defvar *ebay-smith-poster-path* 112,4220
(defvar *insert-smith-ebay-template* 125,4717
(defun mon-set-smith-poster-register-e 189,6935
(defalias 'mon-insert-smith-poster-template mon-insert-smith-poster-template228,8798
(defun mon-insert-smith-ebay-dbc-template 245,9643
(defun mon-make-smith-folder-list 297,12605
(defun mon-ebay-smith-posters->template 344,14763
(defun mon-cln-smith-trailing-wps-dbc-item 424,19441
(defun mon-smith-poster-dbc-item->ebay-item 436,20025

naf-mode/mon-doc-help-undocd.el,40
(defun mon-help-doc-no-docd 1607,64034

naf-mode/mon-css-color.el,3367
(defconst css-color:version 193,8297
(defgroup css-color 197,8443
(defgroup mon-css-color 211,9036
(defun css-color-turn-on-in-buffer 217,9228
(define-globalized-minor-mode css-color-global-mode 224,9434
(defcustom *css-color:hex-chars* 229,9588
(defcustom *regexp-css-color-hex* 246,10506
(defcustom *regexp-css-color-hsl* 260,11172
(defcustom *regexp-css-color-rgb* 279,12015
(defcustom *css-color:html-colors*298,12915
(defun css-color:html-color-both-cases 469,18296
(defcustom *regexp-css-color-html*490,19315
(defcustom *regexp-css-color-color* 514,20342
(defvar *css-color:keywords*544,21569
(define-minor-mode css-color-mode592,24900
(defun css-color:font-lock-hook-fun 642,27119
(defvar *css-color:map*653,27590
(defvar *css-color:generic-map* 675,28657
(defun css-color:pal-lumsig 692,29491
(defun css-color:foreground-color 701,29908
(defun css-color:normalize-hue 718,30752
(defun css-color:within-bounds 725,31095
(defun css-color:hex-to-rgb 733,31489
(defun css-color:hex-to-hsv 758,32744
(defun css-color:rgb-to-hex 769,33301
(defun css-color:rgb-to-hsv 781,33913
(defun css-color:rgb-to-hsl 814,35475
(defun css-color:hsv-to-hsl 862,37161
(defun css-color:hsv-to-hex 875,37803
(defun css-color:hsv-to-rgb 888,38441
(defun css-color:hsv-to-prop-hexstring 921,39966
(defun css-color:hsl-to-rgb-fractions 935,40714
(defun css-color:hsl-to-rgb 953,41651
(defun css-color:hsl-to-hex 972,42507
(defun css-color:hue-to-rgb 983,43090
(defun css-color:parse-hsl 1001,43917
(defun css-color:incr-hsv-hue 1015,44629
(defun css-color:incr-hsv-sat 1025,45172
(defun css-color:incr-hsv-val 1036,45769
(defun css-color:hexval-beginning 1047,46361
(defun css-color:repl-color-at-posn 1057,46729
(defun css-color:get-color-at-point 1070,47326
(defun css-color:adjust-hsv-hue-at-posn 1083,47959
(defun css-color:adjust-hsv-sat-at-posn 1094,48522
(defun css-color:adjust-hsv-val-at-posn 1105,49092
(defun css-color:what-channel 1117,49712
(defun css-color:adjust-hex-at-posn 1128,50105
(defun css-color:rgb-up 1151,51273
(defun css-color:rgb-down 1159,51619
(defun css-color:hsv-hue-up 1167,51969
(defun css-color:hsv-hue-down 1176,52350
(defun css-color:hsv-saturation-up 1185,52736
(defun css-color:hsv-saturation-down 1193,53112
(defun css-color:hsv-value-up 1201,53494
(defun css-color:hsv-value-down 1209,53860
(defun css-color:num-up 1218,54252
(defun css-color:num-down 1245,55440
(defun css-color:text-property-color-start 1268,56428
(defun css-color:text-property-color-end 1280,56950
(defun css-color:text-property-color-region 1292,57478
(defvar *css-color:string-frob* 1308,58420
(defconst *css-color:type-circle* 1322,59140
(defun css-color:next-type 1329,59454
(defun css-color:cycle-type 1337,59810
(defun css-color:string-hex-to-hsl 1365,61251
(defun css-color:string-hsl-to-rgb 1378,61954
(defun css-color:string-rgb-to-name 1393,62697
(defun css-color:string-name-to-hex 1414,63805
(defun css-color:string-rgb-to-hex 1431,64639
(defun css-color:string-hsl-to-hex 1455,65973
(defun css-color:next-channel 1467,66600
(defun css-color:hexify-anystring 1485,67411
(defun css-color:toggle-percentage 1497,67909
(defvar *css-color:fg-history* 1518,69173
(defun css-color:html-color-by-name 1528,69549
(defun css-color:examine-color 1565,71633
(defun css-color:run-tests 1593,73253

naf-mode/mon-css-check.el,719
(defgroup css-check 166,6137
(defface css-check-unapplied-face176,6587
(defface css-check-applied-face187,7039
(defvar *css-check-map* 198,7485
(defvar *css-check-follow-mode* 221,8504
(defvar *css-check-csstidy-path* 230,8990
(defvar *css-check-file* 246,9801
(defvar *CSS-CHECK* 258,10403
(defun css-check-kill-buffer-hook 273,11115
(defun css-check-toggle-follow 288,11863
(defun css-check-next-line 307,12794
(defun css-check-prev-line 323,13560
(defun css-check-goto-line-at-p 338,14221
(defun css-check-apply-line-at-p 365,15642
(defun css-check-undo-application-at-p 414,18134
(defun css-check-buffer-mode-css-p 467,20860
(defun css-check-buffer-offer-save 493,22101
(defun css-check 512,22960

naf-mode/mon-error-utils.el,985
(defgroup mon-error-utils 142,5147
(defgroup mon-error-warn 156,5715
(defcustom *mon-error-utils-xrefs* 164,6007
(defvar *mon-error-gather* 194,7622
(defcustom *mon-message-function* 206,8228
(defun mon-format 229,9325
(cl-defun mon-message 560,29701
(cl-defun mon-string-not-null-nor-zerop-ERROR 598,31734
(cl-defun mon-symbol-void-ERROR 643,34517
(cl-defun mon-vectorp-ERROR 689,37338
(cl-defun mon-file-non-existent-ERROR 727,39413
(cl-defun mon-buffer-non-existent-ERROR 761,41323
(cl-defun mon-list-proper-p-ERROR 800,43563
(defun mon-truncate-path-for-prompt 886,47102
(defun mon-display-warning 911,48276
(defun mon-error-toplevel 921,48819
(cl-defun mon-error 947,50111
(defun mon-error-string-err 1012,53766
(defun mon-error-string-err-format 1041,54998
(defun mon-error-gather 1112,59318
(defun mon-error-gather-peek 1129,60113
(defun mon-error-gather-reset 1150,61055
(defun mon-error-gather-finalize 1164,61662
(cl-defun mon-write-string 1286,67392

naf-mode/mon-alphabet-list-utils.el,390
(defvar *mon-alphabet-as-type-generate* 195,7676
(defun mon-alphabet-as-type 222,9210
(defmacro mon-alphabet-as-defun 417,19127
(defun mon-alphabet-as-bc 439,20188
(defun mon-alphabet-as-map-bc 463,21280
(defun mon-alphabet-as-doc-loadtime 519,23536
(defun mon-alphabet-as-map-fun-prop 577,27214
(defun mon-alphabet-as-unintern-fun 598,28357
(defun mon-string-alpha-list 676,32514

naf-mode/naf-mode-ulan-utils.el,614
(defgroup naf-mode-ulan-help-utils 154,5528
(defcustom *mon-ulan-utils-xrefs* 166,5987
(defcustom *ulan-sample-data* 190,6956
(defvar *ulan-associative-roles* 202,7456
(defconst *naf-mode-db-numbers-flag-ulan* 216,7974
(defun mon-get-next-ulan-record 231,8640
(defconst *naf-mode-db-numbers-flag-ulan-loc-naf* 271,10570
(defconst naf-mode-db-field-flags-ulan-paren286,11384
(defun mon-rotate-ulan-triples 322,12698
(defun mon-invert-ulan-triples 339,13405
(defun mon-ulan-tsv-assc-rels-type->list 393,15389
(defconst *naf-mode-ulan-rltd-ppl-corp* 466,18441
(defconst *naf-mode-x-of-ulan-bol*502,20425

naf-mode/mon-doc-help-utils.el,8222
(defgroup mon-doc-help-utils 456,22539
(defgroup mon-doc-help-utils-faces 479,23589
(defcustom *mon-doc-help-utils-xrefs*512,25396
(defcustom *mon-doc-cookie* 607,31508
(defcustom *mon-help-docstring-help-bffr* 628,32426
(defcustom *mon-help-custom-faces-builtins-tags*643,33019
(defcustom *mon-help-mon-tags-alist* 675,34906
(defcustom *mon-help-reference-keywords* 784,40796
(defcustom *regexp-mon-doc-help-pointer-tags*853,45427
(defcustom *regexp-mon-doc-help-docstring-tags-URL*895,47084
(defcustom *regexp-mon-doc-help-docstring-tags-DYNAMIC* 936,49109
(defcustom *regexp-mon-doc-help-docstring-tags-TABLES*962,50323
(defcustom *regexp-mon-doc-help-docstring-tags*992,51747
(defcustom *regexp-mon-doc-help-comment-tags*1019,53043
(defcustom *regexp-mon-doc-help-meta-tags*1046,54273
(defcustom *regexp-mon-doc-help-builtin-dynamic-tags* 1078,55822
(defcustom *regexp-mon-doc-help-builtin-static-tags*1105,57137
(defcustom *mon-help-side-effect-free* 1132,58469
(defcustom *mon-help-side-effect-and-error-free* 1222,63737
(defcustom *mon-help-pure-functions* 1294,68086
(defvar *mon-help-subrs* 1364,71616
(defvar *mon-help-subrs-false* 1383,72648
(defun mon-map-subrs-and-hash 1405,73741
(defvar *mon-help-byte-optimizer-vals* 1481,77026
(defcustom *mon-help-risky-local-variables*1502,78055
(defvar *mon-help-permanent-locals* 1529,79459
(defun mon-help-permanent-locals-find 1548,80506
(defun mon-help-byte-optimizer-find 1618,84174
(defface mon-help-KEY-tag1661,86356
(defface mon-help-DYNATAB-tag1678,87130
(defface mon-help-META-tag1695,87998
(defface mon-help-PNTR-tag1711,88742
(defface mon-help-INNER-KEY-tag1746,90326
(defface mon-help-URL-wrap-tag1765,91115
(defface mon-help-BUILTIN-tag1785,91933
(defface mon-help-OLAY-RESULT1813,93051
(defface mon-help-OLAY-RESULT-string-show1833,93827
(defface mon-help-OLAY-RESULT-match-show1855,94634
(defcustom *mon-help-propertize-tags-triples*1879,95540
(defun mon-help-propertize-tags 1916,97819
(defun* mon-help-mon-tags 1969,100782
(defun mon-help-insert-tags 2032,104007
(defun mon-help-insert-tags-comment 2093,107305
(defun mon-help-overlay-for-example 2106,107993
(defun mon-help-delimited-region 2208,114459
(defun mon-help-overlay-on-region 2284,118186
(defun mon-help-overlay-result 2308,119422
(defun mon-help-find-result-for-overlay 2368,122462
(defun mon-help-temp-docstring-display 2419,124699
(defun mon-help-buffer-spc-*DOC* 2469,127293
(defun mon-help-get-mon-help-buffer 2522,129972
(defun mon-help-view-file 2538,130630
(defcustom *mon-tags-table-list* 2571,132346
(defun mon-update-tags-tables 2606,133893
(defun mon-update-tags-tables-loadtime 2663,136812
(defun mon-tags-naf-apropos 2677,137534
(defun mon-tags-apropos 2689,137974
(defun mon-insert-doc-help-cookie 2700,138372
(defmacro mon-help-put-var-doc-val->func 2733,139830
(defmacro mon-help-swap-var-doc-const-val 2806,143939
(defun mon-help-xref-symbol-value 2963,152649
(cl-defun mon-help-function-spit-doc 2999,154613
(defun mon-insert-doc-help-tail 3126,162403
(defun mon-help-message-intrp 3237,168910
(defun mon-help-function-arity 3292,171577
(defcustom *mon-help-emacs-errors* 3347,173883
(defun mon-help-errors 3428,177989
(defun mon-help-function-args 3625,187825
(defcustom *mon-help-interactive-spec-alist* 3669,189934
(defun mon-help-parse-interactive-spec 3797,196035
(defun mon-help-insert-documentation 3855,199022
(defun mon-help-help-functions 3938,203192
(defun mon-help-mon-help 4030,206221
(defun mon-help-mon-functions 4243,212127
(defun mon-help-ebay-template-mode 4902,228348
(defun mon-help-emacs-introspect 4973,230824
(defcustom *mon-emacs-external-programs-vars* 5185,236804
(defun mon-help-package-keywords 5252,240546
(defun mon-help-regexp-syntax 5344,244791
(defun mon-help-syntax-class 5405,247452
(defun mon-help-syntax-functions 5468,250450
(defun mon-help-search-functions 5588,253883
(defun mon-help-hooks 5720,257457
(defun mon-help-file-dir-functions 5876,261402
(defun mon-help-file-dir-functions-usage 6207,270441
(defun mon-help-process-functions 6378,276717
(defun mon-help-make-network-process 6491,279644
(defun mon-help-server-functions 6576,283389
(defun mon-help-inhibit-functions 6667,285989
(defun mon-help-buffer-functions 6726,287912
(defun mon-help-frame-functions 6976,294479
(defun mon-help-window-functions 7213,300036
(defun mon-help-mode-functions 7386,305153
(defun mon-help-xml-functions 7470,307575
(defun mon-help-eieio-defclass 7515,308874
(defun mon-help-eieio-functions 7571,311375
(defun mon-help-eieio-methods 7710,317923
(defun mon-help-type-predicates 7870,327117
(defun mon-help-number-functions 7995,332995
(defun mon-help-predicate-functions 8123,335281
(defun mon-help-sequence-functions 8402,341669
(defun mon-help-key-functions 8564,344805
(defun mon-help-load-functions 8931,354432
(defun mon-help-read-functions 9011,356567
(defun mon-help-print-functions 9134,362829
(defun mon-help-marker-functions 9263,366623
(defun mon-help-hash-functions 9328,368337
(defun mon-help-plist-functions 9446,372412
(defun mon-help-plist-properties 9524,374750
(defun mon-help-faces-themes 9738,380566
(defun mon-help-faces 9858,386132
(defun mon-help-faces-basic 9998,395805
(defun mon-help-faces-font-lock 10052,397837
(defun mon-help-font-lock-functions 10097,399516
(defun mon-help-font-lock 10226,403736
(defun mon-help-overlay-functions 10293,407420
(defun mon-help-text-property-functions 10372,409881
(defun mon-help-text-property-properties 10467,416674
(defun mon-help-text-property-stickyness 10557,423363
(defun mon-help-text-property-functions-ext 10627,427083
(defun mon-help-color-functions 10688,429424
(defun mon-help-color-chart 10776,432007
(defun mon-help-easy-menu 10940,444466
(defun mon-help-widgets 10994,447908
(defun mon-help-custom-keywords 11134,457998
(defun mon-help-char-functions 11234,462162
(defun mon-help-char-charset-functions 11358,466154
(defun mon-help-char-coding-functions 11471,469384
(defun mon-help-char-table-functions 11561,473068
(defun mon-help-display-table-functions 11640,475621
(defun mon-help-char-unidata-table 11708,477959
(defun mon-help-char-composition 11845,482527
(defun mon-help-char-ascii 12015,490060
(defun mon-help-char-iso-8859-1 12107,495661
(defun mon-help-char-ecma-48 12179,500248
(defun mon-help-char-ecma-35 12237,503272
(defun mon-help-diacritics 12294,506033
(defun mon-help-char-logic 12460,511632
(defun mon-help-char-representation 12503,513253
(defun mon-help-char-raw-bytes 12666,520596
(defun mon-help-binary-representation 12743,523900
(defun mon-help-symbol-functions 12979,534031
(defun mon-help-byte-compile-functions 13299,544004
(defun mon-help-byte-code-vector-symbols 13664,556157
(defun mon-help-ipv4-header 13714,558709
(defun mon-help-nclose-functions 13813,564068
(defun mon-help-iso-8601 13869,566172
(defun mon-help-time-functions 13974,570974
(defun mon-help-mon-time-functions 14069,573659
(defun mon-help-bookmark-functions 14168,576699
(defun mon-help-info-incantation 14306,580615
(defun mon-help-tar-incantation 14327,581605
(defun mon-help-rename-incantation 14364,582955
(defcustom *regexp-clean-du-flags* 14393,583929
(defun mon-help-du-incantation 14446,585837
(defun mon-help-install-info-incantation 14499,588221
(defun mon-help-hg-archive 14532,589872
(defun mon-help-crontab 14579,591962
(defun mon-help-permissions 14664,596524
(defun mon-help-unix-commands 14755,602412
(defun mon-help-unix-usage 14935,610133
(defun mon-help-format-width 15203,626556
(defun mon-index-elisp-symbol 15233,627998
(defun mon-help-w32-functions 15254,628744
(defcustom *w32-env-variables-alist* 15311,630592
(defun mon-help-w32-env 15417,637610
(defvar *mon-help-reference-keys* 15488,640959
(defun mon-help-bind-help-keys-loadtime 16761,687095
(defun mon-help-keys 16827,690626
(defun mon-help-keys-wikify-anchors 16840,691104
(defun mon-help-keys-wikify-heading 16898,694082
(defun mon-help-keys-wikify 16926,695516
(defun mon-help-escape-for-ewiki 17045,701838
(defun mon-help-unescape-for-ewiki 17091,703743
(defun mon-help-utils-loadtime 17136,705705

naf-mode/mon-css-complete.el,4060
(defvar *css-complete-at-ids* 152,7705
(defvar *css-complete-tag-ids* 175,8777
(defvar *css-complete-media-ids* 230,11284
(defvar *css-complete-property-ids* 252,12368
(defvar *css-complete-pseudo-ids* 270,13188
(defvar *css-complete-props-and-vals* 288,13994
(defvar *css-complete-look-back-regexp* 459,23462
(defvar *css-complete-popup-pos-x-offset* 496,25301
(defmacro css-complete-collect 521,26287
(defmacro css-delete-partial 571,28569
(defmacro css-complete-menu-generate 629,31554
(defmacro css-delims-maybe-generate 652,32759
(defmacro css-popup-generate 677,33765
(defmacro css-at-p-generate 696,34705
(defun css-vals-for-prop 719,35758
(defun css-prop-for-point 732,36445
(defun css-vals-for-point 748,37214
(defun css-delims-maybe-part-generic 759,37791
(defalias 'css-delims-maybe-part-prop-at-point css-delims-maybe-part-prop-at-point780,38616
(defalias 'css-delims-maybe-part-pseudo-at-point css-delims-maybe-part-pseudo-at-point792,39141
(defalias 'css-delims-maybe-part-at-at-point css-delims-maybe-part-at-at-point804,39676
(defun css-delims-maybe-part-val-at-point 821,40354
(defun css-maybe-part-val-at-point 841,41140
(defun css-possible-value-completions 851,41613
(defun css-possible-value-completions-at-point 870,42473
(defun css-delete-partial-value 879,42909
(defun css-value-popup-completions 888,43378
(defun css-value-completion-menu 898,43876
(defun css-pos-for-x-popup-menu 916,44614
(defun css-complete-value 931,45326
(defun css-at-value-p 947,46132
(defun css-at-prop-p 963,46884
(defun css-maybe-part-prop-at-point 974,47479
(defun css-possible-prop-completions 986,47992
(defun css-possible-prop-completions-at-point 997,48496
(defun css-props-for-point 1005,48901
(defun css-delete-partial-prop 1014,49305
(defun css-prop-popup-completions 1023,49774
(defun css-prop-completion-menu 1030,50143
(defun css-complete-prop 1047,50767
(defun css-at-pseudo-id-p 1065,51652
(defun css-maybe-part-pseudo-at-point 1077,52148
(defun css-possible-pseudo-completions 1088,52661
(defun css-possible-pseudo-completions-at-point 1099,53171
(defun css-pseudos-for-point 1105,53515
(defun css-delete-partial-pseudo 1113,53867
(defun css-pseudo-popup-completions 1123,54346
(defun css-pseudo-completion-menu 1131,54768
(defun css-complete-pseudo 1146,55366
(defun css-at-tag-id-p 1161,56090
(defun css-delims-maybe-part-tag-at-point 1173,56684
(defun css-maybe-part-tag-at-point 1193,57555
(defun css-tags-for-point 1204,58058
(defun css-possible-tag-completions 1211,58365
(defun css-possible-tag-completions-at-point 1222,58865
(defun css-delete-partial-tag 1228,59196
(defun css-tag-popup-completions 1237,59640
(defun css-tag-completion-menu 1248,60169
(defun css-complete-tag 1261,60757
(defun css-at-at-id-p 1277,61541
(defun css-maybe-part-at-at-point 1287,61960
(defun css-ats-for-point 1297,62460
(defun css-possible-at-completions 1304,62765
(defun css-possible-at-completions-at-point 1315,63261
(defun css-delete-partial-at 1321,63585
(defun css-at-popup-completions 1330,64037
(defun css-at-completion-menu 1338,64403
(defun css-complete-at 1353,64968
(defun css-at-string-p 1376,66000
(defun css-at-filename-p 1384,66407
(defun css-complete-filename 1392,66789
(defun css-at-comment-p 1399,67117
(defun css-after-at-p 1407,67540
(defun css-complete-after-at 1424,68276
(defun css-media-for-point 1448,69377
(defun css-media-completion-menu 1455,69691
(defun css-complete-media 1471,70338
(defun css-media-popup-completions 1486,71015
(defun css-complete 1496,71474
(defun css-electric-left-brace 1530,73207
(defun css-electric-left-bracket 1542,73551
(defun css-electric-left-paren 1553,73856
(defun css-electric-quotes 1563,74154
(defun css-electric-semicolon 1572,74410
(define-key css-mode-map 1581,74664
(define-key css-mode-map 1582,74715
(define-key css-mode-map 1583,74777
(define-key css-mode-map 1584,74841
(define-key css-mode-map 1585,74899
(define-key css-mode-map 1586,74961
(defun mon-css-complete-loadtime 1592,75152

naf-mode/naf-mode-nation-english.el,129
(defvar *naf-mode-nation-english-xrefs* 81,2678
(defvar *naf-nation-english*98,3343
(defconst naf-mode-nation-english326,7291

naf-mode/naf-mode-art-keywords.el,123
(defvar *naf-mode-art-keywords-xrefs*79,2813
(defvar *naf-art-keywords*87,3210
(defconst naf-mode-art-keywords 153,4635

naf-mode/mon-elisp-fileset.el,36
(defun mon-map-elisp-fileset 7,279

naf-mode/mon-doc-help-tidy.el,31
(defun mon-help-tidy 111,3285

naf-mode/mon-rename-images-supplemental.el,738
(defun mon-get-buffer-parent-dir 168,7343
(defun mon-string-split-buffer-name 238,10779
(defun mon-truncate-path-for-prompt 266,12050
(defun mon-buffer-written-p 291,13208
(defun mon-toggle-read-only-point-motion 319,14558
(defun mon-dir-build-list 340,15354
(defun mon-line-bol-is-eol 402,17599
(defun mon-cln-trail-whitespace 424,18464
(defun mon-delete-back-up-list 445,19442
(defvar *mon-nef-scan-drive* 508,22168
(defvar *mon-nef-scan-path* 517,22590
(defvar *mon-nef-scan-nefs-path* 529,23135
(defvar *mon-nef-scan-nef2-path* 542,23637
(defvar *mon-ebay-images-path* 555,24152
(defvar *mon-ebay-images-bmp-path* 568,24658
(defvar *mon-ebay-images-jpg-path* 581,25228
(defvar *mon-ebay-images-lookup-path* 591,25695

naf-mode/naf-mode-abbrevs.el,74
(define-abbrev-table 'naf-mode-abbrev-tablenaf-mode-abbrev-table59,1791

naf-mode/naf-mode-classes.el,787
(defclass naf-mode-base 82,2701
(defclass naf-mode-obj-timestamp-abst-intrfc 105,3334
(defmethod naf-timestamp-on-obj 116,3712
(defclass naf-mode-obj-uid-abst-intrfc 122,3988
(defmethod naf-uid-on-obj 134,4442
(defclass naf-mode-instance-doc-abst-intrfc 140,4715
(defclass naf-mode-xrefs-keyword-abst-intrfc 151,5054
(defclass naf-mode-xrefs-face-abst-intrfc 164,5455
(defclass naf-mode-xrefs-function-abst-intrfc 177,5844
(defclass naf-mode-xrefs-constant-abst-intrfc 190,6246
(defclass naf-mode-xrefs-variable-abst-intrfc 203,6655
(defclass naf-mode-xrefs-package-abst-intrfc 216,7064
(defclass naf-mode-xrefs-abst-intrfc 229,7491
(defclass naf-mode-keyword-abst-intrfc 266,9086
(defclass naf-mode-kwrd-face-abst-intrfc 318,10708
(defclass naf-nation-english 344,11414

naf-mode/mon-macs.el,1151
(defgroup mon-macs 162,5507
(defcustom *mon-macs-xrefs* 177,6003
(defmacro mon-error-protect 205,7534
(defmacro %mon-format-chk-keys 257,10096
(defmacro handler-case 312,12665
(defmacro mon-copy-list-mac 377,16282
(defmacro mon-mapcar-mac 474,21779
(defmacro mon-nshuffle-vector 535,25058
(defmacro mon-list-sift 573,26691
(defmacro mon-foreach 622,29110
(defmacro mon-for 638,29809
(defmacro mon-loop 660,30666
(defmacro mon-equality-for-type 675,31161
(defmacro mon-gensym 710,32539
(defmacro mon-with-gensyms 749,34615
(defmacro mon-with-print-gensyms 807,37199
(defmacro defconstant 843,38635
(defmacro defparameter 870,40062
(defmacro mon-set-text-properies-region 914,42088
(defmacro mon-get-face-at-posn 934,43011
(defmacro mon-with-file-buffer 962,44204
(defmacro mon-buffer-exists-p 1003,46039
(defmacro mon-with-buffer-undo-disabled 1056,48940
(defmacro mon-print-in-buffer-if-p 1098,50843
(defmacro mon-with-inhibit-buffer-read-only 1128,52302
(defmacro mon-toggle-restore-llm 1178,54967
(defmacro mon-naf-mode-toggle-restore-llm 1238,58115
(cl-defmacro mon-line-dolines 1259,59205
(defmacro mon-cat 1298,61053

naf-mode/naf-mode-nationality-french.el,141
(defvar *naf-mode-nationality-french-xrefs*81,2657
(defvar *naf-nationality-french*100,3391
(defconst naf-mode-nationality-french180,4798

naf-mode/naf-mode-insertion-utils.el,1110
(defvar *naf-mode-insertion-utils-xrefs* 110,4180
(defun naf-tab-region 148,5631
(defun naf-comment-line 156,5875
(defun naf-uncomment-line 167,6199
(defun naf-comment-region 179,6541
(defun naf-uncomment-region 189,6897
(defun non-posting-source 200,7335
(defalias 'nps nps218,8096
(defun non-posting-ebay-source 228,8523
(defalias 'npes npes255,9701
(defun non-posting-wiki-source 263,9998
(defalias 'npws npws285,10988
(defun non-posting-philsp-source 294,11298
(defalias 'npps npps320,12452
(defun non-posting-imdb-source 331,12791
(defun non-posting-benezit-source 365,14204
(defun non-posting-internet-source 405,16433
(defun mon-insert-naf-file-in-dirs 449,19006
(defun mon-insert-naf-mode-class-template 498,21472
(defun mon-build-naf-mode-xref 526,22878
(defun mon-insert-naf-mode-xref-template 568,25121
(defun mon-insert-naf-mode-var-const-template 605,26889
(defun mon-insert-naf-mode-constant-template 651,29063
(defun mon-insert-naf-mode-face-template 691,31373
(defun mon-insert-naf-mode-faces-as-displayed 739,33913
(defvar *naf-mode-faces-as-displayed* 756,34737

naf-mode/mon-rename-whitespace-files.el,214
(defun mon-rename-whitespace-files 114,3388
(defun mon-rename-whitespace-clean-whitespace 137,4708
(defun mon-rename-whitespace-make-file-conses 155,5629
(defun mon-file-convert-find-fprint-to-fprint0 173,6665

naf-mode/naf-mode-faces.el,3985
(defcustom *naf-mode-faces-xrefs* 233,10590
(defun mon-face-bold->normal 334,13985
(defvar *naf-face-props* 346,14485
(defvar *naf-face-prop-vals* 370,15649
(defvar *naf-face-prop-keywords* 389,16640
(defvar *naf-face-vals-alist* 407,17620
(defvar *naf-face-keyword->vals* 438,19330
(defun mon-bind-naf-face-vars-loadtime 451,20002
(defun naf-facercise-prop-val 553,25081
(defun naf-face-prop-val-p 590,27085
(defun naf-map-face-key->val 638,29796
(defun mon-help-naf-mode-faces 680,31842
(defface naf-mode-db-entry-face965,40581
(defvar naf-mode-db-entry-fface 977,41077
(defface naf-mode-delim-face989,41550
(defvar naf-mode-delim-fface 1001,42060
(defface naf-mode-name-divider-face1013,42535
(defvar naf-mode-name-divider-fface 1025,43053
(defface naf-mode-field-url-flag-face1037,43544
(defvar naf-mode-field-url-flag-fface 1049,44054
(defface naf-mode-delimit-url-flag-face1063,44632
(defvar naf-mode-delimit-url-flag-fface 1074,45098
(defface naf-mode-timestamp-face1088,45689
(defvar naf-mode-timestamp-fface 1102,46298
(defface naf-mode-accessed-by-face1117,46875
(defvar naf-mode-accessed-by-fface 1130,47424
(defface naf-mode-field-face1150,48175
(defvar naf-mode-field-fface 1161,48616
(defface naf-mode-db-field-entry-face1174,49165
(defvar naf-mode-db-field-entry-fface 1187,49696
(defface naf-mode-field-bnf-face 1202,50356
(defvar naf-mode-field-bnf-fface 1212,50761
(defface naf-mode-db-field-entry-bnf-face1226,51345
(defvar naf-mode-db-field-entry-bnf-fface 1237,51876
(defface naf-mode-field-ulan-face1254,52708
(defvar naf-mode-field-ulan-fface 1264,53101
(defface naf-mode-db-field-entry-ulan-face1278,53751
(defvar naf-mode-db-field-entry-ulan-fface 1288,54222
(defface naf-mode-ulan-ppl-corp-face1304,55010
(defvar naf-mode-ulan-ppl-corp-fface 1315,55468
(defface naf-mode-date-face1331,56236
(defvar naf-mode-date-fface 1347,56986
(defface naf-mode-date-active-face1364,57758
(defvar naf-mode-date-active-fface 1374,58142
(defface naf-mode-benezit-face1387,58635
(defvar naf-mode-benezit-fface 1400,59214
(defface naf-mode-place-face1413,59782
(defvar naf-mode-place-fface 1428,60462
(defface naf-mode-nationality-face1443,61097
(defvar naf-mode-nationality-fface 1455,61584
(defface naf-mode-publication-periodical-face1470,62157
(defvar naf-mode-publication-periodical-fface 1497,63353
(defface naf-mode-publication-periodical-french-face1526,64670
(defvar naf-mode-publication-periodical-french-fface 1541,65320
(defface naf-mode-publication-periodical-english-face 1560,66248
(defvar naf-mode-publication-periodical-english-fface 1573,66775
(defface naf-mode-publication-periodical-english-one-word-face1593,67709
(defvar naf-mode-publication-periodical-english-one-word-fface 1608,68382
(defface naf-mode-publication-periodical-intnl-face1629,69394
(defvar naf-mode-publication-periodical-intnl-fface 1644,70044
(defface naf-mode-event-face1662,70892
(defvar naf-mode-event-fface 1674,71374
(defface naf-mode-group-period-style-face1686,71830
(defvar naf-mode-group-period-style-fface 1697,72324
(defface naf-mode-institution-face1709,72829
(defvar naf-mode-institution-fface 1724,73531
(defface naf-mode-alternate-name-face1740,74210
(defvar naf-mode-alternate-name-fface 1753,74758
(defface naf-mode-primary-role-face1766,75308
(defvar naf-mode-primary-role-fface 1778,75793
(defface naf-mode-secondary-role-face1791,76281
(defvar naf-mode-secondary-role-fface 1803,76787
(defface naf-mode-art-keywords-role-face1816,77303
(defvar naf-mode-art-keywords-role-fface 1827,77789
(defface naf-mode-awards-prizes-face1839,78287
(defvar naf-mode-awards-prizes-fface 1850,78756
(defface naf-mode-artist-face1871,79574
(defvar naf-mode-artist-fface 1886,80112
(defface naf-mode-artist-student-of-face1903,80772
(defvar naf-mode-artist-student-of-fface 1915,81278
(defface naf-mode-artist-student-of-julian-face1937,82194
(defvar naf-mode-artist-student-of-julian-fface 1948,82684

naf-mode/mon-iptables-regexps.el,401
(defvar *mon-iptables-alist-as-sym* 125,4067
(defvar *regexp-clean-iptables* 146,5094
(defun mon-iptables-make-regexps 161,5958
(defun mon-iptables-make-regexps-long 190,7302
(defun mon-cln-iptables-short-form 217,8563
(defun mon-cln-iptables-long-form 284,11505
(defun mon-iptables-pp-key 350,14530
(defun mon-iptables-pp-as-sym 379,15868
(defun mon-bind-iptables-vars-at-loadtime 401,16636

naf-mode/mon-drive-transfer-utils.el,339
(defvar *mon-drive-transfer-template-src-dest-log* 125,4136
(defun mon-drive-transfer-template-subst-src-dest-log 184,7539
(defvar *mon-drive-transfer-template* 205,8525
(defun mon-insert-drive-transfer-template 261,11506
(defun mon-drive-transfer-template-cln-log-dest 283,12394
(defun mon-drive-transfer-template-cln-all 348,15649

naf-mode/mon-get-freenode-lisp-logs.el,134
(defvar *freenode-lisp-logs* 124,3896
(defun mon-wget-freenode-lisp-logs 135,4437
(defun mon-get-freenode-lisp-logs-dates 170,6122

naf-mode/naf-mode-publications-periodicals-french.el,180
(defvar *naf-mode-publications-periodicals-french-xrefs*80,2637
(defvar *naf-publications-periodicals-french* 98,3460
(defconst naf-mode-publications-periodicals-french230,6479

naf-mode/mon-dbc-xml-utils.el,398
(defvar *mon-ampersand-sharp-diacritic-pairs* 112,3117
(defun mon-replace-ampersand-sharp-chars-in-buffer 166,5562
(defun mon-dbc-replace-consed-pairs-region-with-parsed-defclass-slots 181,6224
(defun mon-insert-parsed-defclass-slots 215,7777
(defalias 'mon-dbc-xml-insert-parsed-defclass-slots mon-dbc-xml-insert-parsed-defclass-slots236,8762
(defun mon-dbc-xml-parse-clean-fields 241,8982

naf-mode/mon-ps-pdf-utils.el,193
(defvar *mon-pdftotext-exec-path* 185,5550
(defvar *mon-pdfinfo-exec-path* 218,7017
(defun* mon-get-pdftotext 253,8430
(defun* mon-get-ps2ascii 332,12643
(defun* mon-get-pdfinfo 351,13611

naf-mode/mon-doc-help-CL.el,3283
(defgroup mon-doc-help-CL 203,8521
(defgroup mon-doc-help-CL-hspec-parse 219,9190
(defcustom  *mon-doc-help-CL-xrefs* 234,9845
(defcustom *mon-help-CL-cmu-ai-repo* 284,12801
(defcustom *mon-help-CL-ext-pkg-map* 325,14920
(defun mon--CL-no-pull-p 676,36096
(defcustom *mon-help-CL-ext-pkg-map-no-pull* 689,36704
(defun mon-help-CL-pkgs 727,38517
(defun mon-bind-mon-help-CL-pkgs-loadtime 771,40622
(defun mon-help-CL-wget-pkgs 833,43941
(defun mon-help-CL-wget-pkgs-for-shell-command 928,48902
(defcustom *mon-hspec-root-dir* 1185,61314
(defcustom *mon-hspec-parse-buffer* 1214,62865
(defcustom  *mon-hspec-unparse-buffer* 1234,63936
(defun mon-hspec-href-p 1252,64807
(defun mon-hspec-header-line-p 1279,66371
(defun mon-hspec-it-p 1349,70900
(defun mon-hspec-bld-p 1374,72313
(defun mon-hspec-plain-p 1399,73734
(defun mon-hspec-w3m-spec-p 1424,75139
(defun mon-hspec-prop-type 1438,75941
(defun mon-hspec-out 1468,77665
(defun mon-hspec-stk-n-mv 1485,78681
(defun mon-hspec-parse-w3m 1522,80741
(defun mon-hspec-find-w3m 1551,82213
(defun mon-hspec-unparse-w3m 1637,86813
(defun mon-hspec-unparse-w3m-to-buffer 1713,90693
(defun mon-help-CL-emacs-functions 2176,106663
(defun mon-help-CL-file-dir-functions 2202,107862
(defun mon-help-CL-stream-keywords 2313,110965
(defun mon-help-CL-error-condition-restart 2392,114135
(defun mon-help-CL-sequence-predicates 2568,119933
(defun mon-help-CL-bit-byte-bool-logic 2606,121673
(defun mon-help-CL-loop 2722,126520
(defun mon-help-CL-loop-usage 2925,132946
(defun mon-help-CL-do 3326,148371
(defun mon-help-CL-time 3395,151768
(defun mon-help-CL-sequences 3428,153193
(defun mon-help-CL-iteration 3481,154845
(defun mon-help-CL-conses 3516,156306
(defun mon-help-CL-hash-tables 3637,159074
(defun mon-help-CL-print 3690,161251
(defun mon-help-CL-streams 3778,164384
(defun mon-help-CL-reader 3866,166837
(defun mon-help-CL-chars 3913,168581
(defun mon-help-CL-strings 3965,170342
(defun mon-help-CL-structures 4006,171908
(defun mon-help-CL-arrays 4038,173375
(defun mon-help-CL-numbers 4105,175374
(defun mon-help-CL-lambda-list 4218,177808
(defun mon-help-CL-object-CLOS 4311,182218
(defun mon-help-CL-method-combination 4401,185097
(defun mon-help-CL-control-flow 4476,187852
(defun mon-help-CL-eval-compile 4576,190199
(defun mon-help-CL-load-compile 4635,192033
(defun mon-help-CL-environment 4676,193667
(defun mon-help-CL-package-functions 4736,195552
(defun mon-help-CL-intern-symbol 4795,197476
(defun mon-help-CL-types 4846,199256
(defun mon-help-CL-type-declarations 5080,205152
(defun mon-help-CL-sharpsign-syntax 5121,207036
(defun mon-help-CL-format 5175,209820
(defun mon-help-CL-format-usage 5371,215323
(defun mon-help-slime-functions 5494,218758
(defun mon-help-CL-slime-keys 6659,248375
(defun mon-help-CL-swank-functions 6793,253003
(defun mon-help-CL-local-time 6837,254530
(defun mon-help-CL-minion 6985,260874
(defvar *clhs-symbol-v3-or-v7* 7071,264776
(defun mon-help-utils-CL-loadtime 9094,369380
(defvar *mon-help-CL-symbols* 9121,370627
(defun mon-help-CL-symbols 9169,372722
(defun mon-cln-cxml-docs 9227,376040
(defun mon-help-CL-lispdoc 9286,378610
(defun mon-cln-ansi-info 9346,381790
(defcustom *mon-CL-indent-specs* 9397,384031

naf-mode/mon-region-utils.el,492
(defun mon-region-position 146,5113
(defun mon-region-length 186,7173
(defun mon-decode-coding-region-utf-8-unix 215,8592
(defun mon-region-indent-refill 233,9375
(defun mon-region-unfill 291,13016
(defun mon-region-capitalize 303,13467
(defun mon-region-reverse 337,15023
(defun mon-wrap-selection 361,16116
(defun mon-wrap-text 397,17616
(defun mon-wrap-with 428,18937
(defun mon-region-split-commas 440,19553
(defun mon-align-conses 496,21828
(defun mon-sha1-region 524,23228

naf-mode/naf-mode-french-months.el,42
(defconst naf-mode-french-months 84,3038

naf-mode/mon-dir-utils-local.el,1234
(defvar *mon-img-hash* 174,6804
(defvar *mon-nef-img-hash* 193,7583
(defvar *mon-bmp-img-hash* 212,8461
(defvar *mon-jpg-img-hash* 231,9321
(defun* mon-file-map-elisp-fileset 257,10547
(defun mon-dir-save-current 369,16941
(defun mon-dir-save-current-to-file 406,18650
(defun mon-explorer-naf-artist 454,20792
(defun mon-explorer-naf-brand 484,22151
(defun mon-dired-naf-artist-letter 516,23801
(defun mon-dired-naf-brand-letter 542,24982
(defun mon-dired-naf-image-dir 578,26736
(defun mon-dir-nef-update-photos-alist 624,29216
(defun mon-bind-nefs-photos-at-loadtime 686,32732
(defun mon-dir-nef-ranges 713,34025
(defun mon-dir-nef-name-to-head 746,35910
(defun mon-dir-nef-remove-if-empty 772,37261
(defun mon-dir-nef-find-dups 804,39035
(defun mon-dir-nef-conc-dups 843,41146
(defun mon-dir-nef-converge 876,42915
(defun mon-dir-nef-conc-ranges 911,44758
(defun mon-dir-nef-keep-3 941,46332
(defun mon-dir-nef-big 986,48855
(defun mon-dired-nef-dir 1010,49958
(defun mon-dir-hash-images 1040,51367
(defun mon-dir-hashed-complete 1096,53902
(defun mon-dir-try-comp 1123,55258
(defun mon-file-path-for-bug 1160,57018
(defun mon--local-url-for-bug 1212,59836
(defun mon-get-local-url-for-bug 1217,60080

naf-mode/mon-wget-utils.el,368
(defvar *mon-show-wget-script-temp* 121,3695
(defun mon-wget-list-to-script 131,4210
(defun mon-wget-list-to-script-TEST 183,6782
(defun mon-wget-list-to-script-shell-command 238,9757
(defun mon-wget-list-give-script-to-shell-command 275,11848
(defun mon-wget-rfc 315,13928
(defun mon-wget-unicodedata-files 347,15344
(defvar *mon-unidata-file-list* 381,17147

naf-mode/mon-regexp-symbols.el,2562
(defgroup mon-regexp-symbols 163,6413
(defcustom *mon-regexp-symbols-xrefs* 177,7018
(defcustom *regexp-whitespace-chars*211,9061
(defcustom *regexp-clean-xml-parse* 235,10241
(defcustom *regexp-clean-mon-file-keywords*261,11459
(defcustom *regexp-symbol-defs* 357,15265
(defcustom *regexp-symbol-defs-big* 406,17771
(defcustom *regexp-ansicl-info*459,20358
(defcustom *regexp-line-to-consed-pair* 489,21354
(defcustom *regexp-abrv-dotted-month->canonical*502,21978
(defcustom *regexp-simple-abrv-month->canonical*530,23569
(defcustom *regexp-clean-ebay-time-chars* 557,25068
(defcustom *regexp-clean-ebay-month->canonical-style1*598,26640
(defcustom *regexp-clean-ebay-month->canonical-style2* 637,28259
(defcustom *regexp-clean-ebay-month->canonical-style3* 678,30138
(defcustom *regexp-bound-month->canonical*726,32687
(defcustom *regexp-month->canonical-ws*754,34089
(defcustom *regexp-month->MM*825,37920
(defcustom *regexp-MM->month*849,39085
(defcustom *regexp-MM->month-whitespace-aware*872,40345
(defcustom *regexp-philsp-months*944,44748
(defcustom *regexp-philsp-apos*975,46225
(defcustom *regexp-philsp-location*998,47252
(defcustom *regexp-philsp-swap-location*1022,48357
(defcustom *regexp-philsp-fix-month-dates* 1041,49239
(defcustom *regexp-clean-irc-logs* 1074,51256
(defcustom *regexp-clean-wikipedia*1090,52055
(defcustom *regexp-clean-whitespace*1180,55744
(defcustom *regexp-clean-big-whitespace*1201,56630
(defcustom *regexp-clean-imdb*1223,57619
(defcustom *regexp-clean-loc*1248,58615
(defcustom *regexp-clean-gilt-group* 1298,61792
(defcustom *regexp-ital-to-eng* 1319,62643
(defcustom *regexp-defranc-dates*1354,64183
(defcustom *regexp-defranc-places* 1419,67148
(defcustom *regexp-defranc-benezit*1557,71726
(defcustom *regexp-clean-benezit-fields*1637,74650
(defcustom *regexp-german-to-eng*1671,76212
(defcustom *regexp-clean-bib*1697,77252
(defcustom *regexp-common-abbrevs*1727,78370
(defcustom *regexp-wrap-url-schemes* 1793,81078
(defcustom *regexp-rgb-hex*1844,83895
(defcustom *regexp-percent-encoding-reserved-chars*1883,85886
(defvar *regexp-cp1252-to-latin1*1906,86937
(defconst *google-define-html-entry-table*1929,88211
(defvar *regexp-clean-html-decimal-char-entity* 2018,93997
(defvar *regexp-clean-html-named-char-entity* 2047,95613
(defvar *regexp-clean-ulan-diacritics*2075,97141
(defvar *regexp-clean-ulan*2161,102287
(defvar *regexp-clean-ulan-fields*2208,104964
(defvar *regexp-clean-ulan-dispatch-chars* 2316,109974
(defvar *regexp-ulan-contribs* 2361,112392

naf-mode/mon-rename-image-utils.el,1052
(defun mon-get-ebay-bmps-in-dir 448,19698
(defun mon-get-nefs-in-dir 471,20797
(defun mon-insert-ebay-bmps-in-file 489,21760
(defun mon-get-ebay-jpgs-list 510,22693
(defun mon-insert-ebay-jpgs-in-file 537,23976
(defun mon-get-ebay-jpgs-count 555,24799
(defun mon-get-ebay-bmps-count 572,25500
(defun mon-get-ebay-img-count-verify 589,26203
(defun mon-cln-img-magic-hex 613,27269
(defun mon-get-ebay-img-css 672,30279
(defun mon-get-ebay-img-name-to-col 732,33252
(defun mon-get-ebay-css-pp-region-to-file 759,34276
(defun mon-get-ebay-css-pp 794,35787
(defun mon-insert-css-colors 854,37993
(defun mon-rename-imgs-in-dir 898,40074
(defun mon-check-image-type 956,42908
(defun mon-ebay-image-directory-not-ok 977,43911
(defun mon-ebay-image-directory-ok-p 1014,45541
(defun mon-image-rename-propertize 1079,48340
(defun mon-parse-rename-images 1195,55986
(defun mon-shorten-rename-image-path 1213,56850
(defun mon-parse-rename-lengths 1225,57490
(defun mon-pad-rename-lengths 1255,58927
(defun mon-build-rename-buffer 1333,63478

naf-mode/mon-dir-utils.el,2652
(defgroup mon-dir-utils 274,13601
(defcustom *mon-dir-utils-xrefs* 291,14244
(defcustom *mon-add-subdirs-to-list-ignorables*337,16942
(defcustom *regexp-add-subdirs-to-list-filter-ignorables* 360,18112
(defun mon-file-truename-p 390,19745
(defun mon-file-dir-attributes->plist 516,26051
(defun mon-file-ensure-extension-is-el 590,29956
(defun mon-file-get-load-history-if 638,32832
(defun mon-ffap-view-file 699,36356
(defun mon-ffap-view-file-other-window 718,37115
(defun mon-find-buffer-visiting-other-live-frame 739,37991
(defun mon-dired-find-file-other-frame 793,40130
(defun mon-copy-file-dired-as-list 821,41697
(defun mon-copy-file-dired-as-string 847,42936
(defun mon-toggle-dired-dwim-target 881,44639
(defun mon-dired-buffers-complete 913,45990
(defun mon-dired-other-window 1085,55642
(defun mon-dired-srt-alph 1098,56319
(defun mon-dired-srt-chrn 1109,56843
(defun mon-dired-srt-type 1120,57389
(defun mon-dired-srt-type-alph 1131,57907
(defun mon-dired-srt-type-chrn 1142,58443
(defun mon-dired-up-directory-this-buffer 1157,59179
(defun mon-dired-uninsert-subdir 1175,59942
(defun mon-dired-uninsert-subdir-all 1196,60977
(defun mon-dired-insert-dirs-recursive 1220,62151
(defun mon-dired-unmark-elc 1231,62723
(defun mon-async-du-dir 1264,64396
(defun mon-get-dir-size 1294,65748
(defun mon-dir-make-xargs-arg-file 1329,67420
(defun mon-get-new-buffer-w-stamp 1368,69610
(defun mon-get-dir-name-absolute 1423,72570
(defun mon-get-relative-w-absolute 1455,74186
(defun mon-copy-files-in-sub-dirs 1507,77147
(defun mon-copy-file-multiple 1575,80980
(cl-defun mon-file-reduce-name 1604,82429
(defun mon-build-path 1653,84859
(defun mon-buffer-written-p 1727,88879
(defun mon-string-split-buffer-name 1760,90552
(defun mon-string-split-buffer-parent-dir-quick 1791,92019
(defun mon-string-split-buffer-parent-dir 1817,93302
(defun mon-get-buffer-parent-dir 1865,95857
(defun mon-string-split-pathname 1932,99283
(defun mon-string-split-dir-recurse 1986,102350
(defun mon-dir-common-paths 2050,105965
(defun mon-dir-get-subdirs 2086,107746
(defun %mon-dir-get-subdirs-filter-full 2127,110142
(defun %mon-dir-get-subdirs-filter-no-full 2144,111037
(defun mon-add-subdirs-to-list 2166,112276
(defun mon-find-file 2251,117188
(defun mon-insert-subdirs-in-buffer 2273,118033
(defun mon-get-dir-subdir-default 2306,119683
(defun mon-rename-file-serial 2359,122511
(defun mon-copy-file-path 2404,124386
(defun mon-get-buffers-directories 2484,128320
(defun mon-proc-buffers-directories 2535,131048
(defun mon-get-proc-buffers-directories 2594,133698
(defun mon-dir-build-list 2671,137401

naf-mode/naf-mode-publications-periodicals-english.el,323
(defvar *naf-mode-publications-periodicals-english-xrefs*83,2717
(defvar *naf-publications-periodicals-english* 101,3540
(defconst naf-mode-publications-periodicals-english419,12225
(defvar *naf-publications-periodicals-english-one-word* 434,13035
(defconst naf-mode-publications-periodicals-english-one-word455,13428

naf-mode/naf-mode-db-flags.el,514
(defvar *naf-mode-db-flags-xrefs* 144,4858
(defconst naf-mode-timestamp-flag 165,5594
(defconst naf-mode-accessed-by-flag197,6949
(defconst naf-mode-url-flag 245,8889
(defconst naf-mode-url-wrapper-flag 275,10129
(defconst naf-mode-db-numbers-flag293,11062
(defconst naf-mode-db-field-flags-bnf349,13314
(defconst naf-mode-db-field-flags370,14276
(defvar naf-alternate-name-flags384,14890
(defconst naf-mode-alternate-name-flags 408,16166
(defvar *naf-x-of*425,16928
(defconst *naf-mode-x-of*461,18610

naf-mode/mon-jg-directory-creator.el,173
(defvar *mon-jg-file-template* 118,3646
(defun* mon-make-jg-dir-in-path 151,5042
(defun mon-write-jg-file-in-path 247,9812
(defun mon-format-jg-file-for-write 272,11118

naf-mode/naf-mode-xrefs.el,80
(defgroup naf-mode-xrefs 115,3367
(defcustom *naf-mode-xref-of-xrefs*127,3831

naf-mode/mon-utils.el,1773
(defgroup mon-base 469,25850
(defgroup mon-xrefs 485,26420
(defvar *mon-utils-post-load-requires* 542,29405
(defcustom *mon-xrefs-xrefs*608,31829
(defcustom *mon-default-comment-start* 641,33770
(defcustom *mon-default-comment-divider* 679,35799
(defcustom *mon-timestamp-cond* 693,36449
(defvar *mon-recover-nil-t-default-plist* 707,37180
(defun mon-recover-nil-t-default-plist 722,38009
(defmacro mon-check-feature-for-loadtime 775,40972
(defun mon-utils-require-features-at-loadtime 829,43665
(defun mon-after-mon-utils-loadtime 856,45011
(defun mon-match-at-point 948,50524
(defun mon-looking-back-p 986,52126
(defun mon-string-read-match-string 1025,53845
(defun mon-view-help-source 1070,56044
(defun mon-map-obarray-symbol-plist-props 1100,57418
(defun mon-escape-lisp-string-region 1169,61475
(defun mon-unescape-lisp-string-region 1201,62745
(defun mon-quote-sexp 1223,63665
(defun mon-toggle-eval-length 1247,64556
(defun mon-pretty-print-sexp-at-point 1288,66440
(defun mon-princ-cb 1351,69088
(defun mon-eval-sexp-at-point 1365,69689
(defun mon-eval-print-last-sexp 1393,70820
(defun mon-eval-expression 1406,71307
(defun mon-extend-selection 1442,72920
(defun mon-list-fonts-display 1469,73831
(defun mon-font-at-point 1520,76040
(defun mon-semnav-up 1533,76563
(defun mon-show-columns 1555,77203
(defun mon-nuke-and-eval 1591,78929
(defun mon-unbind-defun 1625,80436
(defun mon-unbind-symbol 1638,81044
(defun mon-unbind-function 1651,81654
(defun mon-unbind-command 1661,82126
(defun mon-unbind-variable 1671,82592
(defun mon-dump-object-to-file 1693,83662
(defun mon-byte-compile-and-load 1725,85220
(defun mon-compile-when-needed 1744,86081
(defun mon-load-or-alert 1772,87616
(defun mon-erc-query-user 1795,88715

naf-mode/mon-window-utils.el,522
(defgroup mon-window-utils 146,5023
(defcustom *mon-window-utils-xrefs*159,5497
(defun mon-frame-live-visible-graphic-p 180,6547
(defun mon-map-windows->plist 209,8061
(defun mon-twin-horizontal 281,11874
(defun mon-twin-vertical 291,12208
(defun mon-toggle-menu-bar 302,12524
(defun mon-scratch 318,13196
(defun mon-switch-to-messages 340,14196
(defun mon-kill-completions 349,14544
(defun mon-delete-completion-window 362,14999
(defun mon-temp-buffer-show-finish 395,16919
(defun mon-flip-windows 416,18071

naf-mode/naf-mode-publications-periodicals-intnl.el,177
(defvar *naf-mode-publications-periodicals-intnl-xrefs*98,3220
(defvar *naf-publications-periodicals-intnl*117,4073
(defconst naf-mode-publications-periodicals-intnl175,6958

naf-mode/mon-doc-help-char-encoding-lossage.el,878
(defgroup mon-doc-help-char-encoding-lossage 139,4526
(defun mon-make-encoding-position-lossage-table 154,5163
(defcustom *mon-doc-help-char-encoding-lossage-xrefs*196,7574
(defcustom *8859-1-8859-15-lossage*224,9000
(defcustom *8859-1-8859-15-lossage-rules*255,10839
(defcustom *cp1252-8859-15-lossage*270,11491
(defcustom *cp1252-8859-15-lossage-rules*304,13650
(defcustom *cp1252-8859-1-lossage*321,14401
(defcustom *cp1252-8859-1-lossage-rules*351,16287
(defun mon-get-encoding-codepoint 368,17110
(defun mon-get-encoding-position-lossage 431,21224
(defun mon-get-encoding-point-hist 472,23934
(defun mon-get-encoding-map-results 509,25931
(cl-defun mon-get-encoding-point-hist-map-plists 541,27554
(defun mon-help-cp1252-iso-8859-1-lossage 587,30146
(defun mon-help-iso-8859-1-8859-15-lossage 615,31617
(defun mon-help-cp1252-iso-8859-15-lossage 641,33005

naf-mode/mon-word-count-utils.el,452
(defun mon-get-syntax-at 121,3360
(defun mon-get-syntax-class-at 146,4593
(defun mon-line-test-content 177,5921
(defun mon-word-get-next 308,14299
(defun mon-word-get-list-in-buffer 337,15349
(defun mon-word-reverse-region 391,17844
(defun mon-word-iterate-over 433,19527
(defun mon-word-count-analysis 463,20865
(defun mon-word-count-occurrences 503,22941
(defun mon-word-count-region 612,29145
(defun mon-word-count-chars-region 629,29809

naf-mode/naf-mode-db-fields.el,252
(defconst naf-mode-delim 119,4858
(defconst naf-mode-comment-delim 132,5437
(defconst naf-mode-name-divider 145,6073
(defconst naf-mode-db-entry 200,7738
(defconst naf-mode-field-names-bnf434,15812
(defconst naf-mode-db-field-flags-bnf 464,17237

naf-mode/mon-bzr-utils.el,351
(defgroup mon-bzr-utils 118,3504
(defcustom *mon-bzr-utils-xrefs* 136,4182
(defun mon-help-bzr-topics 180,6033
(defun mon-help-bzr-usage 307,13082
(defun mon-help-bzr-aliases 354,15194
(defun mon-help-bzr-init 383,16092
(defun mon-bzr-log-last 615,24356
(defvar *mon-hgignore-template* 627,24868
(defun mon-insert-hgignore-template 779,29537

naf-mode/naf-mccarthy-facts.el,454
(defun facts 22,1143
(defun period 237,10612
(defun rot 243,10775
(defun mvmult 248,10916
(defun vplus 252,11038
(defun vminus 256,11172
(defun scap 260,11311
(defun svmult 264,11440
(defun addup 267,11542
(defconst zerovec 273,11652
(defun length 276,11737
(defconst Imatrix 278,11806
(defun smmult 280,11867
(defun mplus 283,11964
(defun mminus 286,12076
(defun mmult 289,12191
(defun multiplyup 294,12381
(defun wind-power 337,13431

naf-mode/naf-mode-city-names-us.el,79
(defvar *naf-city-names-us*92,3338
(defconst naf-mode-city-names-us 209,5408

naf-mode/mon-doc-help-pacman.el,199
(defvar *regexp-clean-pacman-Q* 113,3498
(defun mon-help-pacman-Q 153,5861
(defvar *regexp-clean-pacman-S* 271,11918
(defun mon-help-pacman-S 316,14717
(defun mon-help-pacman-commands 453,21997

naf-mode/naf-mode-state-names.el,83
(defvar *naf-mode-state-to-postal*82,2964
(defconst naf-mode-state-names146,4813

naf-mode/mon-boxcutter.el,755
(defgroup mon-boxcutter 247,10015
(defcustom *boxcutter-conversion-program* 263,10779
(defcustom *boxcutter-path* 285,12195
(defcustom *boxcutter-captures* 311,13389
(defcustom *boxcutter-title-bar-vig* 335,14449
(defcustom *boxcutter-counter* 354,15249
(defcustom *boxcutter-tstamp* 363,15603
(defvar *boxcutter-captured-last* 374,16055
(defun boxcutter-gen-tstamp 383,16506
(defun boxcutter-incr-cntr 394,16947
(defun boxcutter-mkdir-loadtime 411,17645
(defun boxcutter-gen-fname 429,18602
(defun boxcutter-big-n-small 468,20644
(defun boxcutter-get-win-coords 499,22170
(defun boxcutter-get-frame-coords 552,24803
(defun* boxcutter-capture 595,26902
(defun boxcutter-capture-set-crop 671,30635
(defun boxcutter-call-convert 687,31267

naf-mode/mon-iptables-vars.el,39
(defconst *mon-iptables-alst*117,3468

naf-mode/mon-env-proc-utils.el,567
(defgroup mon-env-proc-utils 137,4621
(defcustom *mon-env-proc-utils-xrefs* 152,5234
(defun mon-get-system-specs 176,6627
(defun mon-get-env-vars-symbols 211,8209
(defun mon-get-env-vars-strings 244,9906
(defun mon-get-env-vars-emacs 290,12105
(defun mon-get-sys-proc-list 366,16317
(defun mon-insert-sys-proc-list 391,17448
(defun mon-get-proc-w-name 411,18257
(defun mon-get-process 453,20472
(defun mon-escape-string-for-cmd 500,22706
(defun mon-terminal 520,23743
(defun mon-cmd 539,24719
(defun mon-firefox 558,25626
(defun mon-conkeror 569,26047

naf-mode/naf-mode-english-roles.el,145
(defgroup naf-mode-english-roles 90,3035
(defconst naf-mode-english-roles-primary206,5790
(defconst naf-mode-english-roles-secondary626,15235

naf-mode/mon-doc-help-utils-supplemental.el,275
(defun mon-comment-divider 172,6815
(defun mon-insert-lisp-testme 202,8049
(defvar *regexp-symbol-defs* 289,12059
(defun mon-string-index 343,14796
(defun mon-string-upto-index 364,15910
(defun mon-string-after-index 378,16624
(defun mon-string-justify-left 399,17833

naf-mode/naf-skeletons.el,229
(define-skeleton book-naf128,4489
(define-skeleton artist-naf202,5762
(define-skeleton people-naf253,6589
(define-skeleton author-naf307,7354
(define-skeleton brand-naf357,8062
(define-skeleton benezit-naf-template417,8939

naf-mode/mon-string-utils.el,1273
(defgroup mon-string-utils 173,6559
(defcustom *mon-string-utils-xrefs* 185,7033
(defun mon-string-split 215,8717
(defun mon-string-spread 276,12313
(defun mon-string-justify-left 377,17246
(defun mon-string-fill-to-col 483,22715
(defun mon-string-index 502,23520
(defun mon-string-upto-index 536,25006
(defun mon-string-after-index 549,25700
(defun mon-string-sort-descending 564,26445
(defun mon-string-position 583,27419
(defun mon-string-has-suffix 597,28149
(defun mon-string-chop-spaces 659,31734
(defun mon-string-ify-list 681,32786
(defun mon-string-split-on-regexp 703,33743
(defun mon-string-replace-char 731,35089
(defun mon-string-sub-old->new 752,36143
(defun mon-string-repeat 791,38215
(defun mon-string-to-hex-list-cln-chars 829,39816
(cl-defun mon-string-to-hex-string 856,41228
(defun mon-string-from-hex-list 905,43721
(defun mon-string-to-hex-list 939,45378
(defun mon-string-infix 982,47532
(defun mon-string-explode 1016,49241
(defun mon-string-permute 1034,50023
(defun mon-string-permute-line 1077,52000
(defun mon-string-splice-sep 1116,53581
(defun mon-string->strings-splice-sep 1191,57439
(defun mon-string-to-regexp 1229,59430
(defun mon-string-match-in-list-p 1265,61136
(defun mon-string-convert-loc 1283,61858

naf-mode/mon-get-mon-packages.el,68
(defvar *mon-el-library*94,2840
(defun mon-wget-mon-pkgs 240,6951

naf-mode/naf-mode-dates.el,978
(defgroup naf-mode-dates 143,4823
(defcustom *naf-mode-date-xrefs* 155,5288
(defcustom naf-weekday-alist188,6385
(defcustom naf-month-abbrev-alist 233,8088
(defcustom naf-mode-english-dates299,10908
(defcustom naf-mode-english-days355,13083
(defcustom naf-mode-french-dates391,14359
(defcustom naf-mode-french-days442,16337
(defcustom naf-mode-simple-date 475,17370
(defcustom naf-mode-year-range490,18014
(defcustom naf-mode-date-string518,18938
(defcustom naf-mode-lifespan 550,20107
(defcustom naf-mode-circa-dates565,20795
(defcustom naf-mode-benezit-date 600,22037
(defcustom naf-active-date-flags 614,22530
(defcustom naf-mode-active-date638,23098
(defcustom naf-active-date-flags-paren 654,23694
(defcustom naf-mode-active-date-flags-paren 682,24299
(defcustom naf-active-date-flags-solo 701,25202
(defcustom naf-mode-active-date-flags-solo 715,25638
(defcustom *regexp-french-date-prefix* 730,26221
(defcustom *regexp-french-date-siecle* 763,27077

naf-mode/naf-mode-students-of-julian.el,1202
(defvar *naf-mode-students-of-julian-xrefs* 109,3843
(defvar *naf-students-of-julian-french*133,4705
(defconst naf-mode-students-of-julian-french 206,9120
(defvar *naf-students-of-julian-us*228,9940
(defconst naf-mode-students-of-julian-us266,11643
(defvar *naf-students-of-julian-germany*287,12408
(defconst naf-mode-students-of-julian-germany302,12960
(defvar *naf-students-of-julian-brazil*324,13784
(defconst naf-mode-students-of-julian-brazil335,14203
(defvar *naf-students-of-julian-canada*356,15012
(defconst naf-mode-students-of-julian-canada376,15833
(defvar *naf-students-of-julian-misc*397,16640
(defconst naf-mode-students-of-julian-misc435,19653
(defvar *naf-students-of-julian-finland*456,20440
(defconst naf-mode-students-of-julian-finland465,20765
(defvar *naf-students-of-julian-norway*486,21586
(defconst naf-mode-students-of-julian-norway 498,22039
(defvar *naf-students-of-julian-uk*519,22854
(defconst naf-mode-students-of-julian-uk531,23277
(defvar *naf-students-of-julian-russia*552,24041
(defconst naf-mode-students-of-julian-russia564,24529
(defvar *naf-students-of-julian-switzerland*585,25338
(defconst naf-mode-students-of-julian-switzerland597,25770

naf-mode/naf-mode-institution.el,674
(defvar *naf-mode-institution-xrefs* 94,3099
(defconst naf-mode-benezit-museum-short 116,3956
(defvar *naf-institution-museum-names*136,4812
(defconst naf-mode-institution-museum-names 180,6215
(defvar *naf-institution-names-anchored*200,6948
(defconst naf-mode-inst-names-anchored 303,9598
(defvar *naf-institution-names-generic* 320,10395
(defconst naf-mode-institution-names-generic 351,11276
(defvar *naf-academy-name* 367,11929
(defconst naf-mode-academy-names 395,13087
(defvar *naf-school-names-intnl*415,13790
(defconst naf-mode-school-names-intnl 455,15834
(defvar *naf-school-names-english*472,16553
(defconst naf-mode-school-names-english 511,17987

naf-mode/mon-tramp-utils.el,638
(defvar *mon-tramp-mode-line-buffer-ident* 262,10349
(defvar *mon-tramp-putty-private-keys* 293,11921
(defvar *mon-tramp-paths-alist* 314,12998
(defvar *mon-tramp-default-methods-l* 342,14625
(defun mon-tramp-plink-example 386,17323
(defun mon-tramp-add-default-methods 417,19035
(defun mon-tramp-utils-loadtime 441,20351
(defun mon-tramp-putty-conf-status 451,20744
(defun mon-tramp-add-pageant-keys 483,22350
(defun mon-ssh-add-p 516,23898
(defun mon-tramp-read-conns 534,24666
(defun mon-tramp-connect 566,26240
(defun mon-tramp-disconnect 581,26857
(defun mon-tramp-su-local 595,27448
(defun mon-tramp-syntax 622,28548

naf-mode/mon-insertion-utils.el,2630
(defgroup mon-insertion-utils 211,9226
(defcustom *mon-insertion-utils-xrefs*225,9733
(defun mon-insert-dirs-in-path 264,11915
(defun mon-insert-file-in-dirs 293,13406
(defun mon-insert-whitespace 371,17469
(defun mon-insert-newlines 395,18654
(defun mon-insert-string-n-fancy-times 426,20206
(defun mon-insert-string-n-times 563,27419
(defun mon-line-number-region 609,29414
(defun mon-string-incr 641,30923
(defun mon-insert-string-ify 795,39354
(defun mon-insert-unicode 813,40246
(defun mon-split-designator 905,45641
(defun mon-comment-divider 928,46512
(defun mon-comment-divider-to-col 957,47965
(defun mon-comment-lisp-to-col 1059,53587
(defun mon-comment-divider-to-col-four 1079,54624
(defun mon-insert-php-comment-divider 1096,55272
(defun mon-insert-user-name-cond 1111,55965
(defun mon-insert-system-type-cond 1144,57552
(defun mon-insert-regexp-template 1165,58507
(defun mon-insert-regexp-template-yyyy 1184,59415
(defun mon-lisp-CL-package-complete 1233,61770
(defun mon-insert-lisp-CL-mode-line-template 1269,63555
(defun mon-insert-lisp-CL-file-template 1374,69173
(defun mon-insert-lisp-CL-package-template 1455,73400
(defun mon-insert-lisp-CL-eval-when 1546,78621
(defun mon-insert-lisp-CL-debug 1589,80598
(defun mon-insert-lisp-doc-eg-xref 1621,82166
(defun mon-insert-lisp-fundoc-eg-xref 1709,86727
(defun mon-insert-lisp-CL-jump-doc 1748,88628
(defun mon-insert-lisp-CL-eol-tilde 1879,95783
(defun mon-insert-lisp-CL-eol-tilde-no-at 1904,96854
(defun mon-insert-lisp-stamp 1929,97961
(defun mon-build-copyright-string 1964,99840
(defun mon-insert-copyright 2054,104879
(defcustom *mon-github-username-for-pathname* 2126,108485
(defcustom *mon-github-repository-name-for-pathname* 2145,109461
(defcustom *mon-github-repository-default-pathname* 2165,110410
(defcustom *mon-github-pathname-url* 2199,112447
(defun mon-build-github-default 2236,114383
(defun mon-build-github-repo-path-defaults 2276,116566
(defun mon-insert-file-template 2363,121747
(defvar *mon-gnu-license-header* 2474,127372
(defvar *mon-gnu-license-header-emacs* 2510,129171
(defvar *mon-mit-license-header* 2532,130199
(defcustom *mon-bsd-license-header-COPYRIGHT-HOLDER* 2575,132436
(defvar *mon-bsd-license-header* 2594,133459
(defvar *mon-gnu-license-header-gfdl* 2649,136519
(defun mon-build-copyright-string-license 2682,138316
(defun mon-insert-gnu-licence 2738,141320
(defun mon-insert-gnu-licence-gfdl 2769,142796
(defun mon-insert-defclass-template 2809,144881
(defun mon-insert-texi-template 2917,150123
(defun mon-comput-45 3024,153968
(defun mon-comput-33 3053,154988

naf-mode/mon-text-property-utils.el,1951
(defsubst mon-insert-w-text-properties 175,7398
(cl-defun mon-get-text-property-intervals 184,7786
(defun %mon-set-buffer-substring 323,16209
(defun %mon-set-buffer-substring-no-properties 349,17484
(defsetf buffer-substring-no-properties 358,18015
(defun mon-remove-text-property 371,18711
(defun mon-remove-single-text-property 385,19530
(defun mon-nuke-text-properties-region 413,21008
(defun mon-get-face-at-point 440,22362
(defun mon-get-text-properties-region-prop 472,23966
(defun mon-get-text-properties-region-prop-list 491,24951
(defun mon-search-text-properties-prop 517,26435
(defun mon-get-text-properties-region-to-kill-ring 542,27501
(defun mon-get-text-properties-category 571,28837
(defun mon-list-all-properties-in-buffer 589,29674
(defun mon-nuke-text-properties-buffer 619,31282
(defun mon-get-next-face-property-change 646,32960
(defun mon-get-next-face-property-change-if 679,34754
(defun mon-get-text-properties-region 715,36531
(defun mon-get-text-properties-print 745,38285
(defun mon-get-text-properties-read-temp 765,39190
(defun mon-get-text-properties-elisp-string-pp 793,40526
(defun mon-get-text-properties-elisp-string 828,42120
(defun mon-get-text-properties-parse-prop-val-type-chk 862,43876
(defun mon-get-text-properties-parse-buffer 908,45875
(defun mon-get-text-properties-parse-sym 970,49225
(cl-defun mon-get-text-properties-parse-buffer-or-sym 1006,51125
(defun mon-get-text-properties-map-ranges 1066,54495
(defun mon-get-text-properties-map-ranges-string 1090,55619
(defun mon-get-text-property-bounds 1122,57267
(defun mon-get-text-property-remove-all 1149,58713
(defun mon-overlay-flash-region 1173,59726
(defun mon-get-overlays-region 1222,62504
(defun mon-get-overlays-region-map-props 1267,64476
(defun mon-get-overlays-map-props 1317,66858
(defun mon-get-overlays-buffer 1353,68616
(defun mon-set-overlay-range 1379,69904
(defun mon-nuke-overlay-buffer 1399,70928

naf-mode/mon-doc-help-proprietary.el,301
(defvar *mon-compromise-my-ms-W32-virginity* 67,1924
(defvar *mon-help-w32-CMD-commands* 76,2483
(defun mon-help-w32-cmd-commands 88,3210
(defun mon-bind-doc-help-proprietery-vars-at-loadtime 113,4539
(defun mon-help-w32-shell-execute 153,6875
(defvar *mon-help-w32-CMD-commands-TEMP* 382,19005

naf-mode/ebay-template-mode/ebay-template-mode.el,613
(defconst *mon-ebay-template-mode-version* 154,5073
(defgroup ebay-template-mode 160,5339
(defgroup ebay-template-mode-faces 170,5665
(defcustom *mon-ebay-account-ids* 181,6021
(defcustom *mon-ebay-comment-prefix* 197,6706
(defvar *mon-ebay-field-entry* 206,7039
(defvar *mon-ebay-field-delims* 251,9125
(defvar *mon-ebay-line-delims* 268,9961
(defvar *mon-ebay-template-font-lock-keywords* 317,12156
(defvar *mon-ebay-template-mode-map*345,13594
(defvar *mon-ebay-template-mode-hook* 388,15935
(defvar *mon-ebay-template-mode-syntax-table*399,16267
(define-derived-mode ebay-template-mode 417,17011

naf-mode/ebay-template-mode/ebay-template-html-utils.el,735
(defvar xmlgen-escape-attribute-vals 165,4943
(defvar xmlgen-escape-elm-vals 169,5068
(defvar xmlgen-escapees173,5188
(defun xmlgen 182,5435
(defun xmlgen-string-escape 235,7301
(defun xmlgen-attr-to-string 247,7709
(defun xmlgen-extract-plist 268,8510
(defgroup html-lite 390,13098
(defcustom html-lite-doctype 396,13263
(defconst html-lite-version 408,13833
(defconst html-lite-doctype-alist411,13904
(defmacro html-lite-define-elements 436,15001
(defun html-lite-make-element 456,15708
(defmacro with-html-lite-header 489,16602
(defun html-lite-escape-string 501,16943
(defun html-doctype 508,17243
(defun html-lite-make-name 517,17592
(defun html-lite-write-tree 522,17737
(defun html-lite-browse-tree 536,18119

naf-mode/ebay-template-mode/ebay-template-tools-ewiki.el,1360
(defun mon-insert-ebay-template 86,2600
(defvar *mon-ebay-template* 107,3613
(defun mon-choose-ebay-delims 181,6239
(defun mon-choose-ebay-account 199,7360
(defun mon-make-html-tree 211,7890
(defun mon-insert-ebay-html-tree 225,8317
(defun mon-make-ebay-dir-list 234,8756
(defun mon-make-ebay-dir-list-2 253,9555
(defun mon-insert-ebay-dirs 307,11936
(defun mon-insert-ebay-dbc-file 357,14621
(defun mon-check-ebay-template-path 375,15541
(defun mon-insert-ebay-dbc-template 462,21635
(defun mon-get-ebay-bmps-in-dir 508,24112
(defalias 'get-bmps-in-dir get-bmps-in-dir525,24945
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list526,24999
(defun mon-get-nefs-in-dir 534,25338
(defalias 'get-nefs-in-dir get-nefs-in-dir550,26168
(defun mon-insert-ebay-bmps-in-file 554,26331
(defun mon-get-ebay-jpgs-list 573,27068
(defun mon-insert-ebay-jpgs-in-file 600,28205
(defun mon-get-ebay-jpgs-count 619,28960
(defun mon-get-ebay-bmps-count 631,29397
(defun mon-get-ebay-img-count-verify 643,29832
(defun mon-ebay-field-trigger 680,31408
(defun mon-insert-ebay-field-trigger-r 718,33329
(defun mon-insert-ebay-field-trigger-l 731,33754
(defun mon-insert-ebay-field-trigger-l-and-r 744,34182
(defun mon-insert-ebay-photo-per-scan-descr 764,34869
(defun mon-ebay-image-linkify 790,36162
(defun mon-ebay-image-linkify-lite 841,38415

naf-mode/ebay-template-mode/ebay-template-tools.el,991
(defvar *mon-html-ebay-template* 150,5510
(defvar *mon-html-domain-for-ebay-template*160,5844
(defvar *mon-ebay-image-linkify-templates*173,6456
(defun mon-insert-ebay-template 187,7078
(defvar *mon-ebay-template* 223,9061
(defun mon-choose-ebay-delims 304,12056
(defun mon-choose-ebay-account 324,13354
(defun mon-make-html-tree 341,14155
(defun mon-insert-ebay-html-tree 360,14927
(defun mon-make-ebay-dir-list 372,15523
(defun mon-make-ebay-dir-list-2 396,16574
(defun mon-insert-ebay-dirs 447,19018
(defun mon-insert-ebay-dbc-file 493,21502
(defun mon-check-ebay-template-path 513,22569
(defun mon-insert-ebay-dbc-template 603,28870
(defun mon-ebay-field-trigger 657,31715
(defun mon-insert-ebay-field-trigger-r 699,33792
(defun mon-insert-ebay-field-trigger-l 715,34416
(defun mon-insert-ebay-field-trigger-l-and-r 731,35040
(defun mon-insert-ebay-photo-per-scan-descr 753,35870
(defun mon-ebay-image-linkify 779,37209
(defun mon-ebay-image-linkify-lite 834,40089

naf-mode/naf-mode-events.el,605
(defvar *naf-mode-events-xrefs* 102,3452
(defvar *naf-art-events-generic*211,7612
(defconst naf-mode-art-events-generic 224,8185
(defvar *naf-art-events-generic-french*236,8751
(defconst naf-mode-art-events-generic-french 254,9282
(defvar *naf-art-events-french*266,9904
(defconst naf-mode-art-events-french 295,11422
(defvar *naf-art-events-generic-english*308,11987
(defconst naf-mode-art-events-generic-english 337,12747
(defvar *naf-art-events-english*350,13380
(defconst naf-mode-art-events-english 380,14927
(defvar *naf-world-events*394,15498
(defconst naf-mode-world-events 416,16049

naf-mode/mon-cl-compat.el,5132
(defun cl::cl-simple-expr-p 262,10553
(defun cl::cl-simple-exprs-p 277,11144
(defun cl::cl-safe-expr-p 285,11365
(defun cl::cl-const-expr-p 298,11938
(defun cl::cl-const-exprs-p 309,12305
(defun cl::cl-const-expr-val 316,12497
(defun cl::cl-expr-access-order 321,12674
(defun cl::cl-expr-contains 332,13032
(defun cl::cl-expr-contains-any 343,13385
(defun cl::cl-expr-depends-p 350,13626
(defun cl::gensym 359,13903
(defun cl::gentemp 371,14346
(defun cl::cl-defun-expander 382,14792
(defun cl::cl-do-proclaim 390,15024
(defun cl::cl-defsubst-expand 427,16604
(defun cl::cl-transform-function-property 467,18714
(defun cl::cl-transform-lambda 483,19434
(defun cl::cl-do-arglist 539,22248
(defun cl::cl-arglist-args 673,27344
(defun cl::cl-compile-time-too 687,27886
(defun cl::cl-byte-compile-block 703,28547
(defun cl::cl-byte-compile-throw 718,29213
(defun cl::compiler-macroexpand 732,29742
(defun cl::cl-byte-compile-compiler-macro 748,30356
(defun cl::cl-make-type-test 755,30614
(defun cl::reduce 793,32319
(defun cl::fill 814,33158
(defun cl::replace 834,33786
(defun cl::remove* 877,35589
(defun cl::remove-if 923,37339
(defun cl::remove-if-not 932,37721
(defun cl::delete* 941,38115
(defun cl::delete-if 985,39748
(defun cl::delete-if-not 993,40100
(defun cl::remove-duplicates 1001,40464
(defun cl::delete-duplicates 1008,40737
(defun cl::cl-delete-duplicates 1014,40995
(defun cl::substitute 1055,42693
(defun cl::substitute-if 1077,43575
(defun cl::substitute-if-not 1086,43994
(defun cl::nsubstitute 1095,44425
(defun cl::nsubstitute-if 1129,45826
(defun cl::nsubstitute-if-not 1137,46217
(defun cl::find 1145,46620
(defun cl::find-if 1154,46975
(defun cl::find-if-not 1162,47285
(defun cl::position 1170,47607
(defun cl::cl-position 1179,48023
(defun cl::position-if 1201,48844
(defun cl::position-if-not 1209,49175
(defun cl::count 1217,49518
(defun cl::count-if 1232,50161
(defun cl::count-if-not 1239,50422
(defun cl::mismatch 1246,50695
(defun cl::search 1277,52110
(defun cl::sort* 1304,53281
(defun cl::stable-sort 1319,53866
(defun cl::merge 1327,54180
(defun cl::member* 1345,54986
(defun cl::member-if 1360,55529
(defun cl::member-if-not 1368,55823
(defun cl::cl-adjoin 1377,56191
(defun cl::assoc* 1385,56463
(defun cl::assoc-if 1401,57050
(defun cl::assoc-if-not 1408,57305
(defun cl::rassoc* 1415,57575
(defun cl::rassoc-if 1429,58096
(defun cl::rassoc-if-not 1436,58353
(defun cl::union 1443,58625
(defun cl::nunion 1464,59494
(defun cl::intersection 1475,59980
(defun cl::nintersection 1498,61338
(defun cl::set-difference 1508,61802
(defun cl::nset-difference 1528,62596
(defun cl::set-exclusive-or 1539,63092
(defun cl::nset-exclusive-or 1552,63746
(defun cl::subsetp 1565,64366
(defun cl::subst-if 1580,64904
(defun cl::subst-if-not 1588,65274
(defun cl::nsubst 1596,65656
(defun cl::nsubst-if 1605,66028
(defun cl::nsubst-if-not 1613,66408
(defun cl::sublis 1623,66886
(defun cl::cl-sublis-rec 1632,67266
(defun cl::nsublis 1646,67775
(defun cl::cl-nsublis-rec 1656,68199
(defun cl::tree-equal 1671,68877
(defun cl::cl-tree-equal-rec 1679,69220
(defun cl::cl-set-substring 1692,69622
(defun cl::cl-macroexpand 1707,70186
(defun cl::cl-compiling-file 1726,71061
(defun cl::proclaim 1736,71446
(defun cl::cl-random-time 1743,71691
(defun cl::list* 1750,71927
(defun cl::ldiff 1765,72454
(defun cl::floatp-safe 1776,72817
(defun cl::plusp 1784,73099
(defun cl::minusp 1790,73241
(defun cl::oddp 1797,73423
(defun cl::evenp 1804,73614
(defun cl::subst 1810,73767
(defun cl::cl-do-subst 1821,74297
(defun cl::copy-list 1832,74686
(defun cl::acons 1845,75130
(defun cl::pairlis 1853,75410
(defun cl::mapcar* 1862,75795
(defun cl::subseq 1886,76735
(defun cl::coerce 1914,77719
(defun cl::typep 1932,78441
(defun cl::gcd 1941,78726
(defun cl::lcm 1952,79032
(defun cl::isqrt 1965,79363
(defun cl::floor* 1979,79767
(defun cl::ceiling* 1988,80082
(defun cl::truncate* 1998,80467
(defun cl::round* 2007,80819
(defun cl::mod* 2028,81487
(defun cl::rem* 2035,81681
(defun cl::signum 2042,81880
(defun cl::cl-mapcar-many 2050,82160
(defun cl::map 2085,83215
(defun cl::maplist 2095,83604
(defun cl::cl-mapc 2117,84304
(defun cl::mapl 2128,84647
(defun cl::mapcan 2140,85043
(defun cl::mapcon 2148,85337
(defun cl::some 2156,85628
(defun cl::every 2174,86262
(defun cl::notany 2190,86801
(defun cl::notevery 2198,87075
(defun cl::concatenate 2206,87354
(defun cl::revappend 2217,87770
(defun cl::nreconc 2224,87943
(defun cl::list-length 2231,88119
(defun cl::tailp 2241,88492
(defun cl::get* 2251,88857
(define-compiler-macro cl::get* 2261,89259
(defun cl::cl-set-getf 2271,89511
(defun cl::cl-do-remf 2279,89792
(defun cl::cl-remprop 2287,90072
(defun cl::cl-prettyprint 2301,90573
(defun cl::cl-do-prettyprint 2319,91162
(defvar cl::cl-macroexpand-cmacs 2349,92220
(defvar cl::cl-closure-vars 2350,92258
(defun cl::cl-macroexpand-all 2352,92306
(defun cl::cl-macroexpand-body 2437,96143
(defun cl-prettyexpand 2443,96354
(defun mon-cl-compat-loadtime 2456,96913

naf-mode/naf-mode-nation-french.el,127
(defvar *naf-mode-nation-french-xrefs* 83,2670
(defvar *naf-nation-french*101,3335
(defconst naf-mode-nation-french270,7190

naf-mode/naf-mode-regions.el,95
(defconst naf-mode-region-names-other193,5117
(defconst naf-mode-region-names-french345,8507

naf-mode/naf-mode.el,356
(defgroup naf-mode 209,6415
(defgroup naf-mode-faces 220,6776
(defconst *naf-mode-version* 235,7274
(defcustom *naf-comment-prefix* 241,7559
(defvar naf-font-lock-keywords251,7909
(defvar naf-mode-syntax-table381,16073
(defvar naf-mode-map406,17131
(defun new-naf 887,42903
(defvar naf-mode-hook 908,43856
(define-derived-mode naf-mode 914,44076

naf-mode/mon-lisppaste.el,79
(defcustom *tt--colorize-as* 327,11270
(defun mon-lisppaste-region 336,11564

naf-mode/mon-color-utils.el,715
(defun mon-color-mix 161,5774
(defun mon-color-mix-display 191,7305
(defun mon-defined-colors-without-duplicates 228,9316
(defun mon-rgb-to-hsv 259,10763
(defvar *mon-colorcomp-ewoc* 318,13529
(defvar *mon-colorcomp-data* 320,13566
(defvar *mon-colorcomp-mode-map* 322,13603
(defvar *mon-colorcomp-labels* 324,13644
(defun mon-colorcomp-pp 328,13759
(defun mon-colorcomp 350,14696
(defun mon-colorcomp-mod 387,16233
(defun mon-colorcomp-R-more 403,16963
(defun mon-colorcomp-G-more 413,17408
(defun mon-colorcomp-B-more 422,17852
(defun mon-colorcomp-R-less 431,18295
(defun mon-colorcomp-G-less 440,18736
(defun mon-colorcomp-B-less 449,19179
(defun mon-colorcomp-copy-as-kill-and-exit 460,19698

naf-mode/naf-mode-benezit-flags.el,151
(defconst naf-mode-benezit-section-flag92,3122
(defconst naf-mode-benezit-currency-acronym99,3525
(defvar *naf-mode-benezit-currency-alist*171,6386

naf-mode/mon-mysql-utils.el,1004
(defun mon-cln-pipes-get-field-col 137,4722
(defalias 'mon-mysql-get-field-col mon-mysql-get-field-col206,8336
(defun %subst% 217,8860
(defun mon-cln-pipes 256,10414
(defalias 'mon-mysql-cln-pipes mon-mysql-cln-pipes445,20783
(defun mon-cln-pipes-map-field-pairs 473,21911
(defalias 'mon-mysql-cln-pipes-map-col-field mon-mysql-cln-pipes-map-col-field525,24177
(defun mon-csv-string-to-list 552,25333
(defalias 'mon-mysql-csv-to-list mon-mysql-csv-to-list587,27158
(defun mon-csv-string-map-list 595,27457
(defalias 'mon-mysql-csv-map-list mon-mysql-csv-map-list610,28287
(defun mon-csv-map-col-field-pairs 620,28761
(defalias 'mon-mysql-csv-map-col-field mon-mysql-csv-map-col-field645,29975
(defun mon-csv-split-string 665,30739
(defalias 'mon-mysql-csv-split-string mon-mysql-csv-split-string699,32346
(defvar *regexp-clean-mysql* 704,32549
(defun mon-bind-mysql-help-table-loadtime 737,34299
(defun mon-help-mysql-complete 913,46899
(defun mon-help-mysql-commands 940,48179

naf-mode/google-define-redux.el,2416
(defgroup google-define-redux 209,7933
(defgroup google-define-redux-faces 234,9053
(defcustom *google-define-redux-xrefs* 251,9748
(defcustom *google-define-get-buffer* 299,12292
(defcustom *google-define-buffer-suffix* 317,13125
(defvar *get-google-defined* 336,14051
(defvar *regexp-google-define-headings* 361,15045
(defvar *regexp-google-define-itemized*385,15955
(defvar *regexp-google-define-dictionary-heading-tag*415,17557
(defvar *regexp-google-define-next-url-in-heading*449,18663
(defvar *regexp-google-define-source-ref*495,20298
(defface gg-def-base544,21991
(defface gg-def-delim 560,22681
(defface gg-def-heading578,23423
(defface gg-def-num 591,23983
(defface gg-def-inition604,24569
(defface gg-def-defined620,25362
(defcustom *regexp-google-defined-fontlock*632,25880
(defun google-define-get-command 676,28608
(defun %google-define-verify-query-url-lang-params 735,31550
(defun %google-define-verify-query-url-xref-type-params 755,32435
(defun google-define-clean-string 774,33210
(defun %google-define-clean-term-for-split 818,35691
(defun %google-define-clean-heading-for-replace 838,36720
(defun* google-define-make-query-url 851,37466
(defun google-define-parse-buffer 905,40304
(defun google-define-font-lock 1046,48040
(defun %google-define-set-url-current-object 1078,49831
(defun google-define 1111,51492
(defun google-define-kill-def-buffers 1166,54344
(defun google-define-find-next-heading 1211,56290
(defun google-define-make-heading-replacement 1241,57803
(defun google-define-find-next-url-in-heading 1266,58944
(defun google-define-find-headings 1312,60733
(defun %google-define-find-itemized-regexp-for-search-term 1350,62416
(defun google-define-find-itemized 1373,63234
(defun google-define-parse-related-languages 1402,64177
(defun %google-define-find-next-related-lang-regexp-for-search-term 1425,65107
(defun google-define-find-next-related-language-xref 1473,66425
(defun google-define-related-language-url 1485,67016
(defun google-define-related-language-xref 1514,68635
(defun google-define-button-action 1582,71242
(defun google-define-button-do-xref 1595,71779
(defun google-define-insert-xref-button 1606,72195
(define-button-type 'google-define-buttongoogle-define-button1624,72956
(define-button-type 'google-related-lang-buttongoogle-related-lang-button1632,73190
(defconst *google-define-html-entry-table*1759,79291

naf-mode/mon-line-utils.el,2063
(defgroup mon-line-utils 228,8688
(defcustom *mon-line-utils-xrefs*240,9153
(defun mon-line-get-next 276,11187
(defun mon-line-find-duplicates 297,12104
(defun mon-line-find-duplicates-cln 326,13565
(defun mon-line-previous-duplicate 372,15759
(defun mon-line-count-region 410,17627
(defun mon-line-count-buffer 420,18075
(defun mon-line-count-matchp 460,19998
(defun mon-line-length-max 488,21173
(defun mon-line-strings 513,22130
(defun mon-line-strings-region 568,24047
(defun mon-line-strings-qt-region 620,26058
(defun mon-line-strings-bq-qt-sym-bol 681,29171
(defun mon-line-strings-pipe-bol 744,32707
(defun mon-line-strings-indent-to-col 795,34796
(defun mon-line-indent-from-to-col 876,38425
(defun mon-line-strings-pipe-to-col 951,41975
(defun mon-line-pipe-lines 1002,44477
(defun mon-line-strings-to-conses 1061,46577
(defun mon-line-strings-to-list 1095,47998
(defun mon-line-strings-one-list 1176,52396
(defun mon-line-string-rotate-name 1201,53599
(defun mon-line-string-rotate-namestrings 1244,55976
(defun mon-line-string-unrotate-namestrings 1301,58175
(defun mon-line-string-rotate-namestrings-combine 1376,61454
(defun mon-line-string-insert-chars-under 1431,63610
(defun mon-line-drop-in-words 1477,65885
(defun mon-line-string-incr-padded 1541,69879
(defun mon-line-number-region-incr 1580,71976
(defun mon-line-string-get 1626,74149
(defun mon-line-string-split 1652,75413
(defun mon-spacep 1705,78037
(defun mon-spacep-not-bol 1734,79501
(defun mon-spacep-is-bol 1755,80523
(defun mon-spacep-is-after-eol 1777,81597
(defun mon-spacep-is-after-eol-then-graphic 1795,82536
(defun mon-spacep-at-eol 1824,84085
(defun mon-spacep-first 1845,85183
(defun mon-line-bol-is-eol 1863,85916
(defun mon-line-previous-bol-is-eol 1884,87009
(defun mon-line-next-bol-is-eol 1912,88424
(defun mon-line-eol-is-eob 1936,89538
(defun mon-line-end-or-code-end 1965,90985
(defun mon-backspace 1992,92151
(defun mon-goto-line-25% 2004,92518
(defun mon-goto-line-50% 2017,93129
(defun mon-goto-line-75% 2030,93719

naf-mode/mon-url-utils.el,1709
(defgroup mon-url-utils 201,7788
(defcustom *mon-url-utils-xrefs* 215,8342
(defcustom *mon-url-search-paths* 253,10444
(defcustom *mon-purge-on-its-all-text-on-quit* 297,12653
(defcustom *mon-purge-htmlfontify-dir-on-quit* 318,13549
(defcustom *regexp-hexcolor-keywords* 335,14303
(defun mon-its-all-text-purge-on-quit 365,15693
(defun mon-html-fontify-generate-file-name 416,18591
(defun mon-htmlfontify-dir-purge-on-quit 447,20314
(defun mon-htmlfontify-buffer-to-firefox 495,23305
(defun mon-htmlfontify-region-to-firefox 529,24950
(defun mon-hexcolor-add-to-font-lock 564,26624
(defun mon-url-encode 578,27496
(defun mon-url-decode 602,28643
(defun mon-search-ulan 630,30091
(defun mon-search-ulan-for-name 701,34131
(defun mon-search-wikipedia 710,34489
(defun mon-search-loc 735,35669
(defun mon-search-bnf 752,36529
(defun mon-insert-dbc-link 767,37284
(defun mon-insert-dbc-doc-link 780,37820
(defun mon-wrap-one-url 821,39438
(defun mon-wrap-all-urls 875,42192
(defun mon-wrap-url 922,44644
(defun mon-wrap-span 946,45582
(defun mon-make-html-table-string 971,46324
(defun mon-make-html-table 1000,47561
(defun mon-url-retrieve-to-new-buffer 1026,48716
(defun mon-get-host-address 1046,49849
(defun mon-w3m-dired-file 1080,51259
(defun mon-w3m-kill-url-at-point 1093,51862
(defun mon-get-w3m-url-at-point-maybe 1109,52634
(defun mon-get-w3m-url-at-point 1130,53746
(defun mon-w3m-goto-url-at-point 1154,54900
(defun mon-w3m-read-gnu-lists-nxt-prv 1179,56180
(defcustom *mon-tld-list* 1293,61496
(defsubst mon-tld-tld 1591,73893
(defsubst mon-tld-name 1597,74121
(defun mon-tld-find-tld 1605,74425
(defun mon-tld-find-name 1617,74883
(defun mon-tld 1628,75259

naf-mode/naf-mode-french-roles.el,100
(defconst naf-mode-french-roles-primary182,5653
(defconst naf-mode-french-roles-secondary296,8989

naf-mode/mon-doc-help-css.el,274
(defgroup mon-doc-help-css 140,4686
(defcustom *mon-doc-help-css-xrefs* 153,5202
(defun mon-help-css-check 180,6413
(defun mon-help-css-complete 321,11662
(defun mon-help-css-mode 431,15067
(defun mon-help-css-color 486,16948
(defun mon-help-css-properties 587,20196

naf-mode/mon-button-utils.el,830
(defgroup mon-button-utils 124,3626
(defcustom *mon-button-utils-xrefs* 138,4234
(defvar *mon-default-button-map*159,5093
(define-button-type 'mon-default-button mon-default-button170,5473
(defun mon-button-at-point-p 184,5986
(defun mon-button-at-point-describe-button-plist 224,8139
(defun mon-button-get-plist 244,9140
(defun mon-button-get-plist-props 284,11338
(defalias 'mon-get-button-plist-props mon-get-button-plist-props306,12368
(defun mon-follow-button 314,12626
(defun tt--make-test-button 380,14879
(defvar *naf-button-map* 406,15826
(defface naf-mode-artist-face-inverted420,16285
(define-button-type 'naf-dirnaf-dir436,16743
(define-button-type 'naf-artist naf-artist452,17335
(defun insert-naf-artist-button 479,18325
(defun naf-btn-activate 500,19071
(defun naf-next-label-button 515,19551

naf-mode/naf-mode-intnl-city-names.el,99
(defconst naf-mode-intnl-auction-city-names110,3128
(defconst naf-mode-intnl-city-names390,10688

naf-mode/mon-replacement-utils.el,3554
(defgroup mon-replacement-utils 195,7985
(defcustom *mon-replacement-utils-xrefs* 210,8616
(defun mon-is-naf-mode-p 263,11919
(defvar *naf-mode-buffer-local-llm* 310,14190
(defun mon-is-naf-mode-and-llm-p 318,14567
(defvar *iso-latin-1-approximation* 374,17098
(defun mon-make-iso-latin-1-approximation 381,17493
(defun mon-make-iso-latin-1-approximation-loadtime 401,18439
(defun mon-cln-iso-latin-1 413,19094
(defmacro deftransmogrify 432,20080
(defun mon-transmogrify 448,20752
(defun mon-walk-regexps-in-file 484,22654
(defun %mon-filter-regexp-file-if 510,23901
(defun %mon-filtering-regexp-file-list 526,24448
(defun mon-replace-regexps-in-file-list 535,24856
(defun mon-replace-strings 594,27873
(defun mon-replace-regexp-while 627,29681
(defun mon-replace-string-while 636,30098
(defun mon-regexp-filter 644,30403
(defun mon-string-canonical 665,31377
(defun replace-string-pairs-region3 734,35474
(defun replace-string-pairs-region-no-props 765,36953
(defun mon-replace-string-pairs-region-no-insert 795,38404
(defun mon-get-list-yorp 840,40253
(defun mon-get-list-norp 858,41141
(defun mon-replace-region-regexp-lists-nonint 874,41858
(defun mon-replace-region-regexp-lists 912,43758
(defun mon-regexp-map-match 967,46638
(defun mon-regexp-map-match-in-region 1009,48698
(defvar *mon-regexp-unintern* 1101,53436
(defun mon-replace-unintern-w-query 1171,56665
(defun mon-cln-mail-headers 1267,61218
(defun mon-cln-csv-fields 1413,68431
(defun mon-cln-irc-log-buffer 1583,77090
(defun mon-cln-freenode-log 1615,78427
(defun mon-cln-file-name-string 1640,79387
(defun mon-cln-html-chars 1667,80597
(defun mon-cln-html-tags 1684,81382
(defun mon-cln-xml-escapes 1724,83522
(defun mon-cln-xml<-parsed 1762,85496
(defun mon-cln-tgm-xml-LF 1792,86883
(defun mon-cln-xml<-parsed-strip-nil 1812,87624
(defun mon-cln-up-colon 1842,88995
(defun mon-downcase-hex-values 1913,92529
(defun mon-upcase-commented-lines 1929,93319
(defun mon-zippify-region 1946,94206
(defun mon-toggle-case-query-user 1964,94859
(defun mon-toggle-case-regexp-region 2010,97281
(defun mon-toggle-case-regexp 2053,99595
(defun mon-downcase-regexp-region 2110,102497
(defun mon-upcase-regexp-region 2129,103638
(defun mon-downcase-regexp 2149,104792
(defun mon-upcase-regexp 2171,105902
(defun mon-cln-BIG-whitespace 2196,107124
(defun mon-cln-whitespace 2245,109549
(defun mon-cln-trail-whitespace 2266,110508
(defun mon-kill-whitespace 2286,111336
(defun mon-cln-blank-lines 2301,112003
(defun mon-cln-spc-tab-eol 2322,112946
(defun mon-cln-spc-tab-at-eol-in-region 2344,113969
(defun mon-cln-uniq-lines 2371,115039
(defun mon-exchange-slash-and-backslash 2405,116518
(defun mon-cln-control-M 2425,117537
(defun mon-cln-piped-list 2445,118338
(defun mon-delete-back-up-list 2494,120484
(defun naf-backup-the-list 2536,122498
(defun mon-cln-philsp 2546,122857
(defun mon-cln-ulan 2583,124898
(defun mon-cln-imdb 2663,129228
(defun mon-cln-loc 2685,130205
(defun mon-cln-wiki 2707,131385
(defun mon-cln-bib 2724,132191
(defun mon-num-to-month 2739,132807
(defun mon-num-to-month-whitespace 2758,133612
(defun mon-month-to-num 2777,134540
(defun mon-abr-to-month 2795,135292
(defun mon-trans-cp1252-to-latin1 2814,136111
(defun mon-ital-date-to-eng 2833,136907
(defun mon-defranc-dates 2849,137614
(defun mon-defranc-places 2866,138402
(defun mon-cln-benezit 2885,139257
(defun mon-cln-benezit-fields 2903,140114
(defun mon-replace-common-abbrevs 2919,140815
(defun bug-cln-gilt-group 2942,141979

naf-mode/naf-mode-sql-skeletons.el,309
(define-skeleton mon-insert-sql-item-select89,2995
(define-skeleton mon-insert-sql-item-range-select98,3360
(define-skeleton mon-insert-sql-multiple-items-select108,3761
(defun mon-insert-sql-update 118,4277
(define-skeleton mon-insert-sql-item-update-skeleton158,6147
(define-skeleton item-naf167,7456

naf-mode/mon-name-utils.el,633
(defmacro mon-intern-artist 146,5234
(defun mon-string-rotate-name 166,6082
(defun mon-make-lastname-firstname 213,8052
(defun mon-make-names-list 249,9692
(defun mon-string-csv-rotate 280,11021
(defun mon-string-csv-regexp 295,11672
(defun mon-csv-to-perms 316,12669
(defvar *rotate-text-rotations* 372,15783
(defun mon-rotate-region 397,16861
(defun mon-rotate-string 431,18873
(defun mon-rotate-next 465,20923
(defun mon-rotate-get-rotations-for 501,23016
(defun mon-string-rotate-to-regexp 523,24368
(defun mon-indent-or-rotate 550,25681
(defun mon-make-name-return 571,26616
(defun mon-make-name-lispy 580,26998

naf-mode/naf-mode-nationality-english.el,144
(defvar *naf-mode-nationality-english-xrefs*81,2647
(defvar *naf-nationality-english*100,3387
(defconst naf-mode-nationality-english199,5072

naf-mode/naf-mode-wordfreq.el,43
(defconst *naf-mode-wordfreq-words*33,863

naf-mode/mon-doc-help-mail.el,81
(defun mon-help-mail-functons 142,5004
(defun mon-help-bbdb-functons 392,11142

naf-mode/mon-rectangle-utils.el,347
(defun mon-rectangle-columns 136,4284
(defun mon-rectangle-sum-column 161,5271
(defun mon-rectangle-operate-on 192,6738
(defun mon-rectangle-apply-on-region-points 226,8209
(defun mon-rectangle-downcase 248,9188
(defun mon-rectangle-upcase 257,9611
(defun mon-rectangle-capitalize 265,9933
(defun mon-kill-rectangle-w-beer-belly 278,10651

naf-mode/mon-syntax-utils.el,533
(defun mon-read-unreadable-object 62,2100
(defun mon-get-text-properties-elisp-string2 343,15515
(defun mon-get-text-properties-map-ranges-string-chk-type 416,18665
(defun mon-get-text-properties-map-ranges-compensate 614,29621
(cl-defun mon-get-text-properties-map-ranges-string 636,30435
(defun mon-syn-rng-scn-psn-at 753,34430
(defun mon-syn-parse-args 758,34579
(defun mon-syn-skp-to6 805,36100
(defun mon-syn-rng-scn6 830,37186
(defun rng-scn-2-3 838,37325
(defun mon-lisp-font-lock-syntactic-face-function 918,40083

naf-mode/mon-hash-utils.el,835
(defun mon-hash-get-symbol-name-if 172,6142
(defun mon-hash<-vector 314,12745
(defun mon-hash-make-size 329,13580
(defun mon-hash-from-alist 357,15000
(defun mon-hash-to-alist 377,15931
(defun mon-hash-add-uniquify 396,16827
(defun mon-hash-readlines-file 424,18144
(defun mon-hash-readlines-buffer 444,19098
(defun mon-hash-all-values 477,20655
(defun mon-hash-all-keys 492,21329
(defun mon-hash-to-list 507,22003
(defmacro mon-hash-get-keys 529,22970
(defmacro mon-hash-get-items 571,25126
(defmacro mon-hash-get-values 591,26133
(defmacro mon-hash-get-symbol-keys 611,27149
(defmacro mon-hash-get-string-keys 654,29505
(defmacro mon-hash-has-key 686,30934
(defmacro mon-hash-put-CL 706,31871
(defun mon-hash-describe 745,33686
(defun mon-hash-describe-descend 786,35415
(defun mon-hash-table-complete 810,36316

naf-mode/mon-dir-locals-alist.el,1107
(defgroup mon-dir-locals 148,5070
(defcustom *mon-bind-dir-locals-alist* 164,5751
(defcustom *mon-dir-locals-alist-xrefs*174,6148
(defcustom *mon-HG-root-path* 202,7602
(defcustom *mon-smith-poster-HG-path* 215,8125
(defcustom *mon-CL-scratch-path* 236,9005
(defcustom *bug-HG-path* 252,9642
(defcustom *mon-record-current-directory* 269,10307
(defcustom *emacs2html-temp* 287,11014
(defcustom *mon-html-fontify-file-name-template* 304,11806
(defcustom *mon-artist-naf-path* 319,12569
(defcustom *mon-brand-naf-path* 344,13572
(defcustom *mon-nef-scan-drive* 363,14319
(defcustom *mon-nef-scan-base-path* 375,14907
(defcustom *mon-nef-scan-path* 396,15893
(defcustom *mon-nef-scan-nefs-path* 412,16546
(defvar *mon-nefs_photos_nefs-alist* 433,17588
(defcustom *mon-nef-scan-nef2-path* 444,18215
(defcustom *mon-ebay-images-path* 461,18969
(defcustom *mon-ebay-images-bmp-path* 479,19766
(defcustom *mon-ebay-images-jpg-path* 498,20637
(defcustom *mon-ebay-images-temp-path* 517,21524
(defcustom *mon-ebay-images-lookup-path* 538,22542
(defcustom *mon-buffer-mode-defaults* 569,24202

naf-mode/mon-type-utils.el,1355
(defgroup mon-type-utils 193,7845
(defcustom *mon-type-utils-xrefs*208,8363
(defun mon-function-object-p 264,11152
(defun mon-symbol-cells-bound-p 439,21265
(defun mon-equality-or-predicate 533,26724
(defun mon-booleanp 580,29243
(defun mon-xor 629,31676
(defun mon-bitset-ternary 639,32060
(defun mon-string-or-null-and-zerop 674,33361
(defun mon-string-not-null-nor-zerop 701,34673
(defun mon-zero-or-onep 725,36011
(defun mon-booleanp-to-binary 772,38143
(defun mon-sequence-all-booleanp 825,40498
(defun mon-list-proper-p 962,48827
(defun mon-list-dotted-p 997,50462
(defun mon-list-proper-and-dotted-p 1022,51624
(defun mon-sequence-mappable-p 1049,53132
(defun mon-hash-or-mappable-p 1196,61413
(defvar *mon-bit-table* 1207,61911
(defun mon-get-bit-table 1219,62411
(defun mon-fractionp 1304,66573
(defun mon-integer-and-chacterp 1330,67634
(defun mon-char-code 1340,68046
(defun mon-alpha-char-p 1367,69164
(defun mon-is-digit 1391,70222
(defun mon-is-letter 1430,71862
(defun mon-is-alphanum 1460,73233
(defun mon-is-digit-simp 1488,74645
(defun mon-is-letter-simp 1507,75664
(defun mon-is-alphanum-simp 1526,76528
(defun mon-coerce->char 1554,77833
(defun mon-string-to-symbol 1657,83527
(defun mon-symbol-to-string 1746,88161
(defun mon-string-to-sequence 1781,89871
(defun mon-string-from-sequence 1825,92274

naf-mode/mon-aliases.el,22175
(defalias 'atomp atomp275,11072
(defalias 'line-join-previous line-join-previous279,11200
(defalias 'stringp-or-null stringp-or-null283,11351
(defalias 'char-or-stringp char-or-stringp287,11496
(defalias 'string-or-characterp string-or-characterp291,11651
(defalias 'character-or-strinp character-or-strinp295,11809
(defalias 'shell-command-async shell-command-async299,11966
(defalias 'asynchronous-shell-command asynchronous-shell-command303,12140
(defalias 'menubar-mode menubar-mode307,12293
(defalias 'make-array make-array389,15556
(defalias 'macrop macrop396,15808
(defalias 'mon-string-combine-and-quote mon-string-combine-and-quote414,16331
(defalias 'mon-string-split-and-unquote mon-string-split-and-unquote418,16523
(defalias 'mon-replace-char-in-region mon-replace-char-in-region422,16710
(defalias 'mon-delq-alist mon-delq-alist429,16999
(defalias 'mon-string-set-char-at-idx mon-string-set-char-at-idx436,17314
(defalias 'mon-string-insert-string-at-idx mon-string-insert-string-at-idx447,17918
(defalias 'mon-skip-whitespace mon-skip-whitespace468,18866
(defalias 'mon-save-restricton mon-save-restricton490,19838
(defalias 'mon-sort-alist mon-sort-alist494,19991
(defalias 'mon-macrop mon-macrop502,20315
(defalias 'mon-string-prefix-p mon-string-prefix-p506,20460
(defalias 'mon-list-chop mon-list-chop518,21008
(defalias 'mon-buffer-do-with-undo-disabled mon-buffer-do-with-undo-disabled530,21586
(defalias 'mon-window-get-if-buffer mon-window-get-if-buffer534,21801
(defalias 'mon-buffer-name-print-readably mon-buffer-name-print-readably538,22015
(defalias 'mon-buffer-get-w-mode mon-buffer-get-w-mode542,22225
(defalias 'mon-functionp mon-functionp546,22376
(defalias 'mon-one-or-zerop mon-one-or-zerop550,22526
(defalias 'mon-1-or-0-p mon-1-or-0-p554,22665
(defalias 'mon-1-or-0-p mon-1-or-0-p558,22800
(defalias 'mon-zerop-or-one mon-zerop-or-one562,22943
(defalias 'mon-boolean-to-binary mon-boolean-to-binary566,23100
(defalias 'mon-t-to-1 mon-t-to-1570,23246
(defalias 'mon-true-to-one mon-true-to-one574,23391
(defalias 'mon-nil-to-0 mon-nil-to-0578,23535
(defalias 'mon-false-to-zero mon-false-to-zero582,23686
(defalias 'mon-split-string mon-split-string586,23840
(defalias 'mon-string->symbol mon-string->symbol590,23992
(defalias 'mon-symbol->string mon-symbol->string594,24150
(defalias 'mon-string-from-symbol mon-string-from-symbol598,24319
(defalias 'mon-string<-symbol mon-string<-symbol602,24480
(defalias 'mon-sequence-to-string mon-sequence-to-string606,24648
(defalias 'mon-seq->string mon-seq->string610,24807
(defalias 'mon-string-suffix-p mon-string-suffix-p614,24968
(defalias 'mon-replace-char-in-string mon-replace-char-in-string618,25144
(defalias 'mon-remove-char-in-string mon-remove-char-in-string622,25327
(defalias 'mon-indent-lines-from-to-col mon-indent-lines-from-to-col626,25514
(defalias 'mon-generate-wonky mon-generate-wonky630,25691
(defalias 'mon-hex-list-as-string mon-hex-list-as-string634,25855
(defalias 'mon-string-escape-lisp-region mon-string-escape-lisp-region638,26042
(defalias 'mon-lisp-escape-region mon-lisp-escape-region642,26227
(defalias 'mon-string-unescape-lisp-region mon-string-unescape-lisp-region646,26423
(defalias 'mon-lisp-unescape-region mon-lisp-unescape-region650,26616
(defalias 'mon-string-ify-current-line mon-string-ify-current-line654,26809
(defalias 'with-print-gensyms with-print-gensyms669,27228
(defalias 'nshuffle-vector nshuffle-vector673,27404
(defalias 'with-gensyms with-gensyms678,27659
(defalias 'buffer-exists-p buffer-exists-p685,27966
(defalias 'mon-buffer-print-in-if mon-buffer-print-in-if691,28183
(defalias 'mon-get-text-properties-region->kill-ring mon-get-text-properties-region->kill-ring706,28659
(defalias 'mon-kill-ring-save-w-props mon-kill-ring-save-w-props710,28877
(defalias 'mon-help-face-next-property-change mon-help-face-next-property-change714,29096
(defalias 'mon-remove-text-with-property mon-remove-text-with-property718,29304
(defalias 'mon-remove-text-properties-region-all mon-remove-text-properties-region-all722,29523
(defalias 'mon-remove-all-text-properties-region mon-remove-all-text-properties-region726,29749
(defalias 'write-string write-string741,30195
(defalias 'mon-prin1-char->?char mon-prin1-char->?char746,30363
(defalias 'buffer-narrowed-p buffer-narrowed-p768,31215
(defalias 'get-buffer-window-if get-buffer-window-if772,31400
(defalias 'goto-line-25% goto-line-25%776,31576
(defalias 'goto-line-50% goto-line-50%780,31738
(defalias 'goto-line-75% goto-line-75%784,31900
(defalias 'mon-buffer-end mon-buffer-end790,32098
(defalias 'mon-get-hidden-buffers mon-get-hidden-buffers794,32247
(defalias 'mon-help-hidden-buffers mon-help-hidden-buffers798,32419
(defalias 'mon-buffer-get-hidden mon-buffer-get-hidden802,32588
(defalias 'mon-longlines-mode-p mon-longlines-mode-p806,32756
(defalias 'mon-buffer-append-to mon-buffer-append-to810,32926
(defalias 'mon-buffer-make-shell mon-buffer-make-shell814,33091
(defalias 'mon-buffer-get-shell mon-buffer-get-shell818,33256
(defalias 'mon-kill-hidden-buffer-if mon-kill-hidden-buffer-if822,33418
(defalias 'mon-buffer-get-hidden-if mon-buffer-get-hidden-if826,33599
(defvaralias '*mon-help-hidden-buffers-known* *mon-help-hidden-buffers-known*831,33814
(defalias 'next-almost-prime next-almost-prime846,34264
(defalias 'mon-get-next-almost-prime mon-get-next-almost-prime852,34492
(defalias 'mon-rectangle-kill-w-longest-line mon-rectangle-kill-w-longest-line867,34958
(defalias 'mon-line-keep-match mon-line-keep-match882,35397
(defalias 'mon-line-delete-match mon-line-delete-match886,35553
(defalias 'mon-line-count-match mon-line-count-match890,35709
(defalias 'mon-line-join-previous mon-line-join-previous894,35866
(defalias 'mon-line-same-p mon-line-same-p899,36050
(defalias 'mon-get-window-plist mon-get-window-plist914,36468
(defalias 'mon-window-map-active-to-plist mon-window-map-active-to-plist918,36653
(defalias 'mon-buffer-get-scratch mon-buffer-get-scratch922,36832
(defalias 'mon-buffer-get-messages mon-buffer-get-messages926,36994
(defalias 'mon-buffer-kill-completions mon-buffer-kill-completions930,37176
(defalias 'mon-window-flip mon-window-flip934,37336
(defalias 'mon-window-split-horiz mon-window-split-horiz938,37494
(defalias 'mon-window-split-vert mon-window-split-vert942,37660
(defalias 'delq-dups delq-dups957,38062
(defalias 'mon-string-longest-in-list mon-string-longest-in-list963,38275
(defalias 'mon-reorder-vector mon-reorder-vector967,38445
(defalias 'mon-sequence-reorder mon-sequence-reorder971,38603
(defalias 'mon-list-union mon-list-union975,38750
(defalias 'mon-list-member-if mon-list-member-if979,38893
(defalias 'mon-list-delete-if mon-list-delete-if983,39045
(defalias 'mon-list-remove-if-not mon-list-remove-if-not987,39203
(defalias 'mon-list-remove-if mon-list-remove-if991,39361
(defalias 'mon-list-intersect mon-list-intersect995,39512
(defalias 'mon-list-set-diff mon-list-set-diff999,39665
(defalias 'mon-list-nqueue mon-list-nqueue1003,39814
(defalias 'mon-list-flatten mon-list-flatten1007,39976
(defalias 'mon-rotate-flatten-list mon-rotate-flatten-list1011,40132
(defalias 'mon-list-mismatch mon-list-mismatch1015,40298
(defalias 'mon-list-combine mon-list-combine1019,40442
(defalias 'mon-map-combine mon-map-combine1023,40582
(defalias 'mon-list-permute-combine mon-list-permute-combine1027,40739
(defalias 'mon-list-permute-combine-1 mon-list-permute-combine-11031,40917
(defalias 'mon-list-recurse-apply mon-list-recurse-apply1035,41093
(defalias 'mon-merge-list mon-merge-list1039,41245
(defalias 'mon-list-delq-dups mon-list-delq-dups1043,41390
(defalias 'mon-delete-dups-eql mon-delete-dups-eql1047,41544
(defalias 'mon-list-deleql-dups mon-list-deleql-dups1051,41702
(defalias 'mon-list-delete-first mon-list-delete-first1055,41865
(defalias 'mon-list-remove-dups mon-list-remove-dups1059,42025
(defalias 'mon-list-transpose mon-list-transpose1063,42179
(defalias 'mon-bool-vector-to-list mon-bool-vector-to-list1067,42339
(defalias 'mon-list-ify-bool-vector mon-list-ify-bool-vector1071,42514
(defalias 'mon-boolean-vector-to-list mon-boolean-vector-to-list1075,42687
(defalias 'mon-pop2 mon-pop21079,42831
(defalias 'mon-list-pop2 mon-list-pop21090,43186
(defalias 'mon-region-append-to-register mon-region-append-to-register1109,43800
(defalias 'mon-append-next-kill mon-append-next-kill1113,43974
(defalias 'mon-register-append mon-register-append1117,44133
(defalias 'mon-read-keys-last-event mon-read-keys-last-event1121,44306
(defalias 'mon-string-from-keyboard-input mon-string-from-keyboard-input1125,44493
(defalias 'alpha-char-p alpha-char-p1140,44917
(defalias 'zerop-or-one zerop-or-one1144,45052
(defalias 'proper-list-p proper-list-p1148,45189
(defalias 'string-or-null-and-zerop string-or-null-and-zerop1153,45354
(defalias 'stringp-and-zerop-or-null stringp-and-zerop-or-null1157,45540
(defalias 'string-not-null-or-zerop string-not-null-or-zerop1161,45725
(defalias 'stringp-not-null-nor-zerop stringp-not-null-nor-zerop1165,45914
(defalias 'mon-is-alpha-char mon-is-alpha-char1171,46157
(defalias 'mon-proper-list-p mon-proper-list-p1175,46307
(defalias 'mon-dotted-list-p mon-dotted-list-p1179,46458
(defalias 'mon-list-dotted-and-proper-p mon-list-dotted-and-proper-p1183,46631
(defalias 'mon-list-mappable-p mon-list-mappable-p1187,46809
(defalias 'mon-mappable-sequence-p mon-mappable-sequence-p1191,46981
(defalias 'mon-list-all-booleanp mon-list-all-booleanp1195,47152
(defalias 'mon-byte-table-bits mon-byte-table-bits1200,47400
(defalias 'mon-bit-table-bits mon-bit-table-bits1204,47555
(defalias 'mon-char-coerce mon-char-coerce1208,47696
(defalias 'mon-symbol-cells-boundp mon-symbol-cells-boundp1212,47848
(defalias 'mon-capitalize-region mon-capitalize-region1228,48314
(defalias 'mon-region-reverse-chars mon-region-reverse-chars1232,48511
(defalias 'mon-region-wrap mon-region-wrap1236,48666
(defalias 'mon-string-split-commas mon-string-split-commas1240,48829
(defalias 'mon-split-region-at-commas mon-split-region-at-commas1244,49011
(defalias 'mon-indent-refill-region mon-indent-refill-region1248,49192
(defalias 'mon-indent-region-refill mon-indent-region-refill1252,49372
(defalias 'mon-region-refill-indent mon-region-refill-indent1256,49552
(defalias 'mon-region-count-regexp-matches mon-region-count-regexp-matches1260,49745
(defalias 'mon-string-at-point mon-string-at-point1273,50128
(defalias 'mon-permute-string mon-permute-string1295,50710
(defalias 'mon-buffer-get-word-list mon-buffer-get-word-list1308,51112
(defalias 'mon-region-reverse-words mon-region-reverse-words1312,51294
(defalias 'mon-reverse-region-words mon-reverse-region-words1316,51496
(defalias 'mon-buffer-get-word-count mon-buffer-get-word-count1320,51678
(defalias 'mon-make-list-alphabet mon-make-list-alphabet1335,52132
(defalias 'file-truename-p file-truename-p1350,52554
(defalias 'file-attributes-plist file-attributes-plist1354,52714
(defalias 'directory-attributes-plist directory-attributes-plist1358,52900
(defalias 'find-buffer-visiting-other-live-frame find-buffer-visiting-other-live-frame1362,53115
(defalias 'get-buffer-visiting-other-live-frame get-buffer-visiting-other-live-frame1366,53349
(defalias 'frame-live-visible-graphic-p frame-live-visible-graphic-p1370,53565
(defalias 'mon-move-file mon-move-file1378,53891
(defalias 'mon-mv-file mon-mv-file1382,54021
(defalias 'mon-file-move mon-file-move1386,54153
(defalias 'mon-file-mv mon-file-mv1390,54284
(defalias 'mon-rename-file mon-rename-file1394,54417
(defalias 'mon-rnm-file mon-rnm-file1398,54551
(defalias 'mon-file-rename mon-file-rename1402,54688
(defalias 'mon-file-rnm mon-file-rnm1406,54822
(defalias 'dired-find-file-other-frame dired-find-file-other-frame1412,55043
(defalias 'dired-up-here dired-up-here1416,55210
(defalias 'dired-uninsert-subdir dired-uninsert-subdir1420,55382
(defalias 'dired-subdir-uninsert dired-subdir-uninsert1424,55553
(defalias 'dired-uninsert-subdir-all dired-uninsert-subdir-all1428,55732
(defalias 'dired-subdir-uninsert-all dired-subdir-uninsert-all1432,55919
(defalias 'mon-get-buffer-visiting-other-live-frame mon-get-buffer-visiting-other-live-frame1438,56192
(defalias 'mon-file-attributes-plist mon-file-attributes-plist1442,56408
(defalias 'mon-directory-attributes-plist mon-directory-attributes-plist1446,56609
(defalias 'mon-dired-toggle-dwim-target mon-dired-toggle-dwim-target1450,56808
(defalias 'mon-dired-kill-files-to-list mon-dired-kill-files-to-list1454,57004
(defalias 'mon-dired-copy-files-to-list mon-dired-copy-files-to-list1458,57199
(defalias 'mon-dired-kill-files-to-strings mon-dired-kill-files-to-strings1462,57400
(defalias 'mon-dired-copy-files-to-strings mon-dired-copy-files-to-strings1466,57606
(defalias 'mon-directory-get-size mon-directory-get-size1470,57794
(defalias 'mon-buffer-get-new-w-stamp mon-buffer-get-new-w-stamp1474,57969
(defalias 'mon-dir-name-absolute mon-dir-name-absolute1478,58147
(defalias 'mon-dir-name-relative-w-absolute mon-dir-name-relative-w-absolute1482,58341
(defalias 'mon-file-copy-in-sub-dirs mon-file-copy-in-sub-dirs1486,58534
(defalias 'mon-file-copy-multiple mon-file-copy-multiple1490,58713
(defalias 'mon-make-path mon-make-path1494,58867
(defalias 'mon-buffer-string-split-name mon-buffer-string-split-name1498,59034
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1502,59243
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1506,59463
(defalias 'mon-buffer-get-parent-dir mon-buffer-get-parent-dir1510,59665
(defalias 'mon-dir-name-truncate-for-prompt mon-dir-name-truncate-for-prompt1514,59863
(defalias 'mon-dir-recurse-string-split mon-dir-recurse-string-split1518,60063
(defalias 'mon-buffer-string-split-dir-recurse mon-buffer-string-split-dir-recurse1522,60273
(defalias 'mon-get-dir-common-path mon-get-dir-common-path1526,60466
(defalias 'mon-buffer-subdirs-insert mon-buffer-subdirs-insert1530,60643
(defalias 'mon-dir-get-subdir mon-dir-get-subdir1534,60816
(defalias 'mon-file-rename-serial mon-file-rename-serial1538,60988
(defalias 'mon-file-copy-path mon-file-copy-path1542,61153
(defalias 'mon-buffer-file-copy-path mon-buffer-file-copy-path1546,61330
(defalias 'mon-buffer-get-directories mon-buffer-get-directories1550,61509
(defalias 'mon-dir-get-subdirs-descend mon-dir-get-subdirs-descend1554,61700
(defalias 'mon-get-directory-and-subdirs-list mon-get-directory-and-subdirs-list1558,61895
(defalias 'mon-dir-async-du mon-dir-async-du1562,62068
(defalias 'mon-directory-du-async mon-directory-du-async1566,62228
(defalias 'mon-du-async-dir mon-du-async-dir1570,62382
(defalias 'w3m-copy-this-url-as-kill w3m-copy-this-url-as-kill1586,62805
(defalias 'w3m-copy-current-url-as-kill w3m-copy-current-url-as-kill1590,62987
(defalias 'mon-url-escape mon-url-escape1594,63147
(defalias 'mon-encode-url mon-encode-url1598,63286
(defalias 'mon-url-unescape mon-url-unescape1602,63429
(defalias 'mon-decode-url mon-decode-url1606,63570
(defalias 'mon-search-wiki mon-search-wiki1610,63711
(defalias 'mon-buffer-get-retrieved-url mon-buffer-get-retrieved-url1614,63885
(defalias 'mon-get-w3m-dired-file mon-get-w3m-dired-file1618,64070
(defalias 'mon-w3m-get-url-at-point-maybe mon-w3m-get-url-at-point-maybe1622,64254
(defalias 'mon-w3m-get-url-at-point mon-w3m-get-url-at-point1626,64445
(defalias 'mon-get-w3m-read-gnu-lists-nxt-prv mon-get-w3m-read-gnu-lists-nxt-prv1630,64644
(defalias 'mon-line-strings-region-delimited mon-line-strings-region-delimited1646,65120
(defalias 'mon-line-strings-get-delimited-region mon-line-strings-get-delimited-region1650,65337
(defalias 'mon-function-arity mon-function-arity1654,65520
(defalias 'mon-function-args mon-function-args1658,65680
(defalias 'mon-insert-documentation mon-insert-documentation1662,65851
(defalias 'mon-help-reference-sheet mon-help-reference-sheet1666,66036
(defalias 'mon-help-finder-keywords mon-help-finder-keywords1670,66209
(defalias 'mon-help-directory-file-functions-usage mon-help-directory-file-functions-usage1674,66420
(defalias 'mon-help-network-process mon-help-network-process1678,66623
(defalias 'mon-help-types mon-help-types1682,66787
(defalias 'mon-help-face-functions mon-help-face-functions1686,66955
(defalias 'mon-help-charset-coding-functions mon-help-charset-coding-functions1690,67142
(defalias 'mon-help-ascii-chars mon-help-ascii-chars1694,67329
(defalias 'mon-help-ecma-48-chars-cntl->hex mon-help-ecma-48-chars-cntl->hex1698,67517
(defalias 'mon-help-cntl->hex->ecma-35 mon-help-cntl->hex->ecma-351702,67708
(defalias 'mon-help-time-iso-8601 mon-help-time-iso-86011706,67885
(defalias 'mon-help-elisp-info mon-help-elisp-info1710,68046
(defvaralias '*reference-sheet-help-A-HAWLEY* *reference-sheet-help-A-HAWLEY*1715,68255
(defvaralias '*doc-cookie* *doc-cookie*1719,68429
(defalias 'mon-help-cl-packages mon-help-cl-packages1732,68784
(defalias 'mon-help-slime-keys mon-help-slime-keys1736,68934
(defalias 'mon-help-swank-functions mon-help-swank-functions1740,69098
(defalias 'mon-help-cl-symbols mon-help-cl-symbols1744,69262
(defalias 'mon-hyperspec-lookup mon-hyperspec-lookup1748,69416
(defalias 'mon-help-CL-reader-macro-syntax mon-help-CL-reader-macro-syntax1752,69593
(defalias 'mon-help-csstidy mon-help-csstidy1768,70031
(defalias 'mon-help-bzr-commands mon-help-bzr-commands1783,70443
(defalias 'mon-stamp-date-only mon-stamp-date-only1798,70863
(defalias 'mon-today-stamp mon-today-stamp1802,71010
(defvaralias '*mon-emacs2html-temp* *mon-emacs2html-temp*1821,71674
(defalias 'comment-divider comment-divider1841,72207
(defalias 'mon-string-n-fancy-times mon-string-n-fancy-times1847,72432
(defalias 'mon-string-insert-n-times mon-string-insert-n-times1851,72620
(defalias 'mon-comment-divider->col mon-comment-divider->col1855,72802
(defalias 'mon-lisp-comment-to-col mon-lisp-comment-to-col1859,72982
(defalias 'mon-insert-doc-xref-eg mon-insert-doc-xref-eg1863,73155
(defalias 'mon-CL-package-complete mon-CL-package-complete1867,73334
(defalias 'mon-insert-CL-mode-line-template mon-insert-CL-mode-line-template1871,73533
(defalias 'mon-add-lisp-CL-file-local-prop-template mon-add-lisp-CL-file-local-prop-template1875,73766
(defalias 'mon-insert-CL-file-template mon-insert-CL-file-template1879,73982
(defalias 'mon-insert-CL-package-template mon-insert-CL-package-template1883,74185
(defalias 'mon-insert-CL-eval-when mon-insert-CL-eval-when1888,74381
(defalias 'mon-insert-CL-debug mon-insert-CL-debug1892,74554
(defalias 'mon-insert-jump-lisp-doc mon-insert-jump-lisp-doc1896,74729
(defalias 'bug-insert-copyright bug-insert-copyright1902,74982
(defalias 'mon-insert-naf-mode-file-template mon-insert-naf-mode-file-template1910,75383
(defvaralias '*regexp-version-alist* *regexp-version-alist*1924,75804
(defvaralias '*whitespace-chars* *whitespace-chars*1929,75992
(defvaralias '*mon-digit-chars* *mon-digit-chars*1933,76161
(defalias 'replace-char-in-string-mon replace-char-in-string-mon1960,77171
(defalias 'replace-in-string-mon replace-in-string-mon1964,77343
(defalias 'mon-replace-char-in-string mon-replace-char-in-string1972,77639
(defalias 'mon-canonical-string mon-canonical-string1980,77929
(defalias 'mon-map-regexp-matches mon-map-regexp-matches1984,78096
(defalias 'mon-map-regexp-matches-in-region mon-map-regexp-matches-in-region1988,78277
(defalias 'mon-region-increment-line-numbers mon-region-increment-line-numbers1992,78489
(defalias 'mon-region-increment-numbered-lines mon-region-increment-numbered-lines1996,78703
(defalias 'mon-cln-duplicate-lines mon-cln-duplicate-lines2001,78896
(defalias 'mon-remove-duplicate-lines mon-remove-duplicate-lines2005,79083
(defalias 'naf-delete-back-up-list naf-delete-back-up-list2010,79268
(defalias 'mon-defranc-benezit mon-defranc-benezit2014,79436
(defalias 'mon-defranc-benezit-fields mon-defranc-benezit-fields2018,79606
(defalias 'mon-cln-common-abbrevs mon-cln-common-abbrevs2023,79785
(defalias 'list-colors-defined list-colors-defined2040,80276
(defalias 'mon-color-list-defined mon-color-list-defined2048,80552
(defalias 'mon-color-read mon-color-read2053,80745
(defalias 'mon-color-list-duplicates mon-color-list-duplicates2057,80903
(defalias 'mon-color-list-display mon-color-list-display2061,81078
(defalias 'get-bmps-in-dir get-bmps-in-dir2078,81568
(defalias 'get-nefs-in-dir get-nefs-in-dir2082,81721
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list2090,82004
(defalias 'mon-rotate-images mon-rotate-images2107,82503
(defalias 'mon-identify-image mon-identify-image2111,82656
(defalias 'boxcutter-verify-image-type boxcutter-verify-image-type2129,83149
(defalias 'naf-drive-dired-artist-letter naf-drive-dired-artist-letter2142,83549
(defalias 'naf-dired-artist-letter naf-dired-artist-letter2146,83734
(defalias 'naf-drive-dired-brand-letter naf-drive-dired-brand-letter2150,83937
(defalias 'naf-dired-brand-letter naf-dired-brand-letter2154,84118
(defalias 'slot-makunbound slot-makunbound2168,84631
(defalias 'slime-next-xref slime-next-xref2179,84966
(defalias 'slime-prev-xref slime-prev-xref2183,85113
(defalias 'mon-slime-insert-arglist mon-slime-insert-arglist2187,85278
(defalias 'mon-slime-quit-description mon-slime-quit-description2191,85461
(defalias 'slime-compile-defun-for-debug slime-compile-defun-for-debug2195,85659
(defalias 'slime-copy-presentation-at-point-to-kill-ring-no-props slime-copy-presentation-at-point-to-kill-ring-no-props2200,85959
(defalias 'slime-copy-presentation-to-kill-ring-no-props slime-copy-presentation-to-kill-ring-no-props2204,86236

naf-mode/mon-eight-bit-raw-utils.el,38
(defun mon-cln-eight-bit-raw 88,2792

naf-mode/mon-cifs-utils.el,909
(defvar *mon-CIFS-misc-path-alist*161,6058
(defvar *mon-CIFS-auth-protocol* 200,8225
(defvar *mon-CIFS-workgroup* 215,8878
(defvar *mon-CIFS-domain* 222,9102
(defvar *mon-CIFS-user* 241,10030
(defvar *mon-CIFS-pass* 253,10526
(defvar *mon-CIFS-mount-root* 264,11010
(defvar *mon-CIFS-vars-unbound* 277,11566
(defvar *mon-CIFS-mount-points* 300,12738
(defun mon-map-cifs-domain->local-mount 334,14866
(defun mon-get-cifs-credentials 381,17585
(defun mon-build-cifs-credentials 426,19980
(defun mon-get-cifs-mount-points 459,21732
(defun mon-mount-cifs 488,23092
(defun mon-unmount-cifs 553,26602
(defun mon-verify-cifs-credentials 569,27452
(defun mon-inform-cifs-credentials-unbound 597,28857
(defun mon-bind-cifs-vars-at-loadtime 661,32663
(defvar *mon-auth-source-debug-var* 743,37433
(defvar *mon-auth-source-cache-debug-var* 754,38034
(defun mon-spit-auth-source-debug->var 783,39657

naf-mode/mon-time-utils.el,945
(defun mon-comment-divider-w-len 304,13214
(cl-defun mon-date-stamp 361,16355
(defun mon-get-current-year 416,19398
(defun mon-format-iso-8601-time 439,20451
(defun mon-file-older-than-file-p 499,23883
(defun mon-get-file-mod-times 543,26130
(defun mon-conv-time-flt-pnt 595,29102
(defun mon-comp-times-flt-pnt 617,30217
(defun mon-accessed-time-stamp 644,31544
(cl-defun mon-timestamp 661,32326
(defun mon-stamp 756,37862
(defun mon-accessed-stamp 781,38972
(cl-defun mon-stamp-in-context 812,40405
(defun mon-lisp-stamp 904,45975
(defun mon-file-stamp-vrfy-put-eof 973,49722
(defun mon-file-stamp 1023,52424
(defun mon-file-stamp-minibuffer 1231,64445
(defun mon-file-stamp-buffer-filename 1282,66694
(defun mon-convert-ebay-time 1338,69999
(defun mon-convert-ebay-time-mvb 1373,71898
(defun mon-cln-ebay-time-string 1398,73149
(defun mon-calculate-ebay-timezone-diff 1552,81334
(defun calendar-goto-doomsday 1597,83688

naf-mode/mon-testme-fancy.el,46
(defun mon-insert-lisp-testme-fancy 151,7599

naf-mode/mon-animate-nursery-rhymes.el,135
(defvar *mon-nursery-rhymes* 85,2652
(defun mon-animate-nursery-rhyme-sequence 912,36434
(defun mon-animate-nursery-rhyme 934,37446

mon-w32-load.el,525
(defun mon-maximize-frame-w32 118,3602
(defun mon-minimize-frame 127,3952
(defun mon-restore-frame 138,4365
(defun mon-menu-bar 147,4773
(defun mon-open-abbyy 169,5621
(defun mon-open-notepad++ 187,6288
(defun mon-open-fastone 202,6905
(defun mon-open-photoshop 218,7481
(defun mon-open-explorer 235,8168
(defalias 'mon-explorer-open mon-explorer-open249,8721
(defun mon-open-images-ed-swap 255,8904
(defun mon-open-program-files 272,9795
(defun mon-open-moz-down 286,10449
(defun mon-open-workspace 305,11322

mon-default-loads.el,1027
(defgroup mon-default-loads 144,4752
(defvar *IS-MON-OBARRAY* 158,5449
(defvar *IS-MON-OBARRAY-SYMS* 177,6190
(defcustom *mon-default-loads-xrefs* 196,6886
(defun mon-get-mon-emacsd-paths 229,8746
(defconst IS-W32-P294,12350
(defvaralias 'win32p win32p315,13367
(defconst IS-GNU-P323,13592
(defvaralias 'gnu-linuxp gnu-linuxp344,14638
(defconst IS-DARWIN-P353,14873
(defvaralias 'darwinp darwinp374,15930
(defconst IS-BUG-P 378,16005
(defconst IS-BUG-P-REMOTE 391,16667
(defconst IS-MON-P-W32 404,17350
(defconst IS-MON-P-GNU 418,18052
(defconst IS-MON-P-DARWIN 432,18740
(defconst IS-MON-P 447,19461
(defconst IS-NOT-A-MON-SYSTEM464,20369
(defconst IS-MON-SYSTEM-P486,21582
(defvar set-emacs-root 524,23491
(defconst *mon-emacs-root* 633,30195
(defconst *mon-site-lisp-root* 660,31602
(defconst *mon-naf-mode-root* 680,32700
(defconst *mon-naf-mode-notes* 702,33845
(defconst *mon-ebay-tmplt-mode-root* 723,34992
(defconst *mon-user-emacsd*745,36300
(defconst *mon-local-emacs-temp-dir*777,38259

mon-keybindings.el,649
(defgroup mon-keybindings 208,7525
(defcustom *mon-keybindings-xrefs* 226,8356
(defun mon-keybind-globally 256,9874
(defun mon-keybind-dired-mode 389,15510
(defun mon-keybind-completions 439,18169
(defun mon-keybind-info-mode 462,19378
(defun mon-keybind-w3m 546,22628
(defun mon-keybind-emacs-lisp-mode 671,28492
(defun mon-keybind-lisp-interaction-mode 731,31372
(defun mon-keybind-slime-selector-helper 767,33254
(defun mon-keybind-slime 784,33921
(defun mon-keybind-slime-inspector 986,44374
(defun mon-keybind-slime-fuzzy-completions 1024,46252
(defun mon-conf-stamp-in-context 1058,47780
(defun mon-keybind-conf-mode 1071,48323

mon-site-local-defaults.el,540
(defun mon-string-wonkify 112,4416
(defun mon-build-user-name-example 157,6520
(defun mon-build-user-name-example-TEST 211,9456
(defun mon-build-misc-path-example 241,10847
(defun mon-build-mon-emacsd-example 307,14297
(defun mon-user-name-conditionals 389,18372
(defun mon-system-type-conditionals 474,22960
(defun mon-user-system-conditionals-TEST 521,25335
(defconst *mon-emacsd* 575,28561
(defvar *mon-misc-path-alist* 611,30439
(defconst *MON-NAME* 673,34030
(defconst *BUG-NAME* 698,35351
(defvar *MON-ORG-NAME*720,36517

mon-post-load-hooks.el,687
(defgroup mon-post-load-hooks 128,3910
(defcustom *mon-post-load-hooks-xrefs* 146,4774
(defun mon-purge-cl-symbol-buffers-on-load 182,6516
(defvar *mon-post-load-hook-trigger-buffer* 224,8776
(defun mon-run-post-load-hooks-helper 243,9668
(defun mon-run-post-load-hooks 259,10577
(defun mon-purge-doc-view-cache-directory 356,15947
(defun mon-purge-thumbs-directory 374,16964
(defun mon-purge-slime-swank-port-file 394,17961
(defun mon-purge-tramp-persistency-file 411,18770
(defun mon-purge-temporary-file-directory 428,19736
(defvar *mon-purge-emacs-temp-file-dir-fncns* 452,20943
(defun mon-purge-emacs-temp-files-on-quit 475,22097
(defun mon-scratch-postload 505,23537

mon-default-start-loads.el,2732
(defgroup mon-default-start-loads 193,8125
(defcustom *mon-default-start-loads-xrefs* 249,10941
(defvar *mon-default-start-load-sanity* 302,13657
(defvar *mon-default-start-load-sanity-WARN-ONLY* 314,14276
(defun mon-build-path-for-load-path 327,14976
(defmacro mon-default-start-error/sane 335,15452
(defun mon-set-split-window-init 398,18607
(defun mon-set-load-path-init 429,19862
(defun mon-set-color-themes-init 472,21737
(defun mon-toggle-show-point-mode 541,24765
(defun mon-set-emacs-temp-file/dir-init 567,26097
(defun mon-set-infopath-init 648,30121
(defun mon-set-bookmark-file-init 762,37705
(defun mon-set-woman-manpath-init 821,40772
(defun mon-set-C-source-directory-init 877,43694
(defun mon-set-unicodedata-init 932,46763
(defun mon-set-bbdb-init 976,48740
(defun mon-set-desktop-init 1024,51051
(defun mon-set-printer-postscript-init 1043,51611
(defun mon-set-doc-view-programs-init 1094,54450
(defun mon-set-thumbs-conversion-program-init 1150,57003
(defun mon-set-boxcutter-init 1216,60538
(defun mon-set-image-dired-init 1253,62462
(defun mon-set-ispell-init 1443,70009
(defun mon-set-help-mode-init 1488,71919
(defun mon-set-ibuffer-init 1542,74554
(defun mon-set-ido-init 1566,75607
(defun mon-set-org-init 1649,79772
(defun mon-set-custom-customizations-init 1673,80535
(defun mon-set-customizations-before-custom-file-init 1717,83084
(defun mon-set-custom-file-init-w32-configs 1802,86864
(defun mon-set-custom-file-init 1849,89043
(defun mon-set-common-lisp-hspec-init 1901,91994
(defun mon-set-show-paren-init 1940,94228
(defun mon-set-lisp-init 1976,96205
(defun mon-set-proced-init 2036,99422
(defun mon-set-auctex-init 2059,100417
(defun mon-set-vc-init 2076,101058
(defun mon-set-magit-init 2094,101859
(defun mon-set-dvc-init 2167,106240
(defun mon-set-erc-configs-init 2223,109298
(defun mon-erc-post-cloak-autojoin 2305,112465
(defun mon-set-url-pkg-init 2320,113194
(defun mon-set-google-maps-init 2376,115569
(defun mon-set-w3m-init 2405,116886
(defun mon-set-browser-init 2444,118811
(defun mon-set-buffer-local-comment-start 2487,121209
(defun mon-set-buffer-local-comment-start-init 2511,122534
(defun mon-set-css-path-init 2554,124662
(defun mon-set-longlines-init 2595,126621
(defun mon-rst-mode-facification 2618,127550
(defun mon-set-rst-mode-faces-init 2634,128434
(defun mon-set-apache-mode-init 2655,129287
(defun mon-set-traverselisp-init 2681,130609
(defun mon-load-cedet 2708,131858
(defun mon-keybind-w32-init 2727,132692
(defun mon-keybind-put-hooks-init 2764,134470
(defun mon-set-github-paths-init 2800,136245
(defun mon-set-mon-feature-customs-init 2827,137563
(defun mon-set-system-specific-and-load-init 2900,140784

slime-loads-GNU.el,0

naf-mode/mon-loaddefs.el,0

naf-mode/naf-mode-bibliograpbhic-entry.el,0
