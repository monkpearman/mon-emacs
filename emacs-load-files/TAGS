
slime-loads-GNU-clbuild.el,3366
(defgroup mon-slime 319,12020
(defcustom *mon-slime-xrefs*355,13610
(defgroup mon-qucklisp 413,16426
(defcustom *quicklisp-path* 455,18468
(defun quicklisp-find-slime 483,19782
(defun quicklisp-current-swank-loader 538,22450
(defun quicklisp-write-dot-swank-loader 593,25609
(defun quicklisp-write-dot-swank-loader-if 638,27960
(defun quicklisp-dot-swank-current-p 664,29364
(defvar *quicklisp-systems* 703,31313
(defun quicklisp-hash-system-completions 722,32107
(defun quicklisp-system-complete 769,34749
(defun quicklisp-system-complete-if 794,35836
(defun quicklisp-hash-system-completions-slime-loadtime 811,36699
(defcustom *mon-lisp-system-paths* 893,41304
(defun mon-add-lisp-system-paths-to-tags-table-list 930,43405
(defun mon-lisp-set-indent 970,45574
(defun mon-lisp-set-indent-hook 984,46192
(defun mon-slime-setup-add-hooks 996,46672
(defun mon-slime-ensure-file-local-variables 1037,48520
(defun mon-slime-ensure-fasl-temp-directory-exists 1055,49396
(defun mon-slime-setup-init 1076,50486
(defun slime-fuzzy-sroll-completions-up-from-target-buffer 1270,58919
(defun slime-fuzzy-sroll-completions-down-from-target-buffer 1275,59079
(defun mon-define-common-lisp-style 1284,59309
(defun slime-macroexpand-again-fix 1325,61055
(defun slime-highlight-sexp 1391,63877
(defun mon-slime-compile-defun-for-debug 1473,67684
(defun mon-insert-slime-arglist 1493,68514
(defun %slime-insert-integer-at-point 1520,69425
(defun slime-insert-integer-at-point 1523,69523
(defun mon-next-xref-slime 1545,70502
(defun mon-prev-xref-slime 1560,71242
(defun mon-quit-slime-description-window 1575,71899
(defun mon-slime-description-view-source-file 1601,73150
(defvar *slime-show-description-hook* 1648,75036
(defvar *slime-local-show-description-hook* 1650,75080
(defun mon-slime-setup-show-description-buffer-locals 1654,75242
(defun mon-slime-show-description 1665,75960
(defun mon-slime-copy-presentation-at-point-to-kill-ring-no-propso 1695,77280
(defun mon-slime-copy-presentation-to-kill-ring-no-props 1709,78019
(defun mon-slime-start-sbcl 1727,78922
(defgroup slime-quicklisp-inspect 1893,86979
(defvar *slime-quicklisp-systems* 1902,87240
(defun slime-make-quicklisp-completion-table 1929,88418
(defun slime-quicklisp-get-process-start-time 1977,91022
(defun slime-quicklisp-completion-table-put-hash-meta 2008,92455
(defun slime-quicklisp-completion-table-get-hash-meta 2048,94721
(defun slime-quicklisp-completion-table-get-hash-count 2074,95947
(defun slime-quicklisp-completion-table-get-hashed-last 2102,97427
(defun slime-quicklisp-completion-table-compare-hashed-last 2124,98555
(defun slime-quicklisp-completion-table-get-ql-hash-count 2162,100673
(defun slime-quicklisp-completion-table-compare-hash-counts 2182,101647
(defun slime-get-quicklisp-system-completions 2210,102997
(defun slime-inspect-quicklisp-system 2279,106420
(defun slime-inspect-quicklisp-systems 2307,107774
(defun slime-quicklisp-open-inspector-if 2319,108346
(defun slime-inspect-quicklisp-release 2328,108817
(defun slime-inspect-quicklisp-apropos 2342,109411
(defun slime-inspect-asdf-defined-systems 2357,110081
(defun slime-inspect-asdf-system 2370,110699
(defvar *slime-echo-arglist-STFU* 2450,114501
(defun slime-echo-arglist-behave-or-back-to-your-cage 2464,115165
(defun slime-echo-arglist-STFU 2475,115711

naf-mode/mon-word-syntax-utils.el,452
(defun mon-get-syntax-at 142,4924
(defun mon-get-syntax-class-at 167,6157
(defun mon-line-test-content 198,7485
(defun mon-word-get-next 329,15863
(defun mon-word-get-list-in-buffer 358,16913
(defun mon-word-reverse-region 412,19408
(defun mon-word-iterate-over 454,21091
(defun mon-word-count-analysis 483,22345
(defun mon-word-count-occurrences 523,24421
(defun mon-word-count-region 631,30597
(defun mon-word-count-chars-region 648,31261

naf-mode/naf-mode-awards-prizes.el,137
(defvar *naf-mode-awards-prizes-xrefs*76,2644
(defvar *naf-awards-prizes-names*88,3159
(defconst naf-mode-awards-prizes-names106,3695

naf-mode/mon-image-utils.el,318
(defgroup mon-image-utils 141,4696
(defcustom *mon-image-identify-delim* 153,5120
(defun mon-image-identify 166,5653
(defun mon-image-rotate 212,7841
(defun mon-image-verify-type 234,9089
(defun mon-get-image-dimensions 307,12985
(defun mon-get-image-dimensions-im 321,13639
(defun mon-get-image-md5 343,14657

naf-mode/naf-mode-ulan-help-docs.el,46
(defun mon-help-naf-mode-ulan-flags 107,3408

naf-mode/mon-call-tree.el,157
(defvar *mon-call-tree-alist* 47,2058
(defun mon-call-tree-analyze 59,2619
(defun mon-call-tree-add 116,4784
(defun mon-call-tree-update-header 140,5752

naf-mode/mon-buffer-utils.el,974
(defgroup mon-buffer-utils 148,5251
(defcustom *mon-buffer-utils-xrefs* 166,5947
(defcustom *mon-get-hidden-buffers-known* 193,7267
(defun mon-g2be 249,9818
(defun mon-buffer-sub-no-prop 338,14239
(defun mon-buffer-sub-no-prop-check 383,16507
(defun mon-buffer-narrowed-p 532,25969
(defun mon-buffer-empty-p 592,28960
(defun mon-buffer-exists-so-kill 619,30154
(defun mon-buffer-name-is-file-name-p 641,31363
(defun mon-get-buffer-hidden 706,34703
(defun mon-get-buffer-hidden-if 767,37671
(defun mon-buffer-kill-hidden-if 788,38769
(defun mon-get-buffer-window-if 813,40100
(defun mon-print-buffer-object-readably 831,41035
(defun mon-get-buffer-w-mode 866,42765
(defun mon-buffer-check-local-value 896,44473
(defun mon-buffer-check-major-mode 929,46332
(defun mon-buffer-longlines-mode-p 949,47524
(defun mon-buffer-name->kill-ring 994,49489
(defun mon-append-to-buffer 1032,51311
(defun mon-make-shell-buffer 1068,52846
(defun mon-shell 1110,54793

naf-mode/mon-event-utils.el,1051
(defcustom *mon-popup-pos-x-offset* 162,5883
(defun mon-inhibit-read-only 174,6219
(defun mon-inhibit-modification-hooks 204,7545
(defun mon-inhibit-point-motion-hooks 221,8320
(defun mon-toggle-read-only-point-motion 244,9414
(defun mon-toggle-truncate-line 262,10204
(defun mon-scroll-down-in-place 286,11253
(defun mon-scroll-up-in-place 299,11808
(defun mon-line-move-n 319,12693
(defun mon-line-move-next 336,13455
(defun mon-line-move-prev 351,14193
(defun mon-read-keys-as-string 367,14981
(defun mon-read-multiple 410,17087
(defun mon-postion-for-x-popup-menu 506,22849
(defun mon-choose-from-menu 523,23674
(defun mon-test-keypresses 551,24932
(defun mon-decode-meta-key-event 581,26436
(defun mon-catch-meta-key 601,27300
(defun mon-abort-recursive-edit 647,29508
(defun mon-abort-autosave-when-fucked 664,30233
(defvar *mon-ascii-cursor-state* 708,32736
(defun mon-rotate-ascii-cursor 716,33120
(defun mon-kill-appending 765,35518
(defun mon-append-to-register 779,36096
(defun mon-multi-isearch-rmv-hook 801,37320

naf-mode/mon-empty-registers.el,785
(defvar *mon-register-config-tags* 140,4816
(defun* mon-set-register->tags 190,7392
(defun mon-set-register->tags-semic 226,9421
(defun mon-set-register->tags-sharp 236,9843
(defun mon-make-set-register->tags-docs 246,10264
(defun mon-set-register-tags-loadtime 293,12297
(defvar *mon-cntl-char-registers* 365,16517
(defun mon-cntl-char-registers-loadtime 384,17348
(defvar *mon-digit-registers* 447,21003
(defvar *mon-digit-shifted-registers* 472,22212
(defvar *mon-symbol-registers* 500,23649
(defvar *mon-upper-case-registers* 524,24950
(defvar *mon-lower-case-registers* 552,26315
(defvar *mon-registr-of-registers* 583,27983
(defun mon-query-replace-register1<-reg2 615,29464
(cl-defun mon-reset-registers 645,31039
(defun mon-set-all-registers-to-char 719,34113

naf-mode/mon-cl-compat-regexps.el,251
(defvar *regexp-clean-cl-symbols* 189,7949
(defvar *clean-cl-symbols-with-regexp*227,9857
(defun mon-CL-escape-star 438,19158
(defun mon-CL-escape-regexp 479,20968
(defun mon-CL-namespace-colonic 519,22978
(defun mon-CL-cln-colon-swap 535,23904

naf-mode/mon-plist-utils.el,263
(defgroup mon-plist-utils 123,3412
(defcustom *mon-plist-utils-xrefs* 135,3881
(defun mon-plist-keys 188,5970
(defun mon-plist-values 214,7092
(defun mon-plist-remove! 253,9012
(defun mon-plist-remove-consing 303,11355
(defun mon-plist-remove-if 325,12458

naf-mode/naf-mode-group-period-styles.el,48
(defconst naf-mode-group-period-styles172,4314

naf-mode/mon-seq-utils.el,2148
(defgroup mon-seq-utils 253,8162
(defcustom *mon-seq-utils-xrefs* 268,8744
(defun mon-elt-> 305,10777
(defun mon-elt-< 319,11492
(defun mon-elt->elt 335,12377
(defun mon-elt-<elt 350,13149
(defun mon-maybe-cons 386,15212
(defun mon-delq-cons 408,16293
(defun mon-list-nshuffle 445,18026
(defun mon-list-shuffle-safe 503,21266
(defun mon-delq-dups 556,23947
(defun mon-deleql-dups 587,25367
(defun mon-delete-first 619,26984
(defun mon-list-last 653,28559
(defun mon-list-make-unique 692,30296
(defun mon-remove-dups 733,32711
(defun mon-list-filter 758,33895
(defun mon-list-match-tails 790,35332
(defun mon-list-add-non-nil 824,37136
(defun mon-list-ensure 871,39504
(defun %mon-list-reorder 893,40331
(defun mon-list-reorder 918,41379
(defun mon-union 1028,47330
(defun mon-member-if 1063,48911
(defun mon-delete-if 1090,50191
(defun mon-remove-if-not 1127,51798
(defun mon-remove-if 1157,53336
(defun mon-intersection 1191,55196
(defun mon-set-difference 1288,60165
(defun mon-pairlis 1342,62853
(defun mon-map 1372,64439
(defun mon-map1 1470,70497
(defun mon-mapc 1547,74541
(defun mon-mapcar 1574,75852
(defun mon-mapcan 1617,77655
(defun mon-mapl 1659,79591
(defun mon-mapcon 1708,81893
(defun mon-maplist 1728,83032
(defun mon-subseq 1768,85131
(defun mon-sublist 1863,89612
(defun mon-sublist-gutted 1892,91116
(defun mon-map-append 1921,92732
(defun mon-assoc-replace 1944,94088
(defmacro mon-moveq 1971,95738
(defun mon-flatten 1995,96989
(defun mon-list-flatten-rotated 2038,99199
(defun mon-transpose 2057,100032
(defun mon-list-intersperse 2083,101320
(defun mon-every 2119,103030
(defun* mon-mismatch 2172,105760
(defun mon-maptree 2198,107416
(defun mon-recursive-apply 2232,109190
(defun mon-list-merge 2257,110640
(defun mon-combine 2282,111807
(defun mon-list-variant-forms 2328,114302
(defun mon-list-permute-variants 2360,115828
(defun mon-list-permute-1 2382,116861
(defun mon-list-permute-2 2418,118792
(defun mon-permute-combine 2445,120073
(defun mon-permute-combine-1 2487,122178
(defun mon-list-string-longest 2536,124708
(defun mon-bool-vector-pp 2574,126759

naf-mode/mon-randomize-utils.el,317
(defun mon-next-almost-prime 140,4589
(defun mon-gensym-counter-randomizer 194,6713
(defun mon-mix-fields 300,11939
(defun mon-make-random-state 317,12558
(defun mon-generate-prand-id 344,13707
(defun mon-generate-prand-seed 377,15175
(defun mon-string-wonkify 434,17992
(defun mon-generate-WPA-key 491,20958

naf-mode/mon-testme-utils.el,2508
(defgroup mon-testme-utils 171,6768
(defcustom *mon-testme-utils-xrefs* 185,7344
(defun mon-insert-lisp-testme 223,9547
(defun mon-insert-test-cases 298,13189
(defun mon-gensym-counter-randomizer-TEST 338,15198
(defun mon-list-nshuffle-TEST 385,17734
(defun mon-line-strings-to-list-TEST 420,19454
(defun mon-with-inhibit-buffer-read-only-PP-TEST 460,21137
(defun mon-with-inhibit-buffer-read-only-TEST 485,22327
(defun mon-line-dolines-setup-TEST 526,24388
(defun mon-line-dolines-TEST 579,26869
(defun mon-with-buffer-undo-disabled-TEST 652,30796
(defun mon-string-split-TEST 684,32377
(defun mon-line-strings-bq-qt-sym-bol-TEST 723,34390
(defun mon-help-CL-wget-pkgs-TEST 761,36292
(defun mon-build-copyright-string-TEST 822,39364
(defun google-define-get-command-TEST 911,44689
(defun mon-permute-combine-functions-TEST 935,45814
(defun mon-write-string-reset-bind-TEST 1012,49592
(defun mon-region-capitalize-TEST 1088,53308
(defun naf-mode-state-to-postal-TEST 1128,55149
(defun mon-booleanp-to-binary-TEST 1143,55858
(defun mon-sequence-all-booleanp-TEST 1179,57596
(defun mon-string-or-null-and-zerop-TEST 1228,60516
(defun mon-error-protect-PP-EXPAND-TEST 1263,62182
(defun mon-line-string-rotate-name-TEST 1281,62830
(defun mon-line-indent-from-to-col-TEST 1317,64825
(defun mon-line-strings-pipe-to-col-TEST 1361,67237
(defun mon-line-string-insert-chars-under-TEST 1396,69050
(defun mon-list-reorder-TEST 1425,70484
(defun mon-regexp-clean-ulan-dispatch-chars-TEST 1494,74440
(defun mon-set-buffer-substring-no-properties-TEST 1564,77777
(defun mon-plist-keys-TEST 1599,79253
(defun mon-plist-values-TEST 1617,79988
(defun mon-help-propertize-regexp-symbol-defs-TEST 1649,81490
(defun mon-help-regexp-symbol-defs-TEST 1689,83840
(defun mon-help-propertize-tags-TEST 1855,91122
(defun mon-help-keys-wikify-TEST 1941,96293
(defun mon-drive-transfer-template-TEST 1965,97452
(defun mon-build-mon-emacsd-example 1999,99093
(defun mon-build-misc-path-example 2045,101630
(defun mon-build-user-name-example 2135,106072
(defun mon-user-system-conditionals-TEST 2194,109187
(defun mon-build-user-name-example-TEST 2248,112468
(defun mon-cln-xml-escapes-TEST 2281,113986
(defun* mon-up/down-case-regexp-TEST 2309,115388
(defun mon-hash-get-symbol-keys-TEST 2392,119831
(defun mon-file-stamp-buffer-filename-TEST 2411,120755
(defun mon-cln-freenode-log-TEST 2438,121954
(defun mon-align-conses-EXAMPLE 2486,124350
(defun mon-align-conses-TEST 2523,126332

naf-mode/mon-type-utils-vars.el,421
(defgroup mon-type-utils-vars 130,4138
(defcustom *mon-type-utils-vars-xrefs*145,4705
(defvar *mon-special-forms-types*176,5927
(defvar *mon-non-mappable-object-types* 212,7483
(defcustom *mon-equality-or-predicate-function-types*253,9437
(defvar *mon-function-object-types* 313,11633
(defvar *mon-ascii-alpha-chars* 327,12384
(defcustom *mon-ascii-punct-chars*351,13496
(defvar *mon-whitespace-chars* 372,14407

naf-mode/smith-poster-utils.el,483
(defvar *ebay-smith-poster-path* 112,4224
(defvar *insert-smith-ebay-template* 125,4721
(defun mon-set-smith-poster-register-e 189,6939
(defalias 'mon-insert-smith-poster-template mon-insert-smith-poster-template228,8802
(defun mon-insert-smith-ebay-dbc-template 245,9647
(defun mon-make-smith-folder-list 297,12609
(defun mon-ebay-smith-posters->template 344,14767
(defun mon-cln-smith-trailing-wps-dbc-item 424,19445
(defun mon-smith-poster-dbc-item->ebay-item 436,20029

naf-mode/mon-doc-help-undocd.el,40
(defun mon-help-doc-no-docd 1603,63849

naf-mode/mon-css-color.el,3367
(defconst css-color:version 193,8295
(defgroup css-color 197,8441
(defgroup mon-css-color 211,9034
(defun css-color-turn-on-in-buffer 217,9226
(define-globalized-minor-mode css-color-global-mode 224,9432
(defcustom *css-color:hex-chars* 229,9586
(defcustom *regexp-css-color-hex* 246,10504
(defcustom *regexp-css-color-hsl* 260,11170
(defcustom *regexp-css-color-rgb* 279,12013
(defcustom *css-color:html-colors*298,12913
(defun css-color:html-color-both-cases 469,18294
(defcustom *regexp-css-color-html*490,19313
(defcustom *regexp-css-color-color* 514,20340
(defvar *css-color:keywords*544,21567
(define-minor-mode css-color-mode592,24898
(defun css-color:font-lock-hook-fun 642,27117
(defvar *css-color:map*653,27588
(defvar *css-color:generic-map* 675,28655
(defun css-color:pal-lumsig 692,29489
(defun css-color:foreground-color 701,29906
(defun css-color:normalize-hue 718,30750
(defun css-color:within-bounds 725,31093
(defun css-color:hex-to-rgb 733,31487
(defun css-color:hex-to-hsv 758,32742
(defun css-color:rgb-to-hex 769,33299
(defun css-color:rgb-to-hsv 781,33911
(defun css-color:rgb-to-hsl 814,35473
(defun css-color:hsv-to-hsl 862,37159
(defun css-color:hsv-to-hex 875,37801
(defun css-color:hsv-to-rgb 888,38439
(defun css-color:hsv-to-prop-hexstring 921,39964
(defun css-color:hsl-to-rgb-fractions 935,40712
(defun css-color:hsl-to-rgb 953,41649
(defun css-color:hsl-to-hex 972,42505
(defun css-color:hue-to-rgb 983,43088
(defun css-color:parse-hsl 1001,43915
(defun css-color:incr-hsv-hue 1015,44627
(defun css-color:incr-hsv-sat 1025,45170
(defun css-color:incr-hsv-val 1036,45767
(defun css-color:hexval-beginning 1047,46359
(defun css-color:repl-color-at-posn 1057,46727
(defun css-color:get-color-at-point 1070,47324
(defun css-color:adjust-hsv-hue-at-posn 1083,47957
(defun css-color:adjust-hsv-sat-at-posn 1094,48520
(defun css-color:adjust-hsv-val-at-posn 1105,49090
(defun css-color:what-channel 1117,49710
(defun css-color:adjust-hex-at-posn 1128,50103
(defun css-color:rgb-up 1151,51271
(defun css-color:rgb-down 1159,51617
(defun css-color:hsv-hue-up 1167,51967
(defun css-color:hsv-hue-down 1176,52348
(defun css-color:hsv-saturation-up 1185,52734
(defun css-color:hsv-saturation-down 1193,53110
(defun css-color:hsv-value-up 1201,53492
(defun css-color:hsv-value-down 1209,53858
(defun css-color:num-up 1218,54250
(defun css-color:num-down 1245,55438
(defun css-color:text-property-color-start 1268,56426
(defun css-color:text-property-color-end 1280,56948
(defun css-color:text-property-color-region 1292,57476
(defvar *css-color:string-frob* 1308,58418
(defconst *css-color:type-circle* 1322,59138
(defun css-color:next-type 1329,59452
(defun css-color:cycle-type 1337,59808
(defun css-color:string-hex-to-hsl 1365,61249
(defun css-color:string-hsl-to-rgb 1378,61952
(defun css-color:string-rgb-to-name 1393,62695
(defun css-color:string-name-to-hex 1414,63803
(defun css-color:string-rgb-to-hex 1431,64637
(defun css-color:string-hsl-to-hex 1455,65971
(defun css-color:next-channel 1467,66598
(defun css-color:hexify-anystring 1485,67409
(defun css-color:toggle-percentage 1497,67907
(defvar *css-color:fg-history* 1518,69171
(defun css-color:html-color-by-name 1528,69547
(defun css-color:examine-color 1565,71631
(defun css-color:run-tests 1593,73251

naf-mode/mon-css-check.el,719
(defgroup css-check 166,6137
(defface css-check-unapplied-face176,6587
(defface css-check-applied-face187,7039
(defvar *css-check-map* 198,7485
(defvar *css-check-follow-mode* 221,8504
(defvar *css-check-csstidy-path* 230,8990
(defvar *css-check-file* 246,9801
(defvar *CSS-CHECK* 258,10403
(defun css-check-kill-buffer-hook 273,11115
(defun css-check-toggle-follow 288,11863
(defun css-check-next-line 307,12794
(defun css-check-prev-line 323,13560
(defun css-check-goto-line-at-p 338,14221
(defun css-check-apply-line-at-p 365,15642
(defun css-check-undo-application-at-p 414,18134
(defun css-check-buffer-mode-css-p 467,20860
(defun css-check-buffer-offer-save 493,22101
(defun css-check 512,22960

naf-mode/mon-error-utils.el,985
(defgroup mon-error-utils 142,5146
(defgroup mon-error-warn 156,5714
(defcustom *mon-error-utils-xrefs* 164,6006
(defvar *mon-error-gather* 194,7621
(defcustom *mon-message-function* 206,8227
(defun mon-format 229,9324
(cl-defun mon-message 560,29700
(cl-defun mon-string-not-null-nor-zerop-ERROR 598,31733
(cl-defun mon-symbol-void-ERROR 643,34516
(cl-defun mon-vectorp-ERROR 689,37337
(cl-defun mon-file-non-existent-ERROR 727,39412
(cl-defun mon-buffer-non-existent-ERROR 761,41322
(cl-defun mon-list-proper-p-ERROR 800,43562
(defun mon-truncate-path-for-prompt 886,47101
(defun mon-display-warning 911,48275
(defun mon-error-toplevel 921,48818
(cl-defun mon-error 947,50110
(defun mon-error-string-err 1012,53765
(defun mon-error-string-err-format 1041,54997
(defun mon-error-gather 1112,59317
(defun mon-error-gather-peek 1129,60112
(defun mon-error-gather-reset 1150,61054
(defun mon-error-gather-finalize 1164,61661
(cl-defun mon-write-string 1286,67391

naf-mode/mon-alphabet-list-utils.el,390
(defvar *mon-alphabet-as-type-generate* 195,7675
(defun mon-alphabet-as-type 222,9209
(defmacro mon-alphabet-as-defun 417,19126
(defun mon-alphabet-as-bc 439,20187
(defun mon-alphabet-as-map-bc 463,21279
(defun mon-alphabet-as-doc-loadtime 519,23535
(defun mon-alphabet-as-map-fun-prop 577,27213
(defun mon-alphabet-as-unintern-fun 598,28356
(defun mon-string-alpha-list 676,32513

naf-mode/naf-mode-ulan-utils.el,614
(defgroup naf-mode-ulan-help-utils 154,5527
(defcustom *mon-ulan-utils-xrefs* 166,5986
(defcustom *ulan-sample-data* 190,6955
(defvar *ulan-associative-roles* 202,7455
(defconst *naf-mode-db-numbers-flag-ulan* 216,7973
(defun mon-get-next-ulan-record 231,8639
(defconst *naf-mode-db-numbers-flag-ulan-loc-naf* 271,10569
(defconst naf-mode-db-field-flags-ulan-paren286,11383
(defun mon-rotate-ulan-triples 322,12697
(defun mon-invert-ulan-triples 339,13404
(defun mon-ulan-tsv-assc-rels-type->list 393,15388
(defconst *naf-mode-ulan-rltd-ppl-corp* 466,18440
(defconst *naf-mode-x-of-ulan-bol*502,20424

naf-mode/mon-doc-help-utils.el,8222
(defgroup mon-doc-help-utils 456,22538
(defgroup mon-doc-help-utils-faces 479,23588
(defcustom *mon-doc-help-utils-xrefs*512,25395
(defcustom *mon-doc-cookie* 607,31507
(defcustom *mon-help-docstring-help-bffr* 628,32425
(defcustom *mon-help-custom-faces-builtins-tags*643,33018
(defcustom *mon-help-mon-tags-alist* 675,34905
(defcustom *mon-help-reference-keywords* 784,40795
(defcustom *regexp-mon-doc-help-pointer-tags*853,45426
(defcustom *regexp-mon-doc-help-docstring-tags-URL*895,47083
(defcustom *regexp-mon-doc-help-docstring-tags-DYNAMIC* 936,49108
(defcustom *regexp-mon-doc-help-docstring-tags-TABLES*962,50322
(defcustom *regexp-mon-doc-help-docstring-tags*992,51746
(defcustom *regexp-mon-doc-help-comment-tags*1019,53042
(defcustom *regexp-mon-doc-help-meta-tags*1046,54272
(defcustom *regexp-mon-doc-help-builtin-dynamic-tags* 1078,55821
(defcustom *regexp-mon-doc-help-builtin-static-tags*1105,57136
(defcustom *mon-help-side-effect-free* 1132,58468
(defcustom *mon-help-side-effect-and-error-free* 1222,63736
(defcustom *mon-help-pure-functions* 1294,68085
(defvar *mon-help-subrs* 1364,71615
(defvar *mon-help-subrs-false* 1383,72647
(defun mon-map-subrs-and-hash 1405,73740
(defvar *mon-help-byte-optimizer-vals* 1481,77025
(defcustom *mon-help-risky-local-variables*1502,78054
(defvar *mon-help-permanent-locals* 1529,79458
(defun mon-help-permanent-locals-find 1548,80505
(defun mon-help-byte-optimizer-find 1618,84173
(defface mon-help-KEY-tag1661,86355
(defface mon-help-DYNATAB-tag1678,87129
(defface mon-help-META-tag1695,87997
(defface mon-help-PNTR-tag1711,88741
(defface mon-help-INNER-KEY-tag1746,90325
(defface mon-help-URL-wrap-tag1765,91114
(defface mon-help-BUILTIN-tag1785,91932
(defface mon-help-OLAY-RESULT1813,93050
(defface mon-help-OLAY-RESULT-string-show1833,93826
(defface mon-help-OLAY-RESULT-match-show1855,94633
(defcustom *mon-help-propertize-tags-triples*1879,95539
(defun mon-help-propertize-tags 1916,97818
(defun* mon-help-mon-tags 1969,100781
(defun mon-help-insert-tags 2032,104006
(defun mon-help-insert-tags-comment 2093,107304
(defun mon-help-overlay-for-example 2106,107992
(defun mon-help-delimited-region 2208,114458
(defun mon-help-overlay-on-region 2284,118185
(defun mon-help-overlay-result 2308,119421
(defun mon-help-find-result-for-overlay 2368,122461
(defun mon-help-temp-docstring-display 2419,124698
(defun mon-help-buffer-spc-*DOC* 2469,127292
(defun mon-help-get-mon-help-buffer 2522,129971
(defun mon-help-view-file 2538,130629
(defcustom *mon-tags-table-list* 2571,132345
(defun mon-update-tags-tables 2606,133892
(defun mon-update-tags-tables-loadtime 2663,136811
(defun mon-tags-naf-apropos 2677,137533
(defun mon-tags-apropos 2689,137973
(defun mon-insert-doc-help-cookie 2700,138371
(defmacro mon-help-put-var-doc-val->func 2733,139829
(defmacro mon-help-swap-var-doc-const-val 2806,143938
(defun mon-help-xref-symbol-value 2963,152648
(cl-defun mon-help-function-spit-doc 2999,154612
(defun mon-insert-doc-help-tail 3126,162402
(defun mon-help-message-intrp 3237,168909
(defun mon-help-function-arity 3292,171576
(defcustom *mon-help-emacs-errors* 3347,173882
(defun mon-help-errors 3428,177988
(defun mon-help-function-args 3625,187824
(defcustom *mon-help-interactive-spec-alist* 3669,189933
(defun mon-help-parse-interactive-spec 3797,196034
(defun mon-help-insert-documentation 3855,199021
(defun mon-help-help-functions 3938,203191
(defun mon-help-mon-help 4030,206220
(defun mon-help-mon-functions 4243,212126
(defun mon-help-ebay-template-mode 4902,228347
(defun mon-help-emacs-introspect 4973,230823
(defcustom *mon-emacs-external-programs-vars* 5185,236803
(defun mon-help-package-keywords 5252,240545
(defun mon-help-regexp-syntax 5344,244790
(defun mon-help-syntax-class 5405,247451
(defun mon-help-syntax-functions 5468,250449
(defun mon-help-search-functions 5588,253882
(defun mon-help-hooks 5720,257456
(defun mon-help-file-dir-functions 5876,261401
(defun mon-help-file-dir-functions-usage 6207,270440
(defun mon-help-process-functions 6378,276716
(defun mon-help-make-network-process 6491,279643
(defun mon-help-server-functions 6576,283388
(defun mon-help-inhibit-functions 6667,285988
(defun mon-help-buffer-functions 6726,287911
(defun mon-help-frame-functions 6976,294478
(defun mon-help-window-functions 7213,300035
(defun mon-help-mode-functions 7386,305152
(defun mon-help-xml-functions 7470,307574
(defun mon-help-eieio-defclass 7515,308873
(defun mon-help-eieio-functions 7571,311374
(defun mon-help-eieio-methods 7710,317922
(defun mon-help-type-predicates 7870,327116
(defun mon-help-number-functions 7995,332994
(defun mon-help-predicate-functions 8123,335280
(defun mon-help-sequence-functions 8402,341668
(defun mon-help-key-functions 8564,344804
(defun mon-help-load-functions 8931,354431
(defun mon-help-read-functions 9011,356566
(defun mon-help-print-functions 9134,362828
(defun mon-help-marker-functions 9263,366622
(defun mon-help-hash-functions 9328,368336
(defun mon-help-plist-functions 9446,372411
(defun mon-help-plist-properties 9524,374749
(defun mon-help-faces-themes 9738,380565
(defun mon-help-faces 9858,386131
(defun mon-help-faces-basic 9998,395804
(defun mon-help-faces-font-lock 10052,397836
(defun mon-help-font-lock-functions 10097,399515
(defun mon-help-font-lock 10226,403735
(defun mon-help-overlay-functions 10293,407419
(defun mon-help-text-property-functions 10372,409880
(defun mon-help-text-property-properties 10467,416673
(defun mon-help-text-property-stickyness 10557,423362
(defun mon-help-text-property-functions-ext 10627,427082
(defun mon-help-color-functions 10688,429423
(defun mon-help-color-chart 10776,432006
(defun mon-help-easy-menu 10940,444465
(defun mon-help-widgets 10994,447907
(defun mon-help-custom-keywords 11134,457997
(defun mon-help-char-functions 11234,462161
(defun mon-help-char-charset-functions 11358,466153
(defun mon-help-char-coding-functions 11471,469383
(defun mon-help-char-table-functions 11561,473067
(defun mon-help-display-table-functions 11640,475620
(defun mon-help-char-unidata-table 11708,477958
(defun mon-help-char-composition 11845,482526
(defun mon-help-char-ascii 12015,490059
(defun mon-help-char-iso-8859-1 12107,495660
(defun mon-help-char-ecma-48 12179,500247
(defun mon-help-char-ecma-35 12237,503271
(defun mon-help-diacritics 12294,506032
(defun mon-help-char-logic 12460,511631
(defun mon-help-char-representation 12503,513252
(defun mon-help-char-raw-bytes 12666,520595
(defun mon-help-binary-representation 12743,523899
(defun mon-help-symbol-functions 12979,534030
(defun mon-help-byte-compile-functions 13299,544003
(defun mon-help-byte-code-vector-symbols 13664,556156
(defun mon-help-ipv4-header 13714,558708
(defun mon-help-nclose-functions 13813,564067
(defun mon-help-iso-8601 13869,566171
(defun mon-help-time-functions 13974,570973
(defun mon-help-mon-time-functions 14069,573658
(defun mon-help-bookmark-functions 14168,576698
(defun mon-help-info-incantation 14306,580614
(defun mon-help-tar-incantation 14327,581604
(defun mon-help-rename-incantation 14364,582954
(defcustom *regexp-clean-du-flags* 14393,583928
(defun mon-help-du-incantation 14446,585836
(defun mon-help-install-info-incantation 14499,588220
(defun mon-help-hg-archive 14532,589871
(defun mon-help-crontab 14579,591961
(defun mon-help-permissions 14664,596523
(defun mon-help-unix-commands 14755,602411
(defun mon-help-unix-usage 14935,610132
(defun mon-help-format-width 15203,626555
(defun mon-index-elisp-symbol 15233,627997
(defun mon-help-w32-functions 15254,628743
(defcustom *w32-env-variables-alist* 15311,630591
(defun mon-help-w32-env 15417,637609
(defvar *mon-help-reference-keys* 15488,640958
(defun mon-help-bind-help-keys-loadtime 16761,687094
(defun mon-help-keys 16827,690625
(defun mon-help-keys-wikify-anchors 16840,691103
(defun mon-help-keys-wikify-heading 16898,694081
(defun mon-help-keys-wikify 16926,695515
(defun mon-help-escape-for-ewiki 17045,701837
(defun mon-help-unescape-for-ewiki 17091,703742
(defun mon-help-utils-loadtime 17136,705704

naf-mode/mon-css-complete.el,4060
(defvar *css-complete-at-ids* 152,7705
(defvar *css-complete-tag-ids* 175,8777
(defvar *css-complete-media-ids* 230,11284
(defvar *css-complete-property-ids* 252,12368
(defvar *css-complete-pseudo-ids* 270,13188
(defvar *css-complete-props-and-vals* 288,13994
(defvar *css-complete-look-back-regexp* 459,23462
(defvar *css-complete-popup-pos-x-offset* 496,25301
(defmacro css-complete-collect 521,26287
(defmacro css-delete-partial 571,28569
(defmacro css-complete-menu-generate 629,31554
(defmacro css-delims-maybe-generate 652,32759
(defmacro css-popup-generate 677,33765
(defmacro css-at-p-generate 696,34705
(defun css-vals-for-prop 719,35758
(defun css-prop-for-point 732,36445
(defun css-vals-for-point 748,37214
(defun css-delims-maybe-part-generic 759,37791
(defalias 'css-delims-maybe-part-prop-at-point css-delims-maybe-part-prop-at-point780,38616
(defalias 'css-delims-maybe-part-pseudo-at-point css-delims-maybe-part-pseudo-at-point792,39141
(defalias 'css-delims-maybe-part-at-at-point css-delims-maybe-part-at-at-point804,39676
(defun css-delims-maybe-part-val-at-point 821,40354
(defun css-maybe-part-val-at-point 841,41140
(defun css-possible-value-completions 851,41613
(defun css-possible-value-completions-at-point 870,42473
(defun css-delete-partial-value 879,42909
(defun css-value-popup-completions 888,43378
(defun css-value-completion-menu 898,43876
(defun css-pos-for-x-popup-menu 916,44614
(defun css-complete-value 931,45326
(defun css-at-value-p 947,46132
(defun css-at-prop-p 963,46884
(defun css-maybe-part-prop-at-point 974,47479
(defun css-possible-prop-completions 986,47992
(defun css-possible-prop-completions-at-point 997,48496
(defun css-props-for-point 1005,48901
(defun css-delete-partial-prop 1014,49305
(defun css-prop-popup-completions 1023,49774
(defun css-prop-completion-menu 1030,50143
(defun css-complete-prop 1047,50767
(defun css-at-pseudo-id-p 1065,51652
(defun css-maybe-part-pseudo-at-point 1077,52148
(defun css-possible-pseudo-completions 1088,52661
(defun css-possible-pseudo-completions-at-point 1099,53171
(defun css-pseudos-for-point 1105,53515
(defun css-delete-partial-pseudo 1113,53867
(defun css-pseudo-popup-completions 1123,54346
(defun css-pseudo-completion-menu 1131,54768
(defun css-complete-pseudo 1146,55366
(defun css-at-tag-id-p 1161,56090
(defun css-delims-maybe-part-tag-at-point 1173,56684
(defun css-maybe-part-tag-at-point 1193,57555
(defun css-tags-for-point 1204,58058
(defun css-possible-tag-completions 1211,58365
(defun css-possible-tag-completions-at-point 1222,58865
(defun css-delete-partial-tag 1228,59196
(defun css-tag-popup-completions 1237,59640
(defun css-tag-completion-menu 1248,60169
(defun css-complete-tag 1261,60757
(defun css-at-at-id-p 1277,61541
(defun css-maybe-part-at-at-point 1287,61960
(defun css-ats-for-point 1297,62460
(defun css-possible-at-completions 1304,62765
(defun css-possible-at-completions-at-point 1315,63261
(defun css-delete-partial-at 1321,63585
(defun css-at-popup-completions 1330,64037
(defun css-at-completion-menu 1338,64403
(defun css-complete-at 1353,64968
(defun css-at-string-p 1376,66000
(defun css-at-filename-p 1384,66407
(defun css-complete-filename 1392,66789
(defun css-at-comment-p 1399,67117
(defun css-after-at-p 1407,67540
(defun css-complete-after-at 1424,68276
(defun css-media-for-point 1448,69377
(defun css-media-completion-menu 1455,69691
(defun css-complete-media 1471,70338
(defun css-media-popup-completions 1486,71015
(defun css-complete 1496,71474
(defun css-electric-left-brace 1530,73207
(defun css-electric-left-bracket 1542,73551
(defun css-electric-left-paren 1553,73856
(defun css-electric-quotes 1563,74154
(defun css-electric-semicolon 1572,74410
(define-key css-mode-map 1581,74664
(define-key css-mode-map 1582,74715
(define-key css-mode-map 1583,74777
(define-key css-mode-map 1584,74841
(define-key css-mode-map 1585,74899
(define-key css-mode-map 1586,74961
(defun mon-css-complete-loadtime 1592,75152

naf-mode/naf-mode-nation-english.el,129
(defvar *naf-mode-nation-english-xrefs* 81,2682
(defvar *naf-nation-english*98,3347
(defconst naf-mode-nation-english326,7295

naf-mode/naf-mode-art-keywords.el,123
(defvar *naf-mode-art-keywords-xrefs*79,2816
(defvar *naf-art-keywords*87,3213
(defconst naf-mode-art-keywords 153,4638

naf-mode/mon-elisp-fileset.el,36
(defun mon-map-elisp-fileset 7,279

naf-mode/mon-doc-help-tidy.el,31
(defun mon-help-tidy 111,3295

naf-mode/mon-rename-images-supplemental.el,738
(defun mon-get-buffer-parent-dir 168,7347
(defun mon-string-split-buffer-name 238,10783
(defun mon-truncate-path-for-prompt 266,12054
(defun mon-buffer-written-p 291,13212
(defun mon-toggle-read-only-point-motion 319,14562
(defun mon-dir-build-list 340,15358
(defun mon-line-bol-is-eol 402,17603
(defun mon-cln-trail-whitespace 424,18468
(defun mon-delete-back-up-list 445,19446
(defvar *mon-nef-scan-drive* 508,22172
(defvar *mon-nef-scan-path* 517,22594
(defvar *mon-nef-scan-nefs-path* 529,23139
(defvar *mon-nef-scan-nef2-path* 542,23641
(defvar *mon-ebay-images-path* 555,24156
(defvar *mon-ebay-images-bmp-path* 568,24662
(defvar *mon-ebay-images-jpg-path* 581,25232
(defvar *mon-ebay-images-lookup-path* 591,25699

naf-mode/naf-mode-abbrevs.el,74
(define-abbrev-table 'naf-mode-abbrev-tablenaf-mode-abbrev-table59,1789

naf-mode/naf-mode-classes.el,787
(defclass naf-mode-base 82,2704
(defclass naf-mode-obj-timestamp-abst-intrfc 105,3337
(defmethod naf-timestamp-on-obj 116,3715
(defclass naf-mode-obj-uid-abst-intrfc 122,3991
(defmethod naf-uid-on-obj 134,4445
(defclass naf-mode-instance-doc-abst-intrfc 140,4718
(defclass naf-mode-xrefs-keyword-abst-intrfc 151,5057
(defclass naf-mode-xrefs-face-abst-intrfc 164,5458
(defclass naf-mode-xrefs-function-abst-intrfc 177,5847
(defclass naf-mode-xrefs-constant-abst-intrfc 190,6249
(defclass naf-mode-xrefs-variable-abst-intrfc 203,6658
(defclass naf-mode-xrefs-package-abst-intrfc 216,7067
(defclass naf-mode-xrefs-abst-intrfc 229,7494
(defclass naf-mode-keyword-abst-intrfc 266,9089
(defclass naf-mode-kwrd-face-abst-intrfc 318,10711
(defclass naf-nation-english 344,11417

naf-mode/mon-macs.el,1151
(defgroup mon-macs 162,5506
(defcustom *mon-macs-xrefs* 177,6002
(defmacro mon-error-protect 205,7533
(defmacro %mon-format-chk-keys 257,10095
(defmacro handler-case 312,12664
(defmacro mon-copy-list-mac 377,16281
(defmacro mon-mapcar-mac 474,21778
(defmacro mon-nshuffle-vector 535,25057
(defmacro mon-list-sift 573,26690
(defmacro mon-foreach 622,29109
(defmacro mon-for 638,29808
(defmacro mon-loop 660,30665
(defmacro mon-equality-for-type 675,31160
(defmacro mon-gensym 710,32538
(defmacro mon-with-gensyms 749,34614
(defmacro mon-with-print-gensyms 807,37198
(defmacro defconstant 843,38634
(defmacro defparameter 870,40061
(defmacro mon-set-text-properies-region 914,42087
(defmacro mon-get-face-at-posn 934,43010
(defmacro mon-with-file-buffer 962,44203
(defmacro mon-buffer-exists-p 1003,46038
(defmacro mon-with-buffer-undo-disabled 1056,48939
(defmacro mon-print-in-buffer-if-p 1098,50842
(defmacro mon-with-inhibit-buffer-read-only 1128,52301
(defmacro mon-toggle-restore-llm 1178,54966
(defmacro mon-naf-mode-toggle-restore-llm 1238,58114
(cl-defmacro mon-line-dolines 1259,59204
(defmacro mon-cat 1298,61052

naf-mode/naf-mode-nationality-french.el,141
(defvar *naf-mode-nationality-french-xrefs*81,2661
(defvar *naf-nationality-french*100,3395
(defconst naf-mode-nationality-french180,4802

naf-mode/naf-mode-insertion-utils.el,1110
(defvar *naf-mode-insertion-utils-xrefs* 110,4178
(defun naf-tab-region 148,5629
(defun naf-comment-line 156,5873
(defun naf-uncomment-line 167,6197
(defun naf-comment-region 179,6539
(defun naf-uncomment-region 189,6895
(defun non-posting-source 200,7333
(defalias 'nps nps218,8094
(defun non-posting-ebay-source 228,8521
(defalias 'npes npes255,9699
(defun non-posting-wiki-source 263,9996
(defalias 'npws npws285,10986
(defun non-posting-philsp-source 294,11296
(defalias 'npps npps320,12450
(defun non-posting-imdb-source 331,12789
(defun non-posting-benezit-source 365,14202
(defun non-posting-internet-source 405,16431
(defun mon-insert-naf-file-in-dirs 449,19004
(defun mon-insert-naf-mode-class-template 498,21470
(defun mon-build-naf-mode-xref 526,22876
(defun mon-insert-naf-mode-xref-template 568,25119
(defun mon-insert-naf-mode-var-const-template 605,26887
(defun mon-insert-naf-mode-constant-template 651,29061
(defun mon-insert-naf-mode-face-template 691,31371
(defun mon-insert-naf-mode-faces-as-displayed 739,33911
(defvar *naf-mode-faces-as-displayed* 756,34735

naf-mode/mon-rename-whitespace-files.el,214
(defun mon-rename-whitespace-files 112,3272
(defun mon-rename-whitespace-clean-whitespace 135,4592
(defun mon-rename-whitespace-make-file-conses 153,5513
(defun mon-file-convert-find-fprint-to-fprint0 171,6549

naf-mode/naf-mode-faces.el,3985
(defcustom *naf-mode-faces-xrefs* 233,10582
(defun mon-face-bold->normal 334,13977
(defvar *naf-face-props* 346,14477
(defvar *naf-face-prop-vals* 370,15641
(defvar *naf-face-prop-keywords* 389,16632
(defvar *naf-face-vals-alist* 407,17612
(defvar *naf-face-keyword->vals* 438,19322
(defun mon-bind-naf-face-vars-loadtime 451,19994
(defun naf-facercise-prop-val 553,25073
(defun naf-face-prop-val-p 590,27077
(defun naf-map-face-key->val 638,29788
(defun mon-help-naf-mode-faces 680,31834
(defface naf-mode-db-entry-face965,40573
(defvar naf-mode-db-entry-fface 977,41069
(defface naf-mode-delim-face989,41542
(defvar naf-mode-delim-fface 1001,42052
(defface naf-mode-name-divider-face1013,42527
(defvar naf-mode-name-divider-fface 1025,43045
(defface naf-mode-field-url-flag-face1037,43536
(defvar naf-mode-field-url-flag-fface 1049,44046
(defface naf-mode-delimit-url-flag-face1063,44624
(defvar naf-mode-delimit-url-flag-fface 1074,45090
(defface naf-mode-timestamp-face1088,45681
(defvar naf-mode-timestamp-fface 1102,46290
(defface naf-mode-accessed-by-face1117,46867
(defvar naf-mode-accessed-by-fface 1130,47416
(defface naf-mode-field-face1150,48167
(defvar naf-mode-field-fface 1161,48608
(defface naf-mode-db-field-entry-face1174,49157
(defvar naf-mode-db-field-entry-fface 1187,49688
(defface naf-mode-field-bnf-face 1202,50348
(defvar naf-mode-field-bnf-fface 1212,50753
(defface naf-mode-db-field-entry-bnf-face1226,51337
(defvar naf-mode-db-field-entry-bnf-fface 1237,51868
(defface naf-mode-field-ulan-face1254,52700
(defvar naf-mode-field-ulan-fface 1264,53093
(defface naf-mode-db-field-entry-ulan-face1278,53743
(defvar naf-mode-db-field-entry-ulan-fface 1288,54214
(defface naf-mode-ulan-ppl-corp-face1304,55002
(defvar naf-mode-ulan-ppl-corp-fface 1315,55460
(defface naf-mode-date-face1331,56228
(defvar naf-mode-date-fface 1347,56978
(defface naf-mode-date-active-face1364,57750
(defvar naf-mode-date-active-fface 1374,58134
(defface naf-mode-benezit-face1387,58627
(defvar naf-mode-benezit-fface 1400,59206
(defface naf-mode-place-face1413,59774
(defvar naf-mode-place-fface 1428,60454
(defface naf-mode-nationality-face1443,61089
(defvar naf-mode-nationality-fface 1455,61576
(defface naf-mode-publication-periodical-face1470,62149
(defvar naf-mode-publication-periodical-fface 1497,63345
(defface naf-mode-publication-periodical-french-face1526,64662
(defvar naf-mode-publication-periodical-french-fface 1541,65312
(defface naf-mode-publication-periodical-english-face 1560,66240
(defvar naf-mode-publication-periodical-english-fface 1573,66767
(defface naf-mode-publication-periodical-english-one-word-face1593,67701
(defvar naf-mode-publication-periodical-english-one-word-fface 1608,68374
(defface naf-mode-publication-periodical-intnl-face1629,69386
(defvar naf-mode-publication-periodical-intnl-fface 1644,70036
(defface naf-mode-event-face1662,70884
(defvar naf-mode-event-fface 1674,71366
(defface naf-mode-group-period-style-face1686,71822
(defvar naf-mode-group-period-style-fface 1697,72316
(defface naf-mode-institution-face1709,72821
(defvar naf-mode-institution-fface 1724,73523
(defface naf-mode-alternate-name-face1740,74202
(defvar naf-mode-alternate-name-fface 1753,74750
(defface naf-mode-primary-role-face1766,75300
(defvar naf-mode-primary-role-fface 1778,75785
(defface naf-mode-secondary-role-face1791,76273
(defvar naf-mode-secondary-role-fface 1803,76779
(defface naf-mode-art-keywords-role-face1816,77295
(defvar naf-mode-art-keywords-role-fface 1827,77781
(defface naf-mode-awards-prizes-face1839,78279
(defvar naf-mode-awards-prizes-fface 1850,78748
(defface naf-mode-artist-face1871,79566
(defvar naf-mode-artist-fface 1886,80104
(defface naf-mode-artist-student-of-face1903,80764
(defvar naf-mode-artist-student-of-fface 1915,81270
(defface naf-mode-artist-student-of-julian-face1937,82186
(defvar naf-mode-artist-student-of-julian-fface 1948,82676

naf-mode/mon-iptables-regexps.el,401
(defvar *mon-iptables-alist-as-sym* 125,4064
(defvar *regexp-clean-iptables* 146,5091
(defun mon-iptables-make-regexps 161,5955
(defun mon-iptables-make-regexps-long 190,7299
(defun mon-cln-iptables-short-form 217,8560
(defun mon-cln-iptables-long-form 284,11502
(defun mon-iptables-pp-key 350,14527
(defun mon-iptables-pp-as-sym 379,15865
(defun mon-bind-iptables-vars-at-loadtime 401,16633

naf-mode/mon-drive-transfer-utils.el,339
(defvar *mon-drive-transfer-template-src-dest-log* 123,4021
(defun mon-drive-transfer-template-subst-src-dest-log 182,7424
(defvar *mon-drive-transfer-template* 203,8410
(defun mon-insert-drive-transfer-template 259,11391
(defun mon-drive-transfer-template-cln-log-dest 281,12279
(defun mon-drive-transfer-template-cln-all 346,15534

naf-mode/mon-get-freenode-lisp-logs.el,134
(defvar *freenode-lisp-logs* 124,3895
(defun mon-wget-freenode-lisp-logs 135,4436
(defun mon-get-freenode-lisp-logs-dates 170,6121

naf-mode/naf-mode-publications-periodicals-french.el,180
(defvar *naf-mode-publications-periodicals-french-xrefs*80,2641
(defvar *naf-publications-periodicals-french* 98,3464
(defconst naf-mode-publications-periodicals-french230,6483

naf-mode/mon-dbc-xml-utils.el,398
(defvar *mon-ampersand-sharp-diacritic-pairs* 112,3121
(defun mon-replace-ampersand-sharp-chars-in-buffer 166,5566
(defun mon-dbc-replace-consed-pairs-region-with-parsed-defclass-slots 181,6228
(defun mon-insert-parsed-defclass-slots 215,7781
(defalias 'mon-dbc-xml-insert-parsed-defclass-slots mon-dbc-xml-insert-parsed-defclass-slots236,8766
(defun mon-dbc-xml-parse-clean-fields 241,8986

naf-mode/mon-ps-pdf-utils.el,193
(defvar *mon-pdftotext-exec-path* 185,5549
(defvar *mon-pdfinfo-exec-path* 218,7016
(defun* mon-get-pdftotext 253,8429
(defun* mon-get-ps2ascii 332,12642
(defun* mon-get-pdfinfo 351,13610

naf-mode/mon-doc-help-CL.el,3283
(defgroup mon-doc-help-CL 203,8520
(defgroup mon-doc-help-CL-hspec-parse 219,9189
(defcustom  *mon-doc-help-CL-xrefs* 234,9844
(defcustom *mon-help-CL-cmu-ai-repo* 284,12800
(defcustom *mon-help-CL-ext-pkg-map* 325,14919
(defun mon--CL-no-pull-p 676,36095
(defcustom *mon-help-CL-ext-pkg-map-no-pull* 689,36703
(defun mon-help-CL-pkgs 727,38516
(defun mon-bind-mon-help-CL-pkgs-loadtime 771,40621
(defun mon-help-CL-wget-pkgs 833,43940
(defun mon-help-CL-wget-pkgs-for-shell-command 928,48901
(defcustom *mon-hspec-root-dir* 1185,61313
(defcustom *mon-hspec-parse-buffer* 1214,62864
(defcustom  *mon-hspec-unparse-buffer* 1234,63935
(defun mon-hspec-href-p 1252,64806
(defun mon-hspec-header-line-p 1279,66370
(defun mon-hspec-it-p 1349,70899
(defun mon-hspec-bld-p 1374,72312
(defun mon-hspec-plain-p 1399,73733
(defun mon-hspec-w3m-spec-p 1424,75138
(defun mon-hspec-prop-type 1438,75940
(defun mon-hspec-out 1468,77664
(defun mon-hspec-stk-n-mv 1485,78680
(defun mon-hspec-parse-w3m 1522,80740
(defun mon-hspec-find-w3m 1551,82212
(defun mon-hspec-unparse-w3m 1637,86812
(defun mon-hspec-unparse-w3m-to-buffer 1713,90692
(defun mon-help-CL-emacs-functions 2176,106662
(defun mon-help-CL-file-dir-functions 2202,107861
(defun mon-help-CL-stream-keywords 2313,110964
(defun mon-help-CL-error-condition-restart 2392,114134
(defun mon-help-CL-sequence-predicates 2568,119932
(defun mon-help-CL-bit-byte-bool-logic 2606,121672
(defun mon-help-CL-loop 2722,126519
(defun mon-help-CL-loop-usage 2925,132945
(defun mon-help-CL-do 3326,148370
(defun mon-help-CL-time 3395,151767
(defun mon-help-CL-sequences 3428,153192
(defun mon-help-CL-iteration 3481,154844
(defun mon-help-CL-conses 3516,156305
(defun mon-help-CL-hash-tables 3637,159073
(defun mon-help-CL-print 3690,161250
(defun mon-help-CL-streams 3778,164383
(defun mon-help-CL-reader 3866,166836
(defun mon-help-CL-chars 3913,168580
(defun mon-help-CL-strings 3965,170341
(defun mon-help-CL-structures 4006,171907
(defun mon-help-CL-arrays 4038,173374
(defun mon-help-CL-numbers 4105,175373
(defun mon-help-CL-lambda-list 4218,177807
(defun mon-help-CL-object-CLOS 4311,182217
(defun mon-help-CL-method-combination 4401,185096
(defun mon-help-CL-control-flow 4476,187851
(defun mon-help-CL-eval-compile 4576,190198
(defun mon-help-CL-load-compile 4635,192032
(defun mon-help-CL-environment 4676,193666
(defun mon-help-CL-package-functions 4736,195551
(defun mon-help-CL-intern-symbol 4795,197475
(defun mon-help-CL-types 4846,199255
(defun mon-help-CL-type-declarations 5080,205151
(defun mon-help-CL-sharpsign-syntax 5121,207035
(defun mon-help-CL-format 5175,209819
(defun mon-help-CL-format-usage 5371,215322
(defun mon-help-slime-functions 5494,218757
(defun mon-help-CL-slime-keys 6659,248374
(defun mon-help-CL-swank-functions 6793,253002
(defun mon-help-CL-local-time 6837,254529
(defun mon-help-CL-minion 6985,260873
(defvar *clhs-symbol-v3-or-v7* 7071,264775
(defun mon-help-utils-CL-loadtime 9094,369379
(defvar *mon-help-CL-symbols* 9121,370626
(defun mon-help-CL-symbols 9169,372721
(defun mon-cln-cxml-docs 9227,376039
(defun mon-help-CL-lispdoc 9286,378609
(defun mon-cln-ansi-info 9346,381789
(defcustom *mon-CL-indent-specs* 9397,384030

naf-mode/mon-region-utils.el,492
(defun mon-region-position 146,5112
(defun mon-region-length 186,7172
(defun mon-decode-coding-region-utf-8-unix 215,8591
(defun mon-region-indent-refill 233,9374
(defun mon-region-unfill 291,13015
(defun mon-region-capitalize 303,13466
(defun mon-region-reverse 337,15022
(defun mon-wrap-selection 361,16115
(defun mon-wrap-text 397,17615
(defun mon-wrap-with 428,18936
(defun mon-region-split-commas 440,19552
(defun mon-align-conses 496,21827
(defun mon-sha1-region 524,23227

naf-mode/naf-mode-french-months.el,42
(defconst naf-mode-french-months 84,3041

naf-mode/mon-dir-utils-local.el,1234
(defvar *mon-img-hash* 174,6803
(defvar *mon-nef-img-hash* 193,7582
(defvar *mon-bmp-img-hash* 212,8460
(defvar *mon-jpg-img-hash* 231,9320
(defun* mon-file-map-elisp-fileset 257,10546
(defun mon-dir-save-current 369,16940
(defun mon-dir-save-current-to-file 406,18649
(defun mon-explorer-naf-artist 454,20791
(defun mon-explorer-naf-brand 484,22150
(defun mon-dired-naf-artist-letter 516,23800
(defun mon-dired-naf-brand-letter 542,24981
(defun mon-dired-naf-image-dir 578,26735
(defun mon-dir-nef-update-photos-alist 624,29215
(defun mon-bind-nefs-photos-at-loadtime 686,32731
(defun mon-dir-nef-ranges 713,34024
(defun mon-dir-nef-name-to-head 746,35909
(defun mon-dir-nef-remove-if-empty 772,37260
(defun mon-dir-nef-find-dups 804,39034
(defun mon-dir-nef-conc-dups 843,41145
(defun mon-dir-nef-converge 876,42914
(defun mon-dir-nef-conc-ranges 911,44757
(defun mon-dir-nef-keep-3 941,46331
(defun mon-dir-nef-big 986,48854
(defun mon-dired-nef-dir 1010,49957
(defun mon-dir-hash-images 1040,51366
(defun mon-dir-hashed-complete 1096,53901
(defun mon-dir-try-comp 1123,55257
(defun mon-file-path-for-bug 1160,57017
(defun mon--local-url-for-bug 1212,59835
(defun mon-get-local-url-for-bug 1217,60079

naf-mode/mon-wget-utils.el,368
(defvar *mon-show-wget-script-temp* 119,3579
(defun mon-wget-list-to-script 129,4094
(defun mon-wget-list-to-script-TEST 181,6666
(defun mon-wget-list-to-script-shell-command 236,9641
(defun mon-wget-list-give-script-to-shell-command 273,11732
(defun mon-wget-rfc 313,13812
(defun mon-wget-unicodedata-files 345,15228
(defvar *mon-unidata-file-list* 379,17031

naf-mode/mon-regexp-symbols.el,2562
(defgroup mon-regexp-symbols 163,6412
(defcustom *mon-regexp-symbols-xrefs* 177,7017
(defcustom *regexp-whitespace-chars*211,9060
(defcustom *regexp-clean-xml-parse* 235,10240
(defcustom *regexp-clean-mon-file-keywords*261,11458
(defcustom *regexp-symbol-defs* 357,15264
(defcustom *regexp-symbol-defs-big* 406,17770
(defcustom *regexp-ansicl-info*459,20357
(defcustom *regexp-line-to-consed-pair* 489,21353
(defcustom *regexp-abrv-dotted-month->canonical*502,21977
(defcustom *regexp-simple-abrv-month->canonical*530,23568
(defcustom *regexp-clean-ebay-time-chars* 557,25067
(defcustom *regexp-clean-ebay-month->canonical-style1*598,26639
(defcustom *regexp-clean-ebay-month->canonical-style2* 637,28258
(defcustom *regexp-clean-ebay-month->canonical-style3* 678,30137
(defcustom *regexp-bound-month->canonical*726,32686
(defcustom *regexp-month->canonical-ws*754,34088
(defcustom *regexp-month->MM*825,37919
(defcustom *regexp-MM->month*849,39084
(defcustom *regexp-MM->month-whitespace-aware*872,40344
(defcustom *regexp-philsp-months*944,44747
(defcustom *regexp-philsp-apos*975,46224
(defcustom *regexp-philsp-location*998,47251
(defcustom *regexp-philsp-swap-location*1022,48356
(defcustom *regexp-philsp-fix-month-dates* 1041,49238
(defcustom *regexp-clean-irc-logs* 1074,51255
(defcustom *regexp-clean-wikipedia*1090,52054
(defcustom *regexp-clean-whitespace*1180,55743
(defcustom *regexp-clean-big-whitespace*1201,56629
(defcustom *regexp-clean-imdb*1223,57618
(defcustom *regexp-clean-loc*1248,58614
(defcustom *regexp-clean-gilt-group* 1298,61791
(defcustom *regexp-ital-to-eng* 1319,62642
(defcustom *regexp-defranc-dates*1354,64182
(defcustom *regexp-defranc-places* 1419,67147
(defcustom *regexp-defranc-benezit*1557,71725
(defcustom *regexp-clean-benezit-fields*1637,74649
(defcustom *regexp-german-to-eng*1671,76211
(defcustom *regexp-clean-bib*1697,77251
(defcustom *regexp-common-abbrevs*1727,78369
(defcustom *regexp-wrap-url-schemes* 1793,81077
(defcustom *regexp-rgb-hex*1844,83894
(defcustom *regexp-percent-encoding-reserved-chars*1883,85885
(defvar *regexp-cp1252-to-latin1*1906,86936
(defconst *google-define-html-entry-table*1929,88210
(defvar *regexp-clean-html-decimal-char-entity* 2018,93996
(defvar *regexp-clean-html-named-char-entity* 2047,95612
(defvar *regexp-clean-ulan-diacritics*2075,97140
(defvar *regexp-clean-ulan*2161,102286
(defvar *regexp-clean-ulan-fields*2208,104963
(defvar *regexp-clean-ulan-dispatch-chars* 2316,109973
(defvar *regexp-ulan-contribs* 2361,112391

naf-mode/mon-rename-image-utils.el,1052
(defun mon-get-ebay-bmps-in-dir 448,19695
(defun mon-get-nefs-in-dir 471,20794
(defun mon-insert-ebay-bmps-in-file 489,21757
(defun mon-get-ebay-jpgs-list 510,22690
(defun mon-insert-ebay-jpgs-in-file 537,23973
(defun mon-get-ebay-jpgs-count 555,24796
(defun mon-get-ebay-bmps-count 572,25497
(defun mon-get-ebay-img-count-verify 589,26200
(defun mon-cln-img-magic-hex 613,27266
(defun mon-get-ebay-img-css 672,30276
(defun mon-get-ebay-img-name-to-col 732,33249
(defun mon-get-ebay-css-pp-region-to-file 759,34273
(defun mon-get-ebay-css-pp 794,35784
(defun mon-insert-css-colors 854,37990
(defun mon-rename-imgs-in-dir 898,40071
(defun mon-check-image-type 956,42905
(defun mon-ebay-image-directory-not-ok 977,43908
(defun mon-ebay-image-directory-ok-p 1014,45538
(defun mon-image-rename-propertize 1079,48337
(defun mon-parse-rename-images 1195,55983
(defun mon-shorten-rename-image-path 1213,56847
(defun mon-parse-rename-lengths 1225,57487
(defun mon-pad-rename-lengths 1255,58924
(defun mon-build-rename-buffer 1333,63475

naf-mode/mon-dir-utils.el,2652
(defgroup mon-dir-utils 274,13600
(defcustom *mon-dir-utils-xrefs* 291,14243
(defcustom *mon-add-subdirs-to-list-ignorables*337,16941
(defcustom *regexp-add-subdirs-to-list-filter-ignorables* 360,18111
(defun mon-file-truename-p 390,19744
(defun mon-file-dir-attributes->plist 516,26050
(defun mon-file-ensure-extension-is-el 590,29955
(defun mon-file-get-load-history-if 638,32831
(defun mon-ffap-view-file 699,36355
(defun mon-ffap-view-file-other-window 718,37114
(defun mon-find-buffer-visiting-other-live-frame 739,37990
(defun mon-dired-find-file-other-frame 793,40129
(defun mon-copy-file-dired-as-list 821,41696
(defun mon-copy-file-dired-as-string 847,42935
(defun mon-toggle-dired-dwim-target 881,44638
(defun mon-dired-buffers-complete 913,45989
(defun mon-dired-other-window 1085,55641
(defun mon-dired-srt-alph 1098,56318
(defun mon-dired-srt-chrn 1109,56842
(defun mon-dired-srt-type 1120,57388
(defun mon-dired-srt-type-alph 1131,57906
(defun mon-dired-srt-type-chrn 1142,58442
(defun mon-dired-up-directory-this-buffer 1157,59178
(defun mon-dired-uninsert-subdir 1175,59941
(defun mon-dired-uninsert-subdir-all 1196,60976
(defun mon-dired-insert-dirs-recursive 1220,62150
(defun mon-dired-unmark-elc 1231,62722
(defun mon-async-du-dir 1264,64395
(defun mon-get-dir-size 1294,65747
(defun mon-dir-make-xargs-arg-file 1329,67419
(defun mon-get-new-buffer-w-stamp 1368,69609
(defun mon-get-dir-name-absolute 1423,72569
(defun mon-get-relative-w-absolute 1455,74185
(defun mon-copy-files-in-sub-dirs 1507,77146
(defun mon-copy-file-multiple 1575,80979
(cl-defun mon-file-reduce-name 1604,82428
(defun mon-build-path 1653,84858
(defun mon-buffer-written-p 1727,88878
(defun mon-string-split-buffer-name 1760,90551
(defun mon-string-split-buffer-parent-dir-quick 1791,92018
(defun mon-string-split-buffer-parent-dir 1817,93301
(defun mon-get-buffer-parent-dir 1865,95856
(defun mon-string-split-pathname 1932,99282
(defun mon-string-split-dir-recurse 1986,102349
(defun mon-dir-common-paths 2050,105964
(defun mon-dir-get-subdirs 2086,107745
(defun %mon-dir-get-subdirs-filter-full 2127,110141
(defun %mon-dir-get-subdirs-filter-no-full 2144,111036
(defun mon-add-subdirs-to-list 2166,112275
(defun mon-find-file 2251,117187
(defun mon-insert-subdirs-in-buffer 2273,118032
(defun mon-get-dir-subdir-default 2306,119682
(defun mon-rename-file-serial 2359,122510
(defun mon-copy-file-path 2404,124385
(defun mon-get-buffers-directories 2484,128319
(defun mon-proc-buffers-directories 2535,131047
(defun mon-get-proc-buffers-directories 2594,133697
(defun mon-dir-build-list 2671,137400

naf-mode/naf-mode-publications-periodicals-english.el,323
(defvar *naf-mode-publications-periodicals-english-xrefs*83,2720
(defvar *naf-publications-periodicals-english* 101,3543
(defconst naf-mode-publications-periodicals-english419,12228
(defvar *naf-publications-periodicals-english-one-word* 434,13038
(defconst naf-mode-publications-periodicals-english-one-word455,13431

naf-mode/naf-mode-db-flags.el,514
(defvar *naf-mode-db-flags-xrefs* 144,4857
(defconst naf-mode-timestamp-flag 165,5593
(defconst naf-mode-accessed-by-flag197,6948
(defconst naf-mode-url-flag 245,8888
(defconst naf-mode-url-wrapper-flag 275,10128
(defconst naf-mode-db-numbers-flag293,11061
(defconst naf-mode-db-field-flags-bnf349,13313
(defconst naf-mode-db-field-flags370,14275
(defvar naf-alternate-name-flags384,14889
(defconst naf-mode-alternate-name-flags 408,16165
(defvar *naf-x-of*425,16927
(defconst *naf-mode-x-of*461,18609

naf-mode/mon-jg-directory-creator.el,173
(defvar *mon-jg-file-template* 116,3530
(defun* mon-make-jg-dir-in-path 149,4926
(defun mon-write-jg-file-in-path 245,9696
(defun mon-format-jg-file-for-write 270,11002

naf-mode/naf-mode-xrefs.el,80
(defgroup naf-mode-xrefs 115,3366
(defcustom *naf-mode-xref-of-xrefs*127,3830

naf-mode/mon-utils.el,1773
(defgroup mon-base 469,25849
(defgroup mon-xrefs 485,26419
(defvar *mon-utils-post-load-requires* 542,29404
(defcustom *mon-xrefs-xrefs*608,31828
(defcustom *mon-default-comment-start* 641,33769
(defcustom *mon-default-comment-divider* 679,35798
(defcustom *mon-timestamp-cond* 693,36448
(defvar *mon-recover-nil-t-default-plist* 707,37179
(defun mon-recover-nil-t-default-plist 722,38008
(defmacro mon-check-feature-for-loadtime 775,40971
(defun mon-utils-require-features-at-loadtime 829,43664
(defun mon-after-mon-utils-loadtime 856,45010
(defun mon-match-at-point 948,50523
(defun mon-looking-back-p 986,52125
(defun mon-string-read-match-string 1025,53844
(defun mon-view-help-source 1070,56043
(defun mon-map-obarray-symbol-plist-props 1100,57417
(defun mon-escape-lisp-string-region 1169,61474
(defun mon-unescape-lisp-string-region 1201,62744
(defun mon-quote-sexp 1223,63664
(defun mon-toggle-eval-length 1247,64555
(defun mon-pretty-print-sexp-at-point 1288,66439
(defun mon-princ-cb 1351,69087
(defun mon-eval-sexp-at-point 1365,69688
(defun mon-eval-print-last-sexp 1393,70819
(defun mon-eval-expression 1406,71306
(defun mon-extend-selection 1442,72919
(defun mon-list-fonts-display 1469,73830
(defun mon-font-at-point 1520,76039
(defun mon-semnav-up 1533,76562
(defun mon-show-columns 1555,77202
(defun mon-nuke-and-eval 1591,78928
(defun mon-unbind-defun 1625,80435
(defun mon-unbind-symbol 1638,81043
(defun mon-unbind-function 1651,81653
(defun mon-unbind-command 1661,82125
(defun mon-unbind-variable 1671,82591
(defun mon-dump-object-to-file 1693,83661
(defun mon-byte-compile-and-load 1725,85219
(defun mon-compile-when-needed 1744,86080
(defun mon-load-or-alert 1772,87615
(defun mon-erc-query-user 1795,88714

naf-mode/mon-window-utils.el,522
(defgroup mon-window-utils 146,5022
(defcustom *mon-window-utils-xrefs*159,5496
(defun mon-frame-live-visible-graphic-p 180,6546
(defun mon-map-windows->plist 209,8060
(defun mon-twin-horizontal 281,11873
(defun mon-twin-vertical 291,12207
(defun mon-toggle-menu-bar 302,12523
(defun mon-scratch 318,13195
(defun mon-switch-to-messages 340,14195
(defun mon-kill-completions 349,14543
(defun mon-delete-completion-window 362,14998
(defun mon-temp-buffer-show-finish 395,16918
(defun mon-flip-windows 416,18070

naf-mode/naf-mode-publications-periodicals-intnl.el,177
(defvar *naf-mode-publications-periodicals-intnl-xrefs*98,3217
(defvar *naf-publications-periodicals-intnl*117,4070
(defconst naf-mode-publications-periodicals-intnl175,6955

naf-mode/mon-doc-help-char-encoding-lossage.el,878
(defgroup mon-doc-help-char-encoding-lossage 139,4531
(defun mon-make-encoding-position-lossage-table 154,5168
(defcustom *mon-doc-help-char-encoding-lossage-xrefs*196,7579
(defcustom *8859-1-8859-15-lossage*224,9005
(defcustom *8859-1-8859-15-lossage-rules*255,10844
(defcustom *cp1252-8859-15-lossage*270,11496
(defcustom *cp1252-8859-15-lossage-rules*304,13655
(defcustom *cp1252-8859-1-lossage*321,14406
(defcustom *cp1252-8859-1-lossage-rules*351,16292
(defun mon-get-encoding-codepoint 368,17115
(defun mon-get-encoding-position-lossage 431,21229
(defun mon-get-encoding-point-hist 472,23939
(defun mon-get-encoding-map-results 509,25936
(cl-defun mon-get-encoding-point-hist-map-plists 541,27559
(defun mon-help-cp1252-iso-8859-1-lossage 587,30151
(defun mon-help-iso-8859-1-8859-15-lossage 615,31622
(defun mon-help-cp1252-iso-8859-15-lossage 641,33010

naf-mode/mon-word-count-utils.el,452
(defun mon-get-syntax-at 119,3244
(defun mon-get-syntax-class-at 144,4477
(defun mon-line-test-content 175,5805
(defun mon-word-get-next 306,14183
(defun mon-word-get-list-in-buffer 335,15233
(defun mon-word-reverse-region 389,17728
(defun mon-word-iterate-over 431,19411
(defun mon-word-count-analysis 461,20749
(defun mon-word-count-occurrences 501,22825
(defun mon-word-count-region 610,29029
(defun mon-word-count-chars-region 627,29693

naf-mode/naf-mode-db-fields.el,252
(defconst naf-mode-delim 119,4861
(defconst naf-mode-comment-delim 132,5440
(defconst naf-mode-name-divider 145,6076
(defconst naf-mode-db-entry 200,7741
(defconst naf-mode-field-names-bnf434,15815
(defconst naf-mode-db-field-flags-bnf 464,17240

naf-mode/mon-bzr-utils.el,351
(defgroup mon-bzr-utils 118,3503
(defcustom *mon-bzr-utils-xrefs* 136,4181
(defun mon-help-bzr-topics 180,6032
(defun mon-help-bzr-usage 307,13081
(defun mon-help-bzr-aliases 354,15193
(defun mon-help-bzr-init 383,16091
(defun mon-bzr-log-last 615,24355
(defvar *mon-hgignore-template* 627,24867
(defun mon-insert-hgignore-template 779,29536

naf-mode/naf-mccarthy-facts.el,454
(defun facts 22,1143
(defun period 237,10612
(defun rot 243,10775
(defun mvmult 248,10916
(defun vplus 252,11038
(defun vminus 256,11172
(defun scap 260,11311
(defun svmult 264,11440
(defun addup 267,11542
(defconst zerovec 273,11652
(defun length 276,11737
(defconst Imatrix 278,11806
(defun smmult 280,11867
(defun mplus 283,11964
(defun mminus 286,12076
(defun mmult 289,12191
(defun multiplyup 294,12381
(defun wind-power 337,13431

naf-mode/naf-mode-city-names-us.el,79
(defvar *naf-city-names-us*92,3341
(defconst naf-mode-city-names-us 209,5411

naf-mode/mon-doc-help-pacman.el,199
(defvar *regexp-clean-pacman-Q* 113,3495
(defun mon-help-pacman-Q 153,5858
(defvar *regexp-clean-pacman-S* 271,11915
(defun mon-help-pacman-S 316,14714
(defun mon-help-pacman-commands 453,21994

naf-mode/naf-mode-state-names.el,83
(defvar *naf-mode-state-to-postal*82,2967
(defconst naf-mode-state-names146,4816

naf-mode/mon-boxcutter.el,755
(defgroup mon-boxcutter 247,10013
(defcustom *boxcutter-conversion-program* 263,10777
(defcustom *boxcutter-path* 285,12193
(defcustom *boxcutter-captures* 311,13387
(defcustom *boxcutter-title-bar-vig* 335,14447
(defcustom *boxcutter-counter* 354,15247
(defcustom *boxcutter-tstamp* 363,15601
(defvar *boxcutter-captured-last* 374,16053
(defun boxcutter-gen-tstamp 383,16504
(defun boxcutter-incr-cntr 394,16945
(defun boxcutter-mkdir-loadtime 411,17643
(defun boxcutter-gen-fname 429,18600
(defun boxcutter-big-n-small 468,20642
(defun boxcutter-get-win-coords 499,22168
(defun boxcutter-get-frame-coords 552,24801
(defun* boxcutter-capture 595,26900
(defun boxcutter-capture-set-crop 671,30633
(defun boxcutter-call-convert 687,31265

naf-mode/mon-iptables-vars.el,39
(defconst *mon-iptables-alst*117,3465

naf-mode/mon-env-proc-utils.el,567
(defgroup mon-env-proc-utils 137,4620
(defcustom *mon-env-proc-utils-xrefs* 152,5233
(defun mon-get-system-specs 176,6626
(defun mon-get-env-vars-symbols 211,8208
(defun mon-get-env-vars-strings 244,9905
(defun mon-get-env-vars-emacs 290,12104
(defun mon-get-sys-proc-list 366,16316
(defun mon-insert-sys-proc-list 391,17447
(defun mon-get-proc-w-name 411,18256
(defun mon-get-process 453,20471
(defun mon-escape-string-for-cmd 500,22705
(defun mon-terminal 520,23742
(defun mon-cmd 539,24718
(defun mon-firefox 558,25625
(defun mon-conkeror 569,26046

naf-mode/naf-mode-english-roles.el,145
(defgroup naf-mode-english-roles 90,3034
(defconst naf-mode-english-roles-primary206,5789
(defconst naf-mode-english-roles-secondary626,15234

naf-mode/mon-doc-help-utils-supplemental.el,275
(defun mon-comment-divider 172,6812
(defun mon-insert-lisp-testme 202,8046
(defvar *regexp-symbol-defs* 289,12056
(defun mon-string-index 343,14793
(defun mon-string-upto-index 364,15907
(defun mon-string-after-index 378,16621
(defun mon-string-justify-left 399,17830

naf-mode/naf-skeletons.el,229
(define-skeleton book-naf128,4487
(define-skeleton artist-naf202,5760
(define-skeleton people-naf253,6587
(define-skeleton author-naf307,7352
(define-skeleton brand-naf357,8060
(define-skeleton benezit-naf-template417,8937

naf-mode/mon-string-utils.el,1273
(defgroup mon-string-utils 173,6558
(defcustom *mon-string-utils-xrefs* 185,7032
(defun mon-string-split 215,8716
(defun mon-string-spread 276,12312
(defun mon-string-justify-left 377,17245
(defun mon-string-fill-to-col 483,22714
(defun mon-string-index 502,23519
(defun mon-string-upto-index 536,25005
(defun mon-string-after-index 549,25699
(defun mon-string-sort-descending 564,26444
(defun mon-string-position 583,27418
(defun mon-string-has-suffix 597,28148
(defun mon-string-chop-spaces 659,31733
(defun mon-string-ify-list 681,32785
(defun mon-string-split-on-regexp 703,33742
(defun mon-string-replace-char 731,35088
(defun mon-string-sub-old->new 752,36142
(defun mon-string-repeat 791,38214
(defun mon-string-to-hex-list-cln-chars 829,39815
(cl-defun mon-string-to-hex-string 856,41227
(defun mon-string-from-hex-list 905,43720
(defun mon-string-to-hex-list 939,45377
(defun mon-string-infix 982,47531
(defun mon-string-explode 1016,49240
(defun mon-string-permute 1034,50022
(defun mon-string-permute-line 1077,51999
(defun mon-string-splice-sep 1116,53580
(defun mon-string->strings-splice-sep 1191,57438
(defun mon-string-to-regexp 1229,59429
(defun mon-string-match-in-list-p 1265,61135
(defun mon-string-convert-loc 1283,61857

naf-mode/mon-get-mon-packages.el,68
(defvar *mon-el-library*94,2845
(defun mon-wget-mon-pkgs 240,6956

naf-mode/naf-mode-dates.el,978
(defgroup naf-mode-dates 143,4822
(defcustom *naf-mode-date-xrefs* 155,5287
(defcustom naf-weekday-alist188,6384
(defcustom naf-month-abbrev-alist 233,8087
(defcustom naf-mode-english-dates299,10907
(defcustom naf-mode-english-days355,13082
(defcustom naf-mode-french-dates391,14358
(defcustom naf-mode-french-days442,16336
(defcustom naf-mode-simple-date 475,17369
(defcustom naf-mode-year-range490,18013
(defcustom naf-mode-date-string518,18937
(defcustom naf-mode-lifespan 550,20106
(defcustom naf-mode-circa-dates565,20794
(defcustom naf-mode-benezit-date 600,22036
(defcustom naf-active-date-flags 614,22529
(defcustom naf-mode-active-date638,23097
(defcustom naf-active-date-flags-paren 654,23693
(defcustom naf-mode-active-date-flags-paren 682,24298
(defcustom naf-active-date-flags-solo 701,25201
(defcustom naf-mode-active-date-flags-solo 715,25637
(defcustom *regexp-french-date-prefix* 730,26220
(defcustom *regexp-french-date-siecle* 763,27076

naf-mode/naf-mode-students-of-julian.el,1202
(defvar *naf-mode-students-of-julian-xrefs* 109,3843
(defvar *naf-students-of-julian-french*133,4705
(defconst naf-mode-students-of-julian-french 206,9120
(defvar *naf-students-of-julian-us*228,9940
(defconst naf-mode-students-of-julian-us266,11643
(defvar *naf-students-of-julian-germany*287,12408
(defconst naf-mode-students-of-julian-germany302,12960
(defvar *naf-students-of-julian-brazil*324,13784
(defconst naf-mode-students-of-julian-brazil335,14203
(defvar *naf-students-of-julian-canada*356,15012
(defconst naf-mode-students-of-julian-canada376,15833
(defvar *naf-students-of-julian-misc*397,16640
(defconst naf-mode-students-of-julian-misc435,19653
(defvar *naf-students-of-julian-finland*456,20440
(defconst naf-mode-students-of-julian-finland465,20765
(defvar *naf-students-of-julian-norway*486,21586
(defconst naf-mode-students-of-julian-norway 498,22039
(defvar *naf-students-of-julian-uk*519,22854
(defconst naf-mode-students-of-julian-uk531,23277
(defvar *naf-students-of-julian-russia*552,24041
(defconst naf-mode-students-of-julian-russia564,24529
(defvar *naf-students-of-julian-switzerland*585,25338
(defconst naf-mode-students-of-julian-switzerland597,25770

naf-mode/naf-mode-institution.el,674
(defvar *naf-mode-institution-xrefs* 94,3103
(defconst naf-mode-benezit-museum-short 116,3960
(defvar *naf-institution-museum-names*136,4816
(defconst naf-mode-institution-museum-names 180,6219
(defvar *naf-institution-names-anchored*200,6952
(defconst naf-mode-inst-names-anchored 303,9602
(defvar *naf-institution-names-generic* 320,10399
(defconst naf-mode-institution-names-generic 351,11280
(defvar *naf-academy-name* 367,11933
(defconst naf-mode-academy-names 395,13091
(defvar *naf-school-names-intnl*415,13794
(defconst naf-mode-school-names-intnl 455,15838
(defvar *naf-school-names-english*472,16557
(defconst naf-mode-school-names-english 511,17991

naf-mode/mon-tramp-utils.el,638
(defvar *mon-tramp-mode-line-buffer-ident* 262,10346
(defvar *mon-tramp-putty-private-keys* 293,11918
(defvar *mon-tramp-paths-alist* 314,12995
(defvar *mon-tramp-default-methods-l* 342,14622
(defun mon-tramp-plink-example 386,17320
(defun mon-tramp-add-default-methods 417,19032
(defun mon-tramp-utils-loadtime 441,20348
(defun mon-tramp-putty-conf-status 451,20741
(defun mon-tramp-add-pageant-keys 483,22347
(defun mon-ssh-add-p 516,23895
(defun mon-tramp-read-conns 534,24663
(defun mon-tramp-connect 566,26237
(defun mon-tramp-disconnect 581,26854
(defun mon-tramp-su-local 595,27445
(defun mon-tramp-syntax 622,28545

naf-mode/mon-insertion-utils.el,2630
(defgroup mon-insertion-utils 211,9225
(defcustom *mon-insertion-utils-xrefs*225,9732
(defun mon-insert-dirs-in-path 264,11914
(defun mon-insert-file-in-dirs 293,13405
(defun mon-insert-whitespace 371,17468
(defun mon-insert-newlines 395,18653
(defun mon-insert-string-n-fancy-times 426,20205
(defun mon-insert-string-n-times 563,27418
(defun mon-line-number-region 609,29413
(defun mon-string-incr 641,30922
(defun mon-insert-string-ify 795,39353
(defun mon-insert-unicode 813,40245
(defun mon-split-designator 905,45640
(defun mon-comment-divider 928,46511
(defun mon-comment-divider-to-col 957,47964
(defun mon-comment-lisp-to-col 1059,53586
(defun mon-comment-divider-to-col-four 1079,54623
(defun mon-insert-php-comment-divider 1096,55271
(defun mon-insert-user-name-cond 1111,55964
(defun mon-insert-system-type-cond 1144,57551
(defun mon-insert-regexp-template 1165,58506
(defun mon-insert-regexp-template-yyyy 1184,59414
(defun mon-lisp-CL-package-complete 1233,61769
(defun mon-insert-lisp-CL-mode-line-template 1269,63554
(defun mon-insert-lisp-CL-file-template 1374,69172
(defun mon-insert-lisp-CL-package-template 1455,73399
(defun mon-insert-lisp-CL-eval-when 1546,78620
(defun mon-insert-lisp-CL-debug 1589,80597
(defun mon-insert-lisp-doc-eg-xref 1621,82165
(defun mon-insert-lisp-fundoc-eg-xref 1709,86726
(defun mon-insert-lisp-CL-jump-doc 1748,88627
(defun mon-insert-lisp-CL-eol-tilde 1879,95782
(defun mon-insert-lisp-CL-eol-tilde-no-at 1904,96853
(defun mon-insert-lisp-stamp 1929,97960
(defun mon-build-copyright-string 1964,99839
(defun mon-insert-copyright 2054,104878
(defcustom *mon-github-username-for-pathname* 2126,108484
(defcustom *mon-github-repository-name-for-pathname* 2145,109460
(defcustom *mon-github-repository-default-pathname* 2165,110409
(defcustom *mon-github-pathname-url* 2199,112446
(defun mon-build-github-default 2236,114382
(defun mon-build-github-repo-path-defaults 2276,116565
(defun mon-insert-file-template 2363,121746
(defvar *mon-gnu-license-header* 2474,127371
(defvar *mon-gnu-license-header-emacs* 2510,129170
(defvar *mon-mit-license-header* 2532,130198
(defcustom *mon-bsd-license-header-COPYRIGHT-HOLDER* 2575,132435
(defvar *mon-bsd-license-header* 2594,133458
(defvar *mon-gnu-license-header-gfdl* 2649,136518
(defun mon-build-copyright-string-license 2682,138315
(defun mon-insert-gnu-licence 2738,141319
(defun mon-insert-gnu-licence-gfdl 2769,142795
(defun mon-insert-defclass-template 2809,144880
(defun mon-insert-texi-template 2917,150122
(defun mon-comput-45 3024,153967
(defun mon-comput-33 3053,154987

naf-mode/mon-text-property-utils.el,1951
(defsubst mon-insert-w-text-properties 173,7282
(cl-defun mon-get-text-property-intervals 182,7670
(defun %mon-set-buffer-substring 321,16093
(defun %mon-set-buffer-substring-no-properties 347,17368
(defsetf buffer-substring-no-properties 356,17899
(defun mon-remove-text-property 369,18595
(defun mon-remove-single-text-property 383,19414
(defun mon-nuke-text-properties-region 411,20892
(defun mon-get-face-at-point 438,22246
(defun mon-get-text-properties-region-prop 470,23850
(defun mon-get-text-properties-region-prop-list 489,24835
(defun mon-search-text-properties-prop 515,26319
(defun mon-get-text-properties-region-to-kill-ring 540,27385
(defun mon-get-text-properties-category 569,28721
(defun mon-list-all-properties-in-buffer 587,29558
(defun mon-nuke-text-properties-buffer 617,31166
(defun mon-get-next-face-property-change 644,32844
(defun mon-get-next-face-property-change-if 677,34638
(defun mon-get-text-properties-region 713,36415
(defun mon-get-text-properties-print 743,38169
(defun mon-get-text-properties-read-temp 763,39074
(defun mon-get-text-properties-elisp-string-pp 791,40410
(defun mon-get-text-properties-elisp-string 826,42004
(defun mon-get-text-properties-parse-prop-val-type-chk 860,43760
(defun mon-get-text-properties-parse-buffer 906,45759
(defun mon-get-text-properties-parse-sym 968,49109
(cl-defun mon-get-text-properties-parse-buffer-or-sym 1004,51009
(defun mon-get-text-properties-map-ranges 1064,54379
(defun mon-get-text-properties-map-ranges-string 1088,55503
(defun mon-get-text-property-bounds 1120,57151
(defun mon-get-text-property-remove-all 1147,58597
(defun mon-overlay-flash-region 1171,59610
(defun mon-get-overlays-region 1220,62388
(defun mon-get-overlays-region-map-props 1265,64360
(defun mon-get-overlays-map-props 1315,66742
(defun mon-get-overlays-buffer 1351,68500
(defun mon-set-overlay-range 1377,69788
(defun mon-nuke-overlay-buffer 1397,70812

naf-mode/mon-doc-help-proprietary.el,301
(defvar *mon-compromise-my-ms-W32-virginity* 67,1909
(defvar *mon-help-w32-CMD-commands* 76,2468
(defun mon-help-w32-cmd-commands 88,3195
(defun mon-bind-doc-help-proprietery-vars-at-loadtime 113,4524
(defun mon-help-w32-shell-execute 153,6860
(defvar *mon-help-w32-CMD-commands-TEMP* 382,18990

naf-mode/ebay-template-mode/ebay-template-mode.el,613
(defconst *mon-ebay-template-mode-version* 154,5072
(defgroup ebay-template-mode 160,5338
(defgroup ebay-template-mode-faces 170,5664
(defcustom *mon-ebay-account-ids* 181,6020
(defcustom *mon-ebay-comment-prefix* 197,6705
(defvar *mon-ebay-field-entry* 206,7038
(defvar *mon-ebay-field-delims* 251,9124
(defvar *mon-ebay-line-delims* 268,9960
(defvar *mon-ebay-template-font-lock-keywords* 317,12155
(defvar *mon-ebay-template-mode-map*345,13593
(defvar *mon-ebay-template-mode-hook* 388,15934
(defvar *mon-ebay-template-mode-syntax-table*399,16266
(define-derived-mode ebay-template-mode 417,17010

naf-mode/ebay-template-mode/ebay-template-html-utils.el,735
(defvar xmlgen-escape-attribute-vals 165,4942
(defvar xmlgen-escape-elm-vals 169,5067
(defvar xmlgen-escapees173,5187
(defun xmlgen 182,5434
(defun xmlgen-string-escape 235,7300
(defun xmlgen-attr-to-string 247,7708
(defun xmlgen-extract-plist 268,8509
(defgroup html-lite 390,13097
(defcustom html-lite-doctype 396,13262
(defconst html-lite-version 408,13832
(defconst html-lite-doctype-alist411,13903
(defmacro html-lite-define-elements 436,15000
(defun html-lite-make-element 456,15707
(defmacro with-html-lite-header 489,16601
(defun html-lite-escape-string 501,16942
(defun html-doctype 508,17242
(defun html-lite-make-name 517,17591
(defun html-lite-write-tree 522,17736
(defun html-lite-browse-tree 536,18118

naf-mode/ebay-template-mode/ebay-template-tools-ewiki.el,1360
(defun mon-insert-ebay-template 86,2600
(defvar *mon-ebay-template* 107,3613
(defun mon-choose-ebay-delims 181,6239
(defun mon-choose-ebay-account 199,7360
(defun mon-make-html-tree 211,7890
(defun mon-insert-ebay-html-tree 225,8317
(defun mon-make-ebay-dir-list 234,8756
(defun mon-make-ebay-dir-list-2 253,9555
(defun mon-insert-ebay-dirs 307,11936
(defun mon-insert-ebay-dbc-file 357,14621
(defun mon-check-ebay-template-path 375,15541
(defun mon-insert-ebay-dbc-template 462,21635
(defun mon-get-ebay-bmps-in-dir 508,24112
(defalias 'get-bmps-in-dir get-bmps-in-dir525,24945
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list526,24999
(defun mon-get-nefs-in-dir 534,25338
(defalias 'get-nefs-in-dir get-nefs-in-dir550,26168
(defun mon-insert-ebay-bmps-in-file 554,26331
(defun mon-get-ebay-jpgs-list 573,27068
(defun mon-insert-ebay-jpgs-in-file 600,28205
(defun mon-get-ebay-jpgs-count 619,28960
(defun mon-get-ebay-bmps-count 631,29397
(defun mon-get-ebay-img-count-verify 643,29832
(defun mon-ebay-field-trigger 680,31408
(defun mon-insert-ebay-field-trigger-r 718,33329
(defun mon-insert-ebay-field-trigger-l 731,33754
(defun mon-insert-ebay-field-trigger-l-and-r 744,34182
(defun mon-insert-ebay-photo-per-scan-descr 764,34869
(defun mon-ebay-image-linkify 790,36162
(defun mon-ebay-image-linkify-lite 841,38415

naf-mode/ebay-template-mode/ebay-template-tools.el,991
(defvar *mon-html-ebay-template* 150,5509
(defvar *mon-html-domain-for-ebay-template*160,5843
(defvar *mon-ebay-image-linkify-templates*173,6455
(defun mon-insert-ebay-template 187,7077
(defvar *mon-ebay-template* 223,9060
(defun mon-choose-ebay-delims 304,12055
(defun mon-choose-ebay-account 324,13353
(defun mon-make-html-tree 341,14154
(defun mon-insert-ebay-html-tree 360,14926
(defun mon-make-ebay-dir-list 372,15522
(defun mon-make-ebay-dir-list-2 396,16573
(defun mon-insert-ebay-dirs 447,19017
(defun mon-insert-ebay-dbc-file 493,21501
(defun mon-check-ebay-template-path 513,22568
(defun mon-insert-ebay-dbc-template 603,28869
(defun mon-ebay-field-trigger 657,31714
(defun mon-insert-ebay-field-trigger-r 699,33791
(defun mon-insert-ebay-field-trigger-l 715,34415
(defun mon-insert-ebay-field-trigger-l-and-r 731,35039
(defun mon-insert-ebay-photo-per-scan-descr 753,35869
(defun mon-ebay-image-linkify 779,37208
(defun mon-ebay-image-linkify-lite 834,40088

naf-mode/naf-mode-events.el,605
(defvar *naf-mode-events-xrefs* 102,3453
(defvar *naf-art-events-generic*211,7613
(defconst naf-mode-art-events-generic 224,8186
(defvar *naf-art-events-generic-french*236,8752
(defconst naf-mode-art-events-generic-french 254,9283
(defvar *naf-art-events-french*266,9905
(defconst naf-mode-art-events-french 295,11423
(defvar *naf-art-events-generic-english*308,11988
(defconst naf-mode-art-events-generic-english 337,12748
(defvar *naf-art-events-english*350,13381
(defconst naf-mode-art-events-english 380,14928
(defvar *naf-world-events*394,15499
(defconst naf-mode-world-events 416,16050

naf-mode/mon-cl-compat.el,5132
(defun cl::cl-simple-expr-p 262,10550
(defun cl::cl-simple-exprs-p 277,11141
(defun cl::cl-safe-expr-p 285,11362
(defun cl::cl-const-expr-p 298,11935
(defun cl::cl-const-exprs-p 309,12302
(defun cl::cl-const-expr-val 316,12494
(defun cl::cl-expr-access-order 321,12671
(defun cl::cl-expr-contains 332,13029
(defun cl::cl-expr-contains-any 343,13382
(defun cl::cl-expr-depends-p 350,13623
(defun cl::gensym 359,13900
(defun cl::gentemp 371,14343
(defun cl::cl-defun-expander 382,14789
(defun cl::cl-do-proclaim 390,15021
(defun cl::cl-defsubst-expand 427,16601
(defun cl::cl-transform-function-property 467,18711
(defun cl::cl-transform-lambda 483,19431
(defun cl::cl-do-arglist 539,22245
(defun cl::cl-arglist-args 673,27341
(defun cl::cl-compile-time-too 687,27883
(defun cl::cl-byte-compile-block 703,28544
(defun cl::cl-byte-compile-throw 718,29210
(defun cl::compiler-macroexpand 732,29739
(defun cl::cl-byte-compile-compiler-macro 748,30353
(defun cl::cl-make-type-test 755,30611
(defun cl::reduce 793,32316
(defun cl::fill 814,33155
(defun cl::replace 834,33783
(defun cl::remove* 877,35586
(defun cl::remove-if 923,37336
(defun cl::remove-if-not 932,37718
(defun cl::delete* 941,38112
(defun cl::delete-if 985,39745
(defun cl::delete-if-not 993,40097
(defun cl::remove-duplicates 1001,40461
(defun cl::delete-duplicates 1008,40734
(defun cl::cl-delete-duplicates 1014,40992
(defun cl::substitute 1055,42690
(defun cl::substitute-if 1077,43572
(defun cl::substitute-if-not 1086,43991
(defun cl::nsubstitute 1095,44422
(defun cl::nsubstitute-if 1129,45823
(defun cl::nsubstitute-if-not 1137,46214
(defun cl::find 1145,46617
(defun cl::find-if 1154,46972
(defun cl::find-if-not 1162,47282
(defun cl::position 1170,47604
(defun cl::cl-position 1179,48020
(defun cl::position-if 1201,48841
(defun cl::position-if-not 1209,49172
(defun cl::count 1217,49515
(defun cl::count-if 1232,50158
(defun cl::count-if-not 1239,50419
(defun cl::mismatch 1246,50692
(defun cl::search 1277,52107
(defun cl::sort* 1304,53278
(defun cl::stable-sort 1319,53863
(defun cl::merge 1327,54177
(defun cl::member* 1345,54983
(defun cl::member-if 1360,55526
(defun cl::member-if-not 1368,55820
(defun cl::cl-adjoin 1377,56188
(defun cl::assoc* 1385,56460
(defun cl::assoc-if 1401,57047
(defun cl::assoc-if-not 1408,57302
(defun cl::rassoc* 1415,57572
(defun cl::rassoc-if 1429,58093
(defun cl::rassoc-if-not 1436,58350
(defun cl::union 1443,58622
(defun cl::nunion 1464,59491
(defun cl::intersection 1475,59977
(defun cl::nintersection 1498,61335
(defun cl::set-difference 1508,61799
(defun cl::nset-difference 1528,62593
(defun cl::set-exclusive-or 1539,63089
(defun cl::nset-exclusive-or 1552,63743
(defun cl::subsetp 1565,64363
(defun cl::subst-if 1580,64901
(defun cl::subst-if-not 1588,65271
(defun cl::nsubst 1596,65653
(defun cl::nsubst-if 1605,66025
(defun cl::nsubst-if-not 1613,66405
(defun cl::sublis 1623,66883
(defun cl::cl-sublis-rec 1632,67263
(defun cl::nsublis 1646,67772
(defun cl::cl-nsublis-rec 1656,68196
(defun cl::tree-equal 1671,68874
(defun cl::cl-tree-equal-rec 1679,69217
(defun cl::cl-set-substring 1692,69619
(defun cl::cl-macroexpand 1707,70183
(defun cl::cl-compiling-file 1726,71058
(defun cl::proclaim 1736,71443
(defun cl::cl-random-time 1743,71688
(defun cl::list* 1750,71924
(defun cl::ldiff 1765,72451
(defun cl::floatp-safe 1776,72814
(defun cl::plusp 1784,73096
(defun cl::minusp 1790,73238
(defun cl::oddp 1797,73420
(defun cl::evenp 1804,73611
(defun cl::subst 1810,73764
(defun cl::cl-do-subst 1821,74294
(defun cl::copy-list 1832,74683
(defun cl::acons 1845,75127
(defun cl::pairlis 1853,75407
(defun cl::mapcar* 1862,75792
(defun cl::subseq 1886,76732
(defun cl::coerce 1914,77716
(defun cl::typep 1932,78438
(defun cl::gcd 1941,78723
(defun cl::lcm 1952,79029
(defun cl::isqrt 1965,79360
(defun cl::floor* 1979,79764
(defun cl::ceiling* 1988,80079
(defun cl::truncate* 1998,80464
(defun cl::round* 2007,80816
(defun cl::mod* 2028,81484
(defun cl::rem* 2035,81678
(defun cl::signum 2042,81877
(defun cl::cl-mapcar-many 2050,82157
(defun cl::map 2085,83212
(defun cl::maplist 2095,83601
(defun cl::cl-mapc 2117,84301
(defun cl::mapl 2128,84644
(defun cl::mapcan 2140,85040
(defun cl::mapcon 2148,85334
(defun cl::some 2156,85625
(defun cl::every 2174,86259
(defun cl::notany 2190,86798
(defun cl::notevery 2198,87072
(defun cl::concatenate 2206,87351
(defun cl::revappend 2217,87767
(defun cl::nreconc 2224,87940
(defun cl::list-length 2231,88116
(defun cl::tailp 2241,88489
(defun cl::get* 2251,88854
(define-compiler-macro cl::get* 2261,89256
(defun cl::cl-set-getf 2271,89508
(defun cl::cl-do-remf 2279,89789
(defun cl::cl-remprop 2287,90069
(defun cl::cl-prettyprint 2301,90570
(defun cl::cl-do-prettyprint 2319,91159
(defvar cl::cl-macroexpand-cmacs 2349,92217
(defvar cl::cl-closure-vars 2350,92255
(defun cl::cl-macroexpand-all 2352,92303
(defun cl::cl-macroexpand-body 2437,96140
(defun cl-prettyexpand 2443,96351
(defun mon-cl-compat-loadtime 2456,96910

naf-mode/naf-mode-nation-french.el,127
(defvar *naf-mode-nation-french-xrefs* 83,2674
(defvar *naf-nation-french*101,3339
(defconst naf-mode-nation-french270,7194

naf-mode/naf-mode-regions.el,95
(defconst naf-mode-region-names-other193,5120
(defconst naf-mode-region-names-french345,8510

naf-mode/naf-mode.el,356
(defgroup naf-mode 209,6414
(defgroup naf-mode-faces 220,6775
(defconst *naf-mode-version* 235,7273
(defcustom *naf-comment-prefix* 241,7558
(defvar naf-font-lock-keywords251,7908
(defvar naf-mode-syntax-table381,16072
(defvar naf-mode-map406,17130
(defun new-naf 887,42902
(defvar naf-mode-hook 908,43855
(define-derived-mode naf-mode 914,44075

naf-mode/mon-lisppaste.el,79
(defcustom *tt--colorize-as* 327,11270
(defun mon-lisppaste-region 336,11564

naf-mode/mon-color-utils.el,715
(defun mon-color-mix 161,5773
(defun mon-color-mix-display 191,7304
(defun mon-defined-colors-without-duplicates 228,9315
(defun mon-rgb-to-hsv 259,10762
(defvar *mon-colorcomp-ewoc* 318,13528
(defvar *mon-colorcomp-data* 320,13565
(defvar *mon-colorcomp-mode-map* 322,13602
(defvar *mon-colorcomp-labels* 324,13643
(defun mon-colorcomp-pp 328,13758
(defun mon-colorcomp 350,14695
(defun mon-colorcomp-mod 387,16232
(defun mon-colorcomp-R-more 403,16962
(defun mon-colorcomp-G-more 413,17407
(defun mon-colorcomp-B-more 422,17851
(defun mon-colorcomp-R-less 431,18294
(defun mon-colorcomp-G-less 440,18735
(defun mon-colorcomp-B-less 449,19178
(defun mon-colorcomp-copy-as-kill-and-exit 460,19697

naf-mode/naf-mode-benezit-flags.el,151
(defconst naf-mode-benezit-section-flag92,3119
(defconst naf-mode-benezit-currency-acronym99,3522
(defvar *naf-mode-benezit-currency-alist*171,6383

naf-mode/mon-mysql-utils.el,1004
(defun mon-cln-pipes-get-field-col 137,4719
(defalias 'mon-mysql-get-field-col mon-mysql-get-field-col206,8333
(defun %subst% 217,8857
(defun mon-cln-pipes 256,10411
(defalias 'mon-mysql-cln-pipes mon-mysql-cln-pipes445,20780
(defun mon-cln-pipes-map-field-pairs 473,21908
(defalias 'mon-mysql-cln-pipes-map-col-field mon-mysql-cln-pipes-map-col-field525,24174
(defun mon-csv-string-to-list 552,25330
(defalias 'mon-mysql-csv-to-list mon-mysql-csv-to-list587,27155
(defun mon-csv-string-map-list 595,27454
(defalias 'mon-mysql-csv-map-list mon-mysql-csv-map-list610,28284
(defun mon-csv-map-col-field-pairs 620,28758
(defalias 'mon-mysql-csv-map-col-field mon-mysql-csv-map-col-field645,29972
(defun mon-csv-split-string 665,30736
(defalias 'mon-mysql-csv-split-string mon-mysql-csv-split-string699,32343
(defvar *regexp-clean-mysql* 704,32546
(defun mon-bind-mysql-help-table-loadtime 737,34296
(defun mon-help-mysql-complete 913,46896
(defun mon-help-mysql-commands 940,48176

naf-mode/google-define-redux.el,2416
(defgroup google-define-redux 209,7933
(defgroup google-define-redux-faces 234,9053
(defcustom *google-define-redux-xrefs* 251,9748
(defcustom *google-define-get-buffer* 299,12292
(defcustom *google-define-buffer-suffix* 317,13125
(defvar *get-google-defined* 336,14051
(defvar *regexp-google-define-headings* 361,15045
(defvar *regexp-google-define-itemized*385,15955
(defvar *regexp-google-define-dictionary-heading-tag*415,17557
(defvar *regexp-google-define-next-url-in-heading*449,18663
(defvar *regexp-google-define-source-ref*495,20298
(defface gg-def-base544,21991
(defface gg-def-delim 560,22681
(defface gg-def-heading578,23423
(defface gg-def-num 591,23983
(defface gg-def-inition604,24569
(defface gg-def-defined620,25362
(defcustom *regexp-google-defined-fontlock*632,25880
(defun google-define-get-command 676,28608
(defun %google-define-verify-query-url-lang-params 735,31550
(defun %google-define-verify-query-url-xref-type-params 755,32435
(defun google-define-clean-string 774,33210
(defun %google-define-clean-term-for-split 818,35691
(defun %google-define-clean-heading-for-replace 838,36720
(defun* google-define-make-query-url 851,37466
(defun google-define-parse-buffer 905,40304
(defun google-define-font-lock 1046,48040
(defun %google-define-set-url-current-object 1078,49831
(defun google-define 1111,51492
(defun google-define-kill-def-buffers 1166,54344
(defun google-define-find-next-heading 1211,56290
(defun google-define-make-heading-replacement 1241,57803
(defun google-define-find-next-url-in-heading 1266,58944
(defun google-define-find-headings 1312,60733
(defun %google-define-find-itemized-regexp-for-search-term 1350,62416
(defun google-define-find-itemized 1373,63234
(defun google-define-parse-related-languages 1402,64177
(defun %google-define-find-next-related-lang-regexp-for-search-term 1425,65107
(defun google-define-find-next-related-language-xref 1473,66425
(defun google-define-related-language-url 1485,67016
(defun google-define-related-language-xref 1514,68635
(defun google-define-button-action 1582,71242
(defun google-define-button-do-xref 1595,71779
(defun google-define-insert-xref-button 1606,72195
(define-button-type 'google-define-buttongoogle-define-button1624,72956
(define-button-type 'google-related-lang-buttongoogle-related-lang-button1632,73190
(defconst *google-define-html-entry-table*1759,79291

naf-mode/mon-line-utils.el,2063
(defgroup mon-line-utils 228,8687
(defcustom *mon-line-utils-xrefs*240,9152
(defun mon-line-get-next 276,11186
(defun mon-line-find-duplicates 297,12103
(defun mon-line-find-duplicates-cln 326,13564
(defun mon-line-previous-duplicate 372,15758
(defun mon-line-count-region 410,17626
(defun mon-line-count-buffer 420,18074
(defun mon-line-count-matchp 460,19997
(defun mon-line-length-max 488,21172
(defun mon-line-strings 513,22129
(defun mon-line-strings-region 568,24046
(defun mon-line-strings-qt-region 620,26057
(defun mon-line-strings-bq-qt-sym-bol 681,29170
(defun mon-line-strings-pipe-bol 744,32706
(defun mon-line-strings-indent-to-col 795,34795
(defun mon-line-indent-from-to-col 876,38424
(defun mon-line-strings-pipe-to-col 951,41974
(defun mon-line-pipe-lines 1002,44476
(defun mon-line-strings-to-conses 1061,46576
(defun mon-line-strings-to-list 1095,47997
(defun mon-line-strings-one-list 1176,52395
(defun mon-line-string-rotate-name 1201,53598
(defun mon-line-string-rotate-namestrings 1244,55975
(defun mon-line-string-unrotate-namestrings 1301,58174
(defun mon-line-string-rotate-namestrings-combine 1376,61453
(defun mon-line-string-insert-chars-under 1431,63609
(defun mon-line-drop-in-words 1477,65884
(defun mon-line-string-incr-padded 1541,69878
(defun mon-line-number-region-incr 1580,71975
(defun mon-line-string-get 1626,74148
(defun mon-line-string-split 1652,75412
(defun mon-spacep 1705,78036
(defun mon-spacep-not-bol 1734,79500
(defun mon-spacep-is-bol 1755,80522
(defun mon-spacep-is-after-eol 1777,81596
(defun mon-spacep-is-after-eol-then-graphic 1795,82535
(defun mon-spacep-at-eol 1824,84084
(defun mon-spacep-first 1845,85182
(defun mon-line-bol-is-eol 1863,85915
(defun mon-line-previous-bol-is-eol 1884,87008
(defun mon-line-next-bol-is-eol 1912,88423
(defun mon-line-eol-is-eob 1936,89537
(defun mon-line-end-or-code-end 1965,90984
(defun mon-backspace 1992,92150
(defun mon-goto-line-25% 2004,92517
(defun mon-goto-line-50% 2017,93128
(defun mon-goto-line-75% 2030,93718

naf-mode/mon-url-utils.el,1709
(defgroup mon-url-utils 201,7787
(defcustom *mon-url-utils-xrefs* 215,8341
(defcustom *mon-url-search-paths* 253,10443
(defcustom *mon-purge-on-its-all-text-on-quit* 297,12652
(defcustom *mon-purge-htmlfontify-dir-on-quit* 318,13548
(defcustom *regexp-hexcolor-keywords* 335,14302
(defun mon-its-all-text-purge-on-quit 365,15692
(defun mon-html-fontify-generate-file-name 416,18590
(defun mon-htmlfontify-dir-purge-on-quit 447,20313
(defun mon-htmlfontify-buffer-to-firefox 495,23304
(defun mon-htmlfontify-region-to-firefox 529,24949
(defun mon-hexcolor-add-to-font-lock 564,26623
(defun mon-url-encode 578,27495
(defun mon-url-decode 602,28642
(defun mon-search-ulan 630,30090
(defun mon-search-ulan-for-name 701,34130
(defun mon-search-wikipedia 710,34488
(defun mon-search-loc 735,35668
(defun mon-search-bnf 752,36528
(defun mon-insert-dbc-link 767,37283
(defun mon-insert-dbc-doc-link 780,37819
(defun mon-wrap-one-url 821,39437
(defun mon-wrap-all-urls 875,42191
(defun mon-wrap-url 922,44643
(defun mon-wrap-span 946,45581
(defun mon-make-html-table-string 971,46323
(defun mon-make-html-table 1000,47560
(defun mon-url-retrieve-to-new-buffer 1026,48715
(defun mon-get-host-address 1046,49848
(defun mon-w3m-dired-file 1080,51258
(defun mon-w3m-kill-url-at-point 1093,51861
(defun mon-get-w3m-url-at-point-maybe 1109,52633
(defun mon-get-w3m-url-at-point 1130,53745
(defun mon-w3m-goto-url-at-point 1154,54899
(defun mon-w3m-read-gnu-lists-nxt-prv 1179,56179
(defcustom *mon-tld-list* 1293,61495
(defsubst mon-tld-tld 1591,73892
(defsubst mon-tld-name 1597,74120
(defun mon-tld-find-tld 1605,74424
(defun mon-tld-find-name 1617,74882
(defun mon-tld 1628,75258

naf-mode/naf-mode-french-roles.el,100
(defconst naf-mode-french-roles-primary182,5656
(defconst naf-mode-french-roles-secondary296,8992

naf-mode/mon-doc-help-css.el,274
(defgroup mon-doc-help-css 140,4685
(defcustom *mon-doc-help-css-xrefs* 153,5201
(defun mon-help-css-check 180,6412
(defun mon-help-css-complete 321,11661
(defun mon-help-css-mode 431,15066
(defun mon-help-css-color 486,16947
(defun mon-help-css-properties 587,20195

naf-mode/mon-button-utils.el,830
(defgroup mon-button-utils 124,3625
(defcustom *mon-button-utils-xrefs* 138,4233
(defvar *mon-default-button-map*159,5092
(define-button-type 'mon-default-button mon-default-button170,5472
(defun mon-button-at-point-p 184,5985
(defun mon-button-at-point-describe-button-plist 224,8138
(defun mon-button-get-plist 244,9139
(defun mon-button-get-plist-props 284,11337
(defalias 'mon-get-button-plist-props mon-get-button-plist-props306,12367
(defun mon-follow-button 314,12625
(defun tt--make-test-button 380,14878
(defvar *naf-button-map* 406,15825
(defface naf-mode-artist-face-inverted420,16284
(define-button-type 'naf-dirnaf-dir436,16742
(define-button-type 'naf-artist naf-artist452,17334
(defun insert-naf-artist-button 479,18324
(defun naf-btn-activate 500,19070
(defun naf-next-label-button 515,19550

naf-mode/naf-mode-intnl-city-names.el,99
(defconst naf-mode-intnl-auction-city-names110,3131
(defconst naf-mode-intnl-city-names390,10691

naf-mode/mon-replacement-utils.el,3554
(defgroup mon-replacement-utils 195,7984
(defcustom *mon-replacement-utils-xrefs* 210,8615
(defun mon-is-naf-mode-p 263,11918
(defvar *naf-mode-buffer-local-llm* 310,14189
(defun mon-is-naf-mode-and-llm-p 318,14566
(defvar *iso-latin-1-approximation* 374,17097
(defun mon-make-iso-latin-1-approximation 381,17492
(defun mon-make-iso-latin-1-approximation-loadtime 401,18438
(defun mon-cln-iso-latin-1 413,19093
(defmacro deftransmogrify 432,20079
(defun mon-transmogrify 448,20751
(defun mon-walk-regexps-in-file 484,22653
(defun %mon-filter-regexp-file-if 510,23900
(defun %mon-filtering-regexp-file-list 526,24447
(defun mon-replace-regexps-in-file-list 535,24855
(defun mon-replace-strings 594,27872
(defun mon-replace-regexp-while 627,29680
(defun mon-replace-string-while 636,30097
(defun mon-regexp-filter 644,30402
(defun mon-string-canonical 665,31376
(defun replace-string-pairs-region3 734,35473
(defun replace-string-pairs-region-no-props 765,36952
(defun mon-replace-string-pairs-region-no-insert 795,38403
(defun mon-get-list-yorp 840,40252
(defun mon-get-list-norp 858,41140
(defun mon-replace-region-regexp-lists-nonint 874,41857
(defun mon-replace-region-regexp-lists 912,43757
(defun mon-regexp-map-match 967,46637
(defun mon-regexp-map-match-in-region 1009,48697
(defvar *mon-regexp-unintern* 1101,53435
(defun mon-replace-unintern-w-query 1171,56664
(defun mon-cln-mail-headers 1267,61217
(defun mon-cln-csv-fields 1413,68430
(defun mon-cln-irc-log-buffer 1583,77089
(defun mon-cln-freenode-log 1615,78426
(defun mon-cln-file-name-string 1640,79386
(defun mon-cln-html-chars 1667,80596
(defun mon-cln-html-tags 1684,81381
(defun mon-cln-xml-escapes 1724,83521
(defun mon-cln-xml<-parsed 1762,85495
(defun mon-cln-tgm-xml-LF 1792,86882
(defun mon-cln-xml<-parsed-strip-nil 1812,87623
(defun mon-cln-up-colon 1842,88994
(defun mon-downcase-hex-values 1913,92528
(defun mon-upcase-commented-lines 1929,93318
(defun mon-zippify-region 1946,94205
(defun mon-toggle-case-query-user 1964,94858
(defun mon-toggle-case-regexp-region 2010,97280
(defun mon-toggle-case-regexp 2053,99594
(defun mon-downcase-regexp-region 2110,102496
(defun mon-upcase-regexp-region 2129,103637
(defun mon-downcase-regexp 2149,104791
(defun mon-upcase-regexp 2171,105901
(defun mon-cln-BIG-whitespace 2196,107123
(defun mon-cln-whitespace 2245,109548
(defun mon-cln-trail-whitespace 2266,110507
(defun mon-kill-whitespace 2286,111335
(defun mon-cln-blank-lines 2301,112002
(defun mon-cln-spc-tab-eol 2322,112945
(defun mon-cln-spc-tab-at-eol-in-region 2344,113968
(defun mon-cln-uniq-lines 2371,115038
(defun mon-exchange-slash-and-backslash 2405,116517
(defun mon-cln-control-M 2425,117536
(defun mon-cln-piped-list 2445,118337
(defun mon-delete-back-up-list 2494,120483
(defun naf-backup-the-list 2536,122497
(defun mon-cln-philsp 2546,122856
(defun mon-cln-ulan 2583,124897
(defun mon-cln-imdb 2663,129227
(defun mon-cln-loc 2685,130204
(defun mon-cln-wiki 2707,131384
(defun mon-cln-bib 2724,132190
(defun mon-num-to-month 2739,132806
(defun mon-num-to-month-whitespace 2758,133611
(defun mon-month-to-num 2777,134539
(defun mon-abr-to-month 2795,135291
(defun mon-trans-cp1252-to-latin1 2814,136110
(defun mon-ital-date-to-eng 2833,136906
(defun mon-defranc-dates 2849,137613
(defun mon-defranc-places 2866,138401
(defun mon-cln-benezit 2885,139256
(defun mon-cln-benezit-fields 2903,140113
(defun mon-replace-common-abbrevs 2919,140814
(defun bug-cln-gilt-group 2942,141978

naf-mode/naf-mode-sql-skeletons.el,309
(define-skeleton mon-insert-sql-item-select89,2998
(define-skeleton mon-insert-sql-item-range-select98,3363
(define-skeleton mon-insert-sql-multiple-items-select108,3764
(defun mon-insert-sql-update 118,4280
(define-skeleton mon-insert-sql-item-update-skeleton158,6150
(define-skeleton item-naf167,7459

naf-mode/mon-name-utils.el,633
(defmacro mon-intern-artist 146,5231
(defun mon-string-rotate-name 166,6079
(defun mon-make-lastname-firstname 213,8049
(defun mon-make-names-list 249,9689
(defun mon-string-csv-rotate 280,11018
(defun mon-string-csv-regexp 295,11669
(defun mon-csv-to-perms 316,12666
(defvar *rotate-text-rotations* 372,15780
(defun mon-rotate-region 397,16858
(defun mon-rotate-string 431,18870
(defun mon-rotate-next 465,20920
(defun mon-rotate-get-rotations-for 501,23013
(defun mon-string-rotate-to-regexp 523,24365
(defun mon-indent-or-rotate 550,25678
(defun mon-make-name-return 571,26613
(defun mon-make-name-lispy 580,26995

naf-mode/naf-mode-nationality-english.el,144
(defvar *naf-mode-nationality-english-xrefs*81,2651
(defvar *naf-nationality-english*100,3391
(defconst naf-mode-nationality-english199,5076

naf-mode/naf-mode-wordfreq.el,43
(defconst *naf-mode-wordfreq-words*33,863

naf-mode/mon-doc-help-mail.el,81
(defun mon-help-mail-functons 142,5003
(defun mon-help-bbdb-functons 392,11141

naf-mode/mon-rectangle-utils.el,347
(defun mon-rectangle-columns 134,4169
(defun mon-rectangle-sum-column 159,5156
(defun mon-rectangle-operate-on 190,6623
(defun mon-rectangle-apply-on-region-points 224,8094
(defun mon-rectangle-downcase 246,9073
(defun mon-rectangle-upcase 255,9496
(defun mon-rectangle-capitalize 263,9818
(defun mon-kill-rectangle-w-beer-belly 276,10536

naf-mode/mon-syntax-utils.el,533
(defun mon-read-unreadable-object 62,2100
(defun mon-get-text-properties-elisp-string2 343,15515
(defun mon-get-text-properties-map-ranges-string-chk-type 416,18665
(defun mon-get-text-properties-map-ranges-compensate 614,29621
(cl-defun mon-get-text-properties-map-ranges-string 636,30435
(defun mon-syn-rng-scn-psn-at 753,34430
(defun mon-syn-parse-args 758,34579
(defun mon-syn-skp-to6 805,36100
(defun mon-syn-rng-scn6 830,37186
(defun rng-scn-2-3 838,37325
(defun mon-lisp-font-lock-syntactic-face-function 918,40083

naf-mode/mon-hash-utils.el,835
(defun mon-hash-get-symbol-name-if 172,6139
(defun mon-hash<-vector 314,12742
(defun mon-hash-make-size 329,13577
(defun mon-hash-from-alist 357,14997
(defun mon-hash-to-alist 377,15928
(defun mon-hash-add-uniquify 396,16824
(defun mon-hash-readlines-file 424,18141
(defun mon-hash-readlines-buffer 444,19095
(defun mon-hash-all-values 477,20652
(defun mon-hash-all-keys 492,21326
(defun mon-hash-to-list 507,22000
(defmacro mon-hash-get-keys 529,22967
(defmacro mon-hash-get-items 571,25123
(defmacro mon-hash-get-values 591,26130
(defmacro mon-hash-get-symbol-keys 611,27146
(defmacro mon-hash-get-string-keys 654,29502
(defmacro mon-hash-has-key 686,30931
(defmacro mon-hash-put-CL 706,31868
(defun mon-hash-describe 745,33683
(defun mon-hash-describe-descend 786,35412
(defun mon-hash-table-complete 810,36313

naf-mode/mon-dir-locals-alist.el,1107
(defgroup mon-dir-locals 148,5069
(defcustom *mon-bind-dir-locals-alist* 164,5750
(defcustom *mon-dir-locals-alist-xrefs*174,6147
(defcustom *mon-HG-root-path* 202,7601
(defcustom *mon-smith-poster-HG-path* 215,8124
(defcustom *mon-CL-scratch-path* 236,9004
(defcustom *bug-HG-path* 252,9641
(defcustom *mon-record-current-directory* 269,10306
(defcustom *emacs2html-temp* 287,11013
(defcustom *mon-html-fontify-file-name-template* 304,11805
(defcustom *mon-artist-naf-path* 319,12568
(defcustom *mon-brand-naf-path* 344,13571
(defcustom *mon-nef-scan-drive* 363,14318
(defcustom *mon-nef-scan-base-path* 375,14906
(defcustom *mon-nef-scan-path* 396,15892
(defcustom *mon-nef-scan-nefs-path* 412,16545
(defvar *mon-nefs_photos_nefs-alist* 433,17587
(defcustom *mon-nef-scan-nef2-path* 444,18214
(defcustom *mon-ebay-images-path* 461,18968
(defcustom *mon-ebay-images-bmp-path* 479,19765
(defcustom *mon-ebay-images-jpg-path* 498,20636
(defcustom *mon-ebay-images-temp-path* 517,21523
(defcustom *mon-ebay-images-lookup-path* 538,22541
(defcustom *mon-buffer-mode-defaults* 569,24201

naf-mode/mon-type-utils.el,1355
(defgroup mon-type-utils 193,7844
(defcustom *mon-type-utils-xrefs*208,8362
(defun mon-function-object-p 264,11151
(defun mon-symbol-cells-bound-p 439,21264
(defun mon-equality-or-predicate 533,26723
(defun mon-booleanp 580,29242
(defun mon-xor 629,31675
(defun mon-bitset-ternary 639,32059
(defun mon-string-or-null-and-zerop 674,33360
(defun mon-string-not-null-nor-zerop 701,34672
(defun mon-zero-or-onep 725,36010
(defun mon-booleanp-to-binary 772,38142
(defun mon-sequence-all-booleanp 825,40497
(defun mon-list-proper-p 962,48826
(defun mon-list-dotted-p 997,50461
(defun mon-list-proper-and-dotted-p 1022,51623
(defun mon-sequence-mappable-p 1049,53131
(defun mon-hash-or-mappable-p 1196,61412
(defvar *mon-bit-table* 1207,61910
(defun mon-get-bit-table 1219,62410
(defun mon-fractionp 1304,66572
(defun mon-integer-and-chacterp 1330,67633
(defun mon-char-code 1340,68045
(defun mon-alpha-char-p 1367,69163
(defun mon-is-digit 1391,70221
(defun mon-is-letter 1430,71861
(defun mon-is-alphanum 1460,73232
(defun mon-is-digit-simp 1488,74644
(defun mon-is-letter-simp 1507,75663
(defun mon-is-alphanum-simp 1526,76527
(defun mon-coerce->char 1554,77832
(defun mon-string-to-symbol 1657,83526
(defun mon-symbol-to-string 1746,88160
(defun mon-string-to-sequence 1781,89870
(defun mon-string-from-sequence 1825,92273

naf-mode/mon-aliases.el,22175
(defalias 'atomp atomp275,11071
(defalias 'line-join-previous line-join-previous279,11199
(defalias 'stringp-or-null stringp-or-null283,11350
(defalias 'char-or-stringp char-or-stringp287,11495
(defalias 'string-or-characterp string-or-characterp291,11650
(defalias 'character-or-strinp character-or-strinp295,11808
(defalias 'shell-command-async shell-command-async299,11965
(defalias 'asynchronous-shell-command asynchronous-shell-command303,12139
(defalias 'menubar-mode menubar-mode307,12292
(defalias 'make-array make-array389,15555
(defalias 'macrop macrop396,15807
(defalias 'mon-string-combine-and-quote mon-string-combine-and-quote414,16330
(defalias 'mon-string-split-and-unquote mon-string-split-and-unquote418,16522
(defalias 'mon-replace-char-in-region mon-replace-char-in-region422,16709
(defalias 'mon-delq-alist mon-delq-alist429,16998
(defalias 'mon-string-set-char-at-idx mon-string-set-char-at-idx436,17313
(defalias 'mon-string-insert-string-at-idx mon-string-insert-string-at-idx447,17917
(defalias 'mon-skip-whitespace mon-skip-whitespace468,18865
(defalias 'mon-save-restricton mon-save-restricton490,19837
(defalias 'mon-sort-alist mon-sort-alist494,19990
(defalias 'mon-macrop mon-macrop502,20314
(defalias 'mon-string-prefix-p mon-string-prefix-p506,20459
(defalias 'mon-list-chop mon-list-chop518,21007
(defalias 'mon-buffer-do-with-undo-disabled mon-buffer-do-with-undo-disabled530,21585
(defalias 'mon-window-get-if-buffer mon-window-get-if-buffer534,21800
(defalias 'mon-buffer-name-print-readably mon-buffer-name-print-readably538,22014
(defalias 'mon-buffer-get-w-mode mon-buffer-get-w-mode542,22224
(defalias 'mon-functionp mon-functionp546,22375
(defalias 'mon-one-or-zerop mon-one-or-zerop550,22525
(defalias 'mon-1-or-0-p mon-1-or-0-p554,22664
(defalias 'mon-1-or-0-p mon-1-or-0-p558,22799
(defalias 'mon-zerop-or-one mon-zerop-or-one562,22942
(defalias 'mon-boolean-to-binary mon-boolean-to-binary566,23099
(defalias 'mon-t-to-1 mon-t-to-1570,23245
(defalias 'mon-true-to-one mon-true-to-one574,23390
(defalias 'mon-nil-to-0 mon-nil-to-0578,23534
(defalias 'mon-false-to-zero mon-false-to-zero582,23685
(defalias 'mon-split-string mon-split-string586,23839
(defalias 'mon-string->symbol mon-string->symbol590,23991
(defalias 'mon-symbol->string mon-symbol->string594,24149
(defalias 'mon-string-from-symbol mon-string-from-symbol598,24318
(defalias 'mon-string<-symbol mon-string<-symbol602,24479
(defalias 'mon-sequence-to-string mon-sequence-to-string606,24647
(defalias 'mon-seq->string mon-seq->string610,24806
(defalias 'mon-string-suffix-p mon-string-suffix-p614,24967
(defalias 'mon-replace-char-in-string mon-replace-char-in-string618,25143
(defalias 'mon-remove-char-in-string mon-remove-char-in-string622,25326
(defalias 'mon-indent-lines-from-to-col mon-indent-lines-from-to-col626,25513
(defalias 'mon-generate-wonky mon-generate-wonky630,25690
(defalias 'mon-hex-list-as-string mon-hex-list-as-string634,25854
(defalias 'mon-string-escape-lisp-region mon-string-escape-lisp-region638,26041
(defalias 'mon-lisp-escape-region mon-lisp-escape-region642,26226
(defalias 'mon-string-unescape-lisp-region mon-string-unescape-lisp-region646,26422
(defalias 'mon-lisp-unescape-region mon-lisp-unescape-region650,26615
(defalias 'mon-string-ify-current-line mon-string-ify-current-line654,26808
(defalias 'with-print-gensyms with-print-gensyms669,27227
(defalias 'nshuffle-vector nshuffle-vector673,27403
(defalias 'with-gensyms with-gensyms678,27658
(defalias 'buffer-exists-p buffer-exists-p685,27965
(defalias 'mon-buffer-print-in-if mon-buffer-print-in-if691,28182
(defalias 'mon-get-text-properties-region->kill-ring mon-get-text-properties-region->kill-ring706,28658
(defalias 'mon-kill-ring-save-w-props mon-kill-ring-save-w-props710,28876
(defalias 'mon-help-face-next-property-change mon-help-face-next-property-change714,29095
(defalias 'mon-remove-text-with-property mon-remove-text-with-property718,29303
(defalias 'mon-remove-text-properties-region-all mon-remove-text-properties-region-all722,29522
(defalias 'mon-remove-all-text-properties-region mon-remove-all-text-properties-region726,29748
(defalias 'write-string write-string741,30194
(defalias 'mon-prin1-char->?char mon-prin1-char->?char746,30362
(defalias 'buffer-narrowed-p buffer-narrowed-p768,31214
(defalias 'get-buffer-window-if get-buffer-window-if772,31399
(defalias 'goto-line-25% goto-line-25%776,31575
(defalias 'goto-line-50% goto-line-50%780,31737
(defalias 'goto-line-75% goto-line-75%784,31899
(defalias 'mon-buffer-end mon-buffer-end790,32097
(defalias 'mon-get-hidden-buffers mon-get-hidden-buffers794,32246
(defalias 'mon-help-hidden-buffers mon-help-hidden-buffers798,32418
(defalias 'mon-buffer-get-hidden mon-buffer-get-hidden802,32587
(defalias 'mon-longlines-mode-p mon-longlines-mode-p806,32755
(defalias 'mon-buffer-append-to mon-buffer-append-to810,32925
(defalias 'mon-buffer-make-shell mon-buffer-make-shell814,33090
(defalias 'mon-buffer-get-shell mon-buffer-get-shell818,33255
(defalias 'mon-kill-hidden-buffer-if mon-kill-hidden-buffer-if822,33417
(defalias 'mon-buffer-get-hidden-if mon-buffer-get-hidden-if826,33598
(defvaralias '*mon-help-hidden-buffers-known* *mon-help-hidden-buffers-known*831,33813
(defalias 'next-almost-prime next-almost-prime846,34263
(defalias 'mon-get-next-almost-prime mon-get-next-almost-prime852,34491
(defalias 'mon-rectangle-kill-w-longest-line mon-rectangle-kill-w-longest-line867,34957
(defalias 'mon-line-keep-match mon-line-keep-match882,35396
(defalias 'mon-line-delete-match mon-line-delete-match886,35552
(defalias 'mon-line-count-match mon-line-count-match890,35708
(defalias 'mon-line-join-previous mon-line-join-previous894,35865
(defalias 'mon-line-same-p mon-line-same-p899,36049
(defalias 'mon-get-window-plist mon-get-window-plist914,36467
(defalias 'mon-window-map-active-to-plist mon-window-map-active-to-plist918,36652
(defalias 'mon-buffer-get-scratch mon-buffer-get-scratch922,36831
(defalias 'mon-buffer-get-messages mon-buffer-get-messages926,36993
(defalias 'mon-buffer-kill-completions mon-buffer-kill-completions930,37175
(defalias 'mon-window-flip mon-window-flip934,37335
(defalias 'mon-window-split-horiz mon-window-split-horiz938,37493
(defalias 'mon-window-split-vert mon-window-split-vert942,37659
(defalias 'delq-dups delq-dups957,38061
(defalias 'mon-string-longest-in-list mon-string-longest-in-list963,38274
(defalias 'mon-reorder-vector mon-reorder-vector967,38444
(defalias 'mon-sequence-reorder mon-sequence-reorder971,38602
(defalias 'mon-list-union mon-list-union975,38749
(defalias 'mon-list-member-if mon-list-member-if979,38892
(defalias 'mon-list-delete-if mon-list-delete-if983,39044
(defalias 'mon-list-remove-if-not mon-list-remove-if-not987,39202
(defalias 'mon-list-remove-if mon-list-remove-if991,39360
(defalias 'mon-list-intersect mon-list-intersect995,39511
(defalias 'mon-list-set-diff mon-list-set-diff999,39664
(defalias 'mon-list-nqueue mon-list-nqueue1003,39813
(defalias 'mon-list-flatten mon-list-flatten1007,39975
(defalias 'mon-rotate-flatten-list mon-rotate-flatten-list1011,40131
(defalias 'mon-list-mismatch mon-list-mismatch1015,40297
(defalias 'mon-list-combine mon-list-combine1019,40441
(defalias 'mon-map-combine mon-map-combine1023,40581
(defalias 'mon-list-permute-combine mon-list-permute-combine1027,40738
(defalias 'mon-list-permute-combine-1 mon-list-permute-combine-11031,40916
(defalias 'mon-list-recurse-apply mon-list-recurse-apply1035,41092
(defalias 'mon-merge-list mon-merge-list1039,41244
(defalias 'mon-list-delq-dups mon-list-delq-dups1043,41389
(defalias 'mon-delete-dups-eql mon-delete-dups-eql1047,41543
(defalias 'mon-list-deleql-dups mon-list-deleql-dups1051,41701
(defalias 'mon-list-delete-first mon-list-delete-first1055,41864
(defalias 'mon-list-remove-dups mon-list-remove-dups1059,42024
(defalias 'mon-list-transpose mon-list-transpose1063,42178
(defalias 'mon-bool-vector-to-list mon-bool-vector-to-list1067,42338
(defalias 'mon-list-ify-bool-vector mon-list-ify-bool-vector1071,42513
(defalias 'mon-boolean-vector-to-list mon-boolean-vector-to-list1075,42686
(defalias 'mon-pop2 mon-pop21079,42830
(defalias 'mon-list-pop2 mon-list-pop21090,43185
(defalias 'mon-region-append-to-register mon-region-append-to-register1109,43799
(defalias 'mon-append-next-kill mon-append-next-kill1113,43973
(defalias 'mon-register-append mon-register-append1117,44132
(defalias 'mon-read-keys-last-event mon-read-keys-last-event1121,44305
(defalias 'mon-string-from-keyboard-input mon-string-from-keyboard-input1125,44492
(defalias 'alpha-char-p alpha-char-p1140,44916
(defalias 'zerop-or-one zerop-or-one1144,45051
(defalias 'proper-list-p proper-list-p1148,45188
(defalias 'string-or-null-and-zerop string-or-null-and-zerop1153,45353
(defalias 'stringp-and-zerop-or-null stringp-and-zerop-or-null1157,45539
(defalias 'string-not-null-or-zerop string-not-null-or-zerop1161,45724
(defalias 'stringp-not-null-nor-zerop stringp-not-null-nor-zerop1165,45913
(defalias 'mon-is-alpha-char mon-is-alpha-char1171,46156
(defalias 'mon-proper-list-p mon-proper-list-p1175,46306
(defalias 'mon-dotted-list-p mon-dotted-list-p1179,46457
(defalias 'mon-list-dotted-and-proper-p mon-list-dotted-and-proper-p1183,46630
(defalias 'mon-list-mappable-p mon-list-mappable-p1187,46808
(defalias 'mon-mappable-sequence-p mon-mappable-sequence-p1191,46980
(defalias 'mon-list-all-booleanp mon-list-all-booleanp1195,47151
(defalias 'mon-byte-table-bits mon-byte-table-bits1200,47399
(defalias 'mon-bit-table-bits mon-bit-table-bits1204,47554
(defalias 'mon-char-coerce mon-char-coerce1208,47695
(defalias 'mon-symbol-cells-boundp mon-symbol-cells-boundp1212,47847
(defalias 'mon-capitalize-region mon-capitalize-region1228,48313
(defalias 'mon-region-reverse-chars mon-region-reverse-chars1232,48510
(defalias 'mon-region-wrap mon-region-wrap1236,48665
(defalias 'mon-string-split-commas mon-string-split-commas1240,48828
(defalias 'mon-split-region-at-commas mon-split-region-at-commas1244,49010
(defalias 'mon-indent-refill-region mon-indent-refill-region1248,49191
(defalias 'mon-indent-region-refill mon-indent-region-refill1252,49371
(defalias 'mon-region-refill-indent mon-region-refill-indent1256,49551
(defalias 'mon-region-count-regexp-matches mon-region-count-regexp-matches1260,49744
(defalias 'mon-string-at-point mon-string-at-point1273,50127
(defalias 'mon-permute-string mon-permute-string1295,50709
(defalias 'mon-buffer-get-word-list mon-buffer-get-word-list1308,51111
(defalias 'mon-region-reverse-words mon-region-reverse-words1312,51293
(defalias 'mon-reverse-region-words mon-reverse-region-words1316,51495
(defalias 'mon-buffer-get-word-count mon-buffer-get-word-count1320,51677
(defalias 'mon-make-list-alphabet mon-make-list-alphabet1335,52131
(defalias 'file-truename-p file-truename-p1350,52553
(defalias 'file-attributes-plist file-attributes-plist1354,52713
(defalias 'directory-attributes-plist directory-attributes-plist1358,52899
(defalias 'find-buffer-visiting-other-live-frame find-buffer-visiting-other-live-frame1362,53114
(defalias 'get-buffer-visiting-other-live-frame get-buffer-visiting-other-live-frame1366,53348
(defalias 'frame-live-visible-graphic-p frame-live-visible-graphic-p1370,53564
(defalias 'mon-move-file mon-move-file1378,53890
(defalias 'mon-mv-file mon-mv-file1382,54020
(defalias 'mon-file-move mon-file-move1386,54152
(defalias 'mon-file-mv mon-file-mv1390,54283
(defalias 'mon-rename-file mon-rename-file1394,54416
(defalias 'mon-rnm-file mon-rnm-file1398,54550
(defalias 'mon-file-rename mon-file-rename1402,54687
(defalias 'mon-file-rnm mon-file-rnm1406,54821
(defalias 'dired-find-file-other-frame dired-find-file-other-frame1412,55042
(defalias 'dired-up-here dired-up-here1416,55209
(defalias 'dired-uninsert-subdir dired-uninsert-subdir1420,55381
(defalias 'dired-subdir-uninsert dired-subdir-uninsert1424,55552
(defalias 'dired-uninsert-subdir-all dired-uninsert-subdir-all1428,55731
(defalias 'dired-subdir-uninsert-all dired-subdir-uninsert-all1432,55918
(defalias 'mon-get-buffer-visiting-other-live-frame mon-get-buffer-visiting-other-live-frame1438,56191
(defalias 'mon-file-attributes-plist mon-file-attributes-plist1442,56407
(defalias 'mon-directory-attributes-plist mon-directory-attributes-plist1446,56608
(defalias 'mon-dired-toggle-dwim-target mon-dired-toggle-dwim-target1450,56807
(defalias 'mon-dired-kill-files-to-list mon-dired-kill-files-to-list1454,57003
(defalias 'mon-dired-copy-files-to-list mon-dired-copy-files-to-list1458,57198
(defalias 'mon-dired-kill-files-to-strings mon-dired-kill-files-to-strings1462,57399
(defalias 'mon-dired-copy-files-to-strings mon-dired-copy-files-to-strings1466,57605
(defalias 'mon-directory-get-size mon-directory-get-size1470,57793
(defalias 'mon-buffer-get-new-w-stamp mon-buffer-get-new-w-stamp1474,57968
(defalias 'mon-dir-name-absolute mon-dir-name-absolute1478,58146
(defalias 'mon-dir-name-relative-w-absolute mon-dir-name-relative-w-absolute1482,58340
(defalias 'mon-file-copy-in-sub-dirs mon-file-copy-in-sub-dirs1486,58533
(defalias 'mon-file-copy-multiple mon-file-copy-multiple1490,58712
(defalias 'mon-make-path mon-make-path1494,58866
(defalias 'mon-buffer-string-split-name mon-buffer-string-split-name1498,59033
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1502,59242
(defalias 'mon-buffer-string-split-parent-dir mon-buffer-string-split-parent-dir1506,59462
(defalias 'mon-buffer-get-parent-dir mon-buffer-get-parent-dir1510,59664
(defalias 'mon-dir-name-truncate-for-prompt mon-dir-name-truncate-for-prompt1514,59862
(defalias 'mon-dir-recurse-string-split mon-dir-recurse-string-split1518,60062
(defalias 'mon-buffer-string-split-dir-recurse mon-buffer-string-split-dir-recurse1522,60272
(defalias 'mon-get-dir-common-path mon-get-dir-common-path1526,60465
(defalias 'mon-buffer-subdirs-insert mon-buffer-subdirs-insert1530,60642
(defalias 'mon-dir-get-subdir mon-dir-get-subdir1534,60815
(defalias 'mon-file-rename-serial mon-file-rename-serial1538,60987
(defalias 'mon-file-copy-path mon-file-copy-path1542,61152
(defalias 'mon-buffer-file-copy-path mon-buffer-file-copy-path1546,61329
(defalias 'mon-buffer-get-directories mon-buffer-get-directories1550,61508
(defalias 'mon-dir-get-subdirs-descend mon-dir-get-subdirs-descend1554,61699
(defalias 'mon-get-directory-and-subdirs-list mon-get-directory-and-subdirs-list1558,61894
(defalias 'mon-dir-async-du mon-dir-async-du1562,62067
(defalias 'mon-directory-du-async mon-directory-du-async1566,62227
(defalias 'mon-du-async-dir mon-du-async-dir1570,62381
(defalias 'w3m-copy-this-url-as-kill w3m-copy-this-url-as-kill1586,62804
(defalias 'w3m-copy-current-url-as-kill w3m-copy-current-url-as-kill1590,62986
(defalias 'mon-url-escape mon-url-escape1594,63146
(defalias 'mon-encode-url mon-encode-url1598,63285
(defalias 'mon-url-unescape mon-url-unescape1602,63428
(defalias 'mon-decode-url mon-decode-url1606,63569
(defalias 'mon-search-wiki mon-search-wiki1610,63710
(defalias 'mon-buffer-get-retrieved-url mon-buffer-get-retrieved-url1614,63884
(defalias 'mon-get-w3m-dired-file mon-get-w3m-dired-file1618,64069
(defalias 'mon-w3m-get-url-at-point-maybe mon-w3m-get-url-at-point-maybe1622,64253
(defalias 'mon-w3m-get-url-at-point mon-w3m-get-url-at-point1626,64444
(defalias 'mon-get-w3m-read-gnu-lists-nxt-prv mon-get-w3m-read-gnu-lists-nxt-prv1630,64643
(defalias 'mon-line-strings-region-delimited mon-line-strings-region-delimited1646,65119
(defalias 'mon-line-strings-get-delimited-region mon-line-strings-get-delimited-region1650,65336
(defalias 'mon-function-arity mon-function-arity1654,65519
(defalias 'mon-function-args mon-function-args1658,65679
(defalias 'mon-insert-documentation mon-insert-documentation1662,65850
(defalias 'mon-help-reference-sheet mon-help-reference-sheet1666,66035
(defalias 'mon-help-finder-keywords mon-help-finder-keywords1670,66208
(defalias 'mon-help-directory-file-functions-usage mon-help-directory-file-functions-usage1674,66419
(defalias 'mon-help-network-process mon-help-network-process1678,66622
(defalias 'mon-help-types mon-help-types1682,66786
(defalias 'mon-help-face-functions mon-help-face-functions1686,66954
(defalias 'mon-help-charset-coding-functions mon-help-charset-coding-functions1690,67141
(defalias 'mon-help-ascii-chars mon-help-ascii-chars1694,67328
(defalias 'mon-help-ecma-48-chars-cntl->hex mon-help-ecma-48-chars-cntl->hex1698,67516
(defalias 'mon-help-cntl->hex->ecma-35 mon-help-cntl->hex->ecma-351702,67707
(defalias 'mon-help-time-iso-8601 mon-help-time-iso-86011706,67884
(defalias 'mon-help-elisp-info mon-help-elisp-info1710,68045
(defvaralias '*reference-sheet-help-A-HAWLEY* *reference-sheet-help-A-HAWLEY*1715,68254
(defvaralias '*doc-cookie* *doc-cookie*1719,68428
(defalias 'mon-help-cl-packages mon-help-cl-packages1732,68783
(defalias 'mon-help-slime-keys mon-help-slime-keys1736,68933
(defalias 'mon-help-swank-functions mon-help-swank-functions1740,69097
(defalias 'mon-help-cl-symbols mon-help-cl-symbols1744,69261
(defalias 'mon-hyperspec-lookup mon-hyperspec-lookup1748,69415
(defalias 'mon-help-CL-reader-macro-syntax mon-help-CL-reader-macro-syntax1752,69592
(defalias 'mon-help-csstidy mon-help-csstidy1768,70030
(defalias 'mon-help-bzr-commands mon-help-bzr-commands1783,70442
(defalias 'mon-stamp-date-only mon-stamp-date-only1798,70862
(defalias 'mon-today-stamp mon-today-stamp1802,71009
(defvaralias '*mon-emacs2html-temp* *mon-emacs2html-temp*1821,71673
(defalias 'comment-divider comment-divider1841,72206
(defalias 'mon-string-n-fancy-times mon-string-n-fancy-times1847,72431
(defalias 'mon-string-insert-n-times mon-string-insert-n-times1851,72619
(defalias 'mon-comment-divider->col mon-comment-divider->col1855,72801
(defalias 'mon-lisp-comment-to-col mon-lisp-comment-to-col1859,72981
(defalias 'mon-insert-doc-xref-eg mon-insert-doc-xref-eg1863,73154
(defalias 'mon-CL-package-complete mon-CL-package-complete1867,73333
(defalias 'mon-insert-CL-mode-line-template mon-insert-CL-mode-line-template1871,73532
(defalias 'mon-add-lisp-CL-file-local-prop-template mon-add-lisp-CL-file-local-prop-template1875,73765
(defalias 'mon-insert-CL-file-template mon-insert-CL-file-template1879,73981
(defalias 'mon-insert-CL-package-template mon-insert-CL-package-template1883,74184
(defalias 'mon-insert-CL-eval-when mon-insert-CL-eval-when1888,74380
(defalias 'mon-insert-CL-debug mon-insert-CL-debug1892,74553
(defalias 'mon-insert-jump-lisp-doc mon-insert-jump-lisp-doc1896,74728
(defalias 'bug-insert-copyright bug-insert-copyright1902,74981
(defalias 'mon-insert-naf-mode-file-template mon-insert-naf-mode-file-template1910,75382
(defvaralias '*regexp-version-alist* *regexp-version-alist*1924,75803
(defvaralias '*whitespace-chars* *whitespace-chars*1929,75991
(defvaralias '*mon-digit-chars* *mon-digit-chars*1933,76160
(defalias 'replace-char-in-string-mon replace-char-in-string-mon1960,77170
(defalias 'replace-in-string-mon replace-in-string-mon1964,77342
(defalias 'mon-replace-char-in-string mon-replace-char-in-string1972,77638
(defalias 'mon-canonical-string mon-canonical-string1980,77928
(defalias 'mon-map-regexp-matches mon-map-regexp-matches1984,78095
(defalias 'mon-map-regexp-matches-in-region mon-map-regexp-matches-in-region1988,78276
(defalias 'mon-region-increment-line-numbers mon-region-increment-line-numbers1992,78488
(defalias 'mon-region-increment-numbered-lines mon-region-increment-numbered-lines1996,78702
(defalias 'mon-cln-duplicate-lines mon-cln-duplicate-lines2001,78895
(defalias 'mon-remove-duplicate-lines mon-remove-duplicate-lines2005,79082
(defalias 'naf-delete-back-up-list naf-delete-back-up-list2010,79267
(defalias 'mon-defranc-benezit mon-defranc-benezit2014,79435
(defalias 'mon-defranc-benezit-fields mon-defranc-benezit-fields2018,79605
(defalias 'mon-cln-common-abbrevs mon-cln-common-abbrevs2023,79784
(defalias 'list-colors-defined list-colors-defined2040,80275
(defalias 'mon-color-list-defined mon-color-list-defined2048,80551
(defalias 'mon-color-read mon-color-read2053,80744
(defalias 'mon-color-list-duplicates mon-color-list-duplicates2057,80902
(defalias 'mon-color-list-display mon-color-list-display2061,81077
(defalias 'get-bmps-in-dir get-bmps-in-dir2078,81567
(defalias 'get-nefs-in-dir get-nefs-in-dir2082,81720
(defalias 'mon-get-ebay-bmps-list mon-get-ebay-bmps-list2090,82003
(defalias 'mon-rotate-images mon-rotate-images2107,82502
(defalias 'mon-identify-image mon-identify-image2111,82655
(defalias 'boxcutter-verify-image-type boxcutter-verify-image-type2129,83148
(defalias 'naf-drive-dired-artist-letter naf-drive-dired-artist-letter2142,83548
(defalias 'naf-dired-artist-letter naf-dired-artist-letter2146,83733
(defalias 'naf-drive-dired-brand-letter naf-drive-dired-brand-letter2150,83936
(defalias 'naf-dired-brand-letter naf-dired-brand-letter2154,84117
(defalias 'slot-makunbound slot-makunbound2168,84630
(defalias 'slime-next-xref slime-next-xref2179,84965
(defalias 'slime-prev-xref slime-prev-xref2183,85112
(defalias 'mon-slime-insert-arglist mon-slime-insert-arglist2187,85277
(defalias 'mon-slime-quit-description mon-slime-quit-description2191,85460
(defalias 'slime-compile-defun-for-debug slime-compile-defun-for-debug2195,85658
(defalias 'slime-copy-presentation-at-point-to-kill-ring-no-props slime-copy-presentation-at-point-to-kill-ring-no-props2200,85958
(defalias 'slime-copy-presentation-to-kill-ring-no-props slime-copy-presentation-to-kill-ring-no-props2204,86235

naf-mode/mon-eight-bit-raw-utils.el,38
(defun mon-cln-eight-bit-raw 88,2797

naf-mode/mon-cifs-utils.el,909
(defvar *mon-CIFS-misc-path-alist*161,6068
(defvar *mon-CIFS-auth-protocol* 200,8235
(defvar *mon-CIFS-workgroup* 215,8888
(defvar *mon-CIFS-domain* 222,9112
(defvar *mon-CIFS-user* 241,10040
(defvar *mon-CIFS-pass* 253,10536
(defvar *mon-CIFS-mount-root* 264,11020
(defvar *mon-CIFS-vars-unbound* 277,11576
(defvar *mon-CIFS-mount-points* 300,12748
(defun mon-map-cifs-domain->local-mount 334,14876
(defun mon-get-cifs-credentials 381,17595
(defun mon-build-cifs-credentials 426,19990
(defun mon-get-cifs-mount-points 459,21742
(defun mon-mount-cifs 488,23102
(defun mon-unmount-cifs 553,26612
(defun mon-verify-cifs-credentials 569,27462
(defun mon-inform-cifs-credentials-unbound 597,28867
(defun mon-bind-cifs-vars-at-loadtime 661,32673
(defvar *mon-auth-source-debug-var* 743,37443
(defvar *mon-auth-source-cache-debug-var* 754,38044
(defun mon-spit-auth-source-debug->var 783,39667

naf-mode/mon-time-utils.el,945
(defun mon-comment-divider-w-len 304,13213
(cl-defun mon-date-stamp 361,16354
(defun mon-get-current-year 416,19397
(defun mon-format-iso-8601-time 439,20450
(defun mon-file-older-than-file-p 499,23882
(defun mon-get-file-mod-times 543,26129
(defun mon-conv-time-flt-pnt 595,29101
(defun mon-comp-times-flt-pnt 617,30216
(defun mon-accessed-time-stamp 644,31543
(cl-defun mon-timestamp 661,32325
(defun mon-stamp 756,37861
(defun mon-accessed-stamp 781,38971
(cl-defun mon-stamp-in-context 812,40404
(defun mon-lisp-stamp 904,45974
(defun mon-file-stamp-vrfy-put-eof 973,49721
(defun mon-file-stamp 1023,52423
(defun mon-file-stamp-minibuffer 1231,64444
(defun mon-file-stamp-buffer-filename 1282,66693
(defun mon-convert-ebay-time 1338,69998
(defun mon-convert-ebay-time-mvb 1373,71897
(defun mon-cln-ebay-time-string 1398,73148
(defun mon-calculate-ebay-timezone-diff 1552,81333
(defun calendar-goto-doomsday 1597,83687

naf-mode/mon-testme-fancy.el,46
(defun mon-insert-lisp-testme-fancy 151,7599

naf-mode/mon-animate-nursery-rhymes.el,135
(defvar *mon-nursery-rhymes* 85,2656
(defun mon-animate-nursery-rhyme-sequence 912,36438
(defun mon-animate-nursery-rhyme 934,37450

mon-w32-load.el,525
(defun mon-maximize-frame-w32 116,3498
(defun mon-minimize-frame 125,3848
(defun mon-restore-frame 136,4261
(defun mon-menu-bar 145,4669
(defun mon-open-abbyy 167,5517
(defun mon-open-notepad++ 185,6184
(defun mon-open-fastone 200,6801
(defun mon-open-photoshop 216,7377
(defun mon-open-explorer 233,8064
(defalias 'mon-explorer-open mon-explorer-open247,8617
(defun mon-open-images-ed-swap 253,8800
(defun mon-open-program-files 270,9691
(defun mon-open-moz-down 284,10345
(defun mon-open-workspace 303,11218

mon-default-loads.el,1027
(defgroup mon-default-loads 142,4648
(defvar *IS-MON-OBARRAY* 156,5345
(defvar *IS-MON-OBARRAY-SYMS* 175,6086
(defcustom *mon-default-loads-xrefs* 194,6782
(defun mon-get-mon-emacsd-paths 227,8642
(defconst IS-W32-P292,12246
(defvaralias 'win32p win32p313,13263
(defconst IS-GNU-P321,13488
(defvaralias 'gnu-linuxp gnu-linuxp342,14534
(defconst IS-DARWIN-P351,14769
(defvaralias 'darwinp darwinp372,15826
(defconst IS-BUG-P 376,15901
(defconst IS-BUG-P-REMOTE 389,16563
(defconst IS-MON-P-W32 402,17246
(defconst IS-MON-P-GNU 416,17948
(defconst IS-MON-P-DARWIN 430,18636
(defconst IS-MON-P 445,19357
(defconst IS-NOT-A-MON-SYSTEM462,20265
(defconst IS-MON-SYSTEM-P484,21478
(defvar set-emacs-root 522,23387
(defconst *mon-emacs-root* 631,30091
(defconst *mon-site-lisp-root* 658,31498
(defconst *mon-naf-mode-root* 678,32596
(defconst *mon-naf-mode-notes* 700,33741
(defconst *mon-ebay-tmplt-mode-root* 721,34888
(defconst *mon-user-emacsd*743,36196
(defconst *mon-local-emacs-temp-dir*775,38155

mon-keybindings.el,649
(defgroup mon-keybindings 206,7421
(defcustom *mon-keybindings-xrefs* 224,8252
(defun mon-keybind-globally 254,9770
(defun mon-keybind-dired-mode 387,15406
(defun mon-keybind-completions 437,18065
(defun mon-keybind-info-mode 460,19274
(defun mon-keybind-w3m 544,22524
(defun mon-keybind-emacs-lisp-mode 669,28388
(defun mon-keybind-lisp-interaction-mode 729,31268
(defun mon-keybind-slime-selector-helper 765,33150
(defun mon-keybind-slime 782,33817
(defun mon-keybind-slime-inspector 984,44270
(defun mon-keybind-slime-fuzzy-completions 1022,46148
(defun mon-conf-stamp-in-context 1056,47676
(defun mon-keybind-conf-mode 1069,48219

mon-site-local-defaults.el,540
(defun mon-string-wonkify 110,4312
(defun mon-build-user-name-example 155,6416
(defun mon-build-user-name-example-TEST 209,9352
(defun mon-build-misc-path-example 239,10743
(defun mon-build-mon-emacsd-example 305,14193
(defun mon-user-name-conditionals 387,18268
(defun mon-system-type-conditionals 472,22856
(defun mon-user-system-conditionals-TEST 519,25231
(defconst *mon-emacsd* 573,28457
(defvar *mon-misc-path-alist* 609,30335
(defconst *MON-NAME* 671,33926
(defconst *BUG-NAME* 696,35247
(defvar *MON-ORG-NAME*718,36413

mon-post-load-hooks.el,687
(defgroup mon-post-load-hooks 126,3806
(defcustom *mon-post-load-hooks-xrefs* 144,4670
(defun mon-purge-cl-symbol-buffers-on-load 180,6412
(defvar *mon-post-load-hook-trigger-buffer* 222,8672
(defun mon-run-post-load-hooks-helper 241,9564
(defun mon-run-post-load-hooks 257,10473
(defun mon-purge-doc-view-cache-directory 354,15843
(defun mon-purge-thumbs-directory 372,16860
(defun mon-purge-slime-swank-port-file 392,17857
(defun mon-purge-tramp-persistency-file 409,18666
(defun mon-purge-temporary-file-directory 426,19632
(defvar *mon-purge-emacs-temp-file-dir-fncns* 450,20839
(defun mon-purge-emacs-temp-files-on-quit 473,21993
(defun mon-scratch-postload 503,23433

mon-default-start-loads.el,2732
(defgroup mon-default-start-loads 191,8021
(defcustom *mon-default-start-loads-xrefs* 247,10837
(defvar *mon-default-start-load-sanity* 300,13553
(defvar *mon-default-start-load-sanity-WARN-ONLY* 312,14172
(defun mon-build-path-for-load-path 325,14872
(defmacro mon-default-start-error/sane 333,15348
(defun mon-set-split-window-init 396,18503
(defun mon-set-load-path-init 427,19758
(defun mon-set-color-themes-init 470,21633
(defun mon-toggle-show-point-mode 539,24661
(defun mon-set-emacs-temp-file/dir-init 565,25993
(defun mon-set-infopath-init 646,30017
(defun mon-set-bookmark-file-init 758,37482
(defun mon-set-woman-manpath-init 817,40549
(defun mon-set-C-source-directory-init 873,43471
(defun mon-set-unicodedata-init 928,46540
(defun mon-set-bbdb-init 972,48517
(defun mon-set-desktop-init 1020,50828
(defun mon-set-printer-postscript-init 1039,51388
(defun mon-set-doc-view-programs-init 1090,54227
(defun mon-set-thumbs-conversion-program-init 1146,56780
(defun mon-set-boxcutter-init 1212,60315
(defun mon-set-image-dired-init 1249,62239
(defun mon-set-ispell-init 1439,69786
(defun mon-set-help-mode-init 1484,71696
(defun mon-set-ibuffer-init 1538,74331
(defun mon-set-ido-init 1562,75384
(defun mon-set-org-init 1645,79549
(defun mon-set-custom-customizations-init 1669,80312
(defun mon-set-customizations-before-custom-file-init 1713,82861
(defun mon-set-custom-file-init-w32-configs 1798,86641
(defun mon-set-custom-file-init 1845,88820
(defun mon-set-common-lisp-hspec-init 1897,91771
(defun mon-set-show-paren-init 1936,94005
(defun mon-set-lisp-init 1972,95982
(defun mon-set-proced-init 2032,99199
(defun mon-set-auctex-init 2055,100194
(defun mon-set-vc-init 2072,100835
(defun mon-set-magit-init 2090,101636
(defun mon-set-dvc-init 2163,106017
(defun mon-set-erc-configs-init 2219,109075
(defun mon-erc-post-cloak-autojoin 2301,112242
(defun mon-set-url-pkg-init 2316,112971
(defun mon-set-google-maps-init 2372,115346
(defun mon-set-w3m-init 2401,116663
(defun mon-set-browser-init 2440,118588
(defun mon-set-buffer-local-comment-start 2483,120986
(defun mon-set-buffer-local-comment-start-init 2507,122311
(defun mon-set-css-path-init 2550,124439
(defun mon-set-longlines-init 2591,126398
(defun mon-rst-mode-facification 2614,127327
(defun mon-set-rst-mode-faces-init 2630,128211
(defun mon-set-apache-mode-init 2651,129064
(defun mon-set-traverselisp-init 2677,130386
(defun mon-load-cedet 2704,131635
(defun mon-keybind-w32-init 2723,132469
(defun mon-keybind-put-hooks-init 2760,134247
(defun mon-set-github-paths-init 2796,136022
(defun mon-set-mon-feature-customs-init 2823,137340
(defun mon-set-system-specific-and-load-init 2896,140561

slime-loads-GNU.el,0

naf-mode/mon-loaddefs.el,0

naf-mode/naf-mode-bibliograpbhic-entry.el,0
